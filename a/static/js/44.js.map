{"version":3,"sources":["pages/setting/shipperEdit.js","actions/area/index.js","components/public/page/index.js","webpack:///./src/components/public/page/index.css?9024","components/public/page/index.css"],"names":["_react","__webpack_require__","_area","_reactRedux","_utils","_shipper","parseQuery","publicFunction","FormItem","_form2","default","Item","ShipperEdit","create","connect","state","areaList","info","id","name","province_id","city_id","area_id","address","contact_number","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","dispatch","params","location","search","areas","editShipper","Component","this","getShipperInfo","code","result","setState","getCascaderAreaList","_state","getFieldDecorator","_react2","createElement","_page2","onSubmit","style","width","labelCol","span","wrapperCol","label","initialValue","rules","required","message","_input2","placeholder","type","_cascader2","options","sm","offset","_button2","htmlType","getAreaList","_ref","Fetch","fetch","api","AreaApi","list","_callee","_regenerator2","wrap","_context","prev","next","level","tree","sent","abrupt","map","item","value","children","_child","length","sub","area","stop","undefined","_ref2","apply","arguments","getKeyAreaList","_callee2","_list","i","_context2","_ref3","className","styles","page","content","module","transform","locals","exports","push"],"mappings":"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","file":"static/js/44.js","sourcesContent":["// @flow\nimport React, { Component } from \"react\";\nimport { Input, Button, Form, Cascader } from 'antd';\nimport Page from '../../components/public/page'\nimport { getCascaderAreaList } from \"../../actions/area\";\nimport { connect } from \"react-redux\";\nimport { dispatchType, formType, handleSubmitType } from \"../../utils/flow\";\nimport { publicFunction } from \"../../utils\";\nimport { getShipperInfo, editShipper } from \"../../actions/deliver/shipper\";\n\nconst {\n    parseQuery\n} = publicFunction\n\nconst FormItem = Form.Item;\ntype Props = {\n    form: formType,\n    dispatch: dispatchType,\n    editShipper: Function,\n    location: {\n        state?: {\n        },\n        search: string,\n    }\n}\ntype State = {\n    areaList: Array<{\n        value: number,\n        label: string,\n        children: Array<{\n            value: number,\n            label: string,\n            children: Array<{\n                value: number,\n                label: string\n            }>\n        }>\n    }>,\n    info: {\n        id: number,\n        name: string,\n        province_id: number,\n        city_id: number,\n        area_id: number,\n        address: string,\n        contact_number: string\n    }\n}\n@Form.create()\n@connect()\nexport default class ShipperEdit extends Component<Props, State> {\n    state = {\n        areaList: [],\n        info: {\n            id: 0,\n            name: '',\n            province_id: 0,\n            city_id: 0,\n            area_id: 0,\n            address: '',\n            contact_number: ''\n        }\n    }\n\n    async componentDidMount() {\n        const { location } = this.props\n        const { id } = parseQuery(location.search)\n        const e = await getShipperInfo({ params: { id } })\n        if (e.code === 0) {\n            const { info } = e.result\n            this.setState({ info })\n        }\n        this.setState({\n            areaList: await getCascaderAreaList()\n        })\n    }\n\n    handleSubmit = (e: handleSubmitType) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const { dispatch } = this.props\n                const { id } = parseQuery(this.props.location.search)\n                let params = {\n                    id,\n                    name: values.name,\n                    contact_number: values.contact_number,\n                    area_id: values.areas[2],\n                    address: values.address\n                }\n                dispatch(editShipper({ params }))\n            }\n        });\n    }\n\n    render() {\n        const { areaList, info } = this.state\n        const { name, contact_number, province_id, city_id, area_id, address } = info\n        const { getFieldDecorator } = this.props.form\n        return (\n            <Page>\n                <Form onSubmit={this.handleSubmit} style={{ width: 1000 }}>\n                    <FormItem\n                        labelCol={{ span: 3 }}\n                        wrapperCol={{ span: 4 }}\n                        label='联系人'\n                    >\n                        {getFieldDecorator('name', {\n                            initialValue: name,\n                            rules: [{ required: true, message: '请输入联系人' }],\n                        })(\n                            <Input\n                                placeholder=\"请输入联系人\"\n                            />\n                        )}\n                    </FormItem>\n                    <FormItem\n                        labelCol={{ span: 3 }}\n                        wrapperCol={{ span: 6 }}\n                        label='联系方式'\n                    >\n                        {getFieldDecorator('contact_number', {\n                            initialValue: contact_number,\n                            rules: [{ required: true, message: '请输入联系方式' }],\n                        })(\n                            <Input\n                                placeholder=\"请输入联系方式\"\n                            />\n                        )}\n                    </FormItem>\n                    <FormItem\n                        labelCol={{ span: 3 }}\n                        wrapperCol={{ span: 6 }}\n                        label=\"所在地区\"\n                    >\n                        {getFieldDecorator('areas', {\n                            initialValue: [province_id, city_id, area_id],\n                            rules: [{\n                                type: 'array',\n                                required: true,\n                                message: '请选择所在地区'\n                            }],\n                        })(\n                            <Cascader options={areaList} placeholder='请选择所在地区' />\n                        )}\n                    </FormItem>\n                    <FormItem\n                        labelCol={{ span: 3 }}\n                        wrapperCol={{ span: 10 }}\n                        label='详细地址'\n                    >\n                        {getFieldDecorator('address', {\n                            initialValue: address,\n                            rules: [{ required: true, message: '请输入详细地址' }],\n                        })(\n                            <Input\n                                placeholder=\"请输入详细地址\"\n                            />\n                        )}\n                    </FormItem>\n                    <FormItem\n                        wrapperCol={{ sm: { offset: 3 } }}\n                    >\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                        >\n                            保存\n                        </Button>\n                    </FormItem>\n                </Form>\n            </Page>\n        )\n    }\n}\n","import { Fetch } from \"../../utils\";\nimport { AreaApi } from \"../../config/api/area\"\n\nexport const getAreaList = ({ params }) => {\n    return Fetch.fetch({ api: AreaApi.list, params })\n}\n\nexport const getCascaderAreaList = async () => {\n    const e = await getAreaList({ params: { level: 2, tree: 1 } })\n    if (e.code === 0) {\n        const { list } = e.result\n        return list.map((item) => {\n            return {\n                value: item.id,\n                label: item.name,\n                children: item._child.length > 0 ? item._child.map((sub) => {\n                    return {\n                        value: sub.id,\n                        label: sub.name,\n                        children: sub._child.length > 0 ? sub._child.map((area) => {\n                            return {\n                                value: area.id,\n                                label: area.name\n                            }\n                        }) : []\n                    }\n                }) : []\n            }\n        })\n    } else {\n        return []\n    }\n}\n\nexport const getKeyAreaList = async () => {\n    const e = await getAreaList({ params: { level: 2 } })\n    if (e.code === 0) {\n        const { list } = e.result\n        let _list = []\n        for (let i = 0; i < list.length; i++) {\n            _list[list[i]['id']] = {\n                name: list[i].name\n            }\n        }\n        return _list\n    } else {\n        return []\n    }\n}\n","import React from \"react\";\nimport styles from \"./index.css\";\n\n\n\nconst Page = (props)=>(\n    <div className={styles.page}>{props.children}</div>\n)\n\nexport default Page\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../node_modules/_css-loader@1.0.0@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"._1tWEKamef3HZm5j-qKDhxW{\\n    box-shadow: 4px 4px 20px 0 rgba(0,0,0,.01);\\n    background: #fff;\\n    padding: 24px;\\n    margin: 24px;\\n    border-radius: 4px;\\n}\\n@media (max-width: 767px) {\\n    ._1tWEKamef3HZm5j-qKDhxW{\\n        padding: 12px;\\n    }\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"page\": \"_1tWEKamef3HZm5j-qKDhxW\"\n};"],"sourceRoot":""}