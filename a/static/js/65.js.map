{"version":3,"sources":["../node_modules/_zrender@3.7.4@zrender/lib/core/util.js","../node_modules/_echarts@3.8.5@echarts/lib/echarts.js","../node_modules/_echarts@3.8.5@echarts/lib/util/graphic.js","../node_modules/_echarts@3.8.5@echarts/lib/util/number.js","../node_modules/_echarts@3.8.5@echarts/lib/config.js","../node_modules/_echarts@3.8.5@echarts/lib/util/model.js","../node_modules/_echarts@3.8.5@echarts/lib/util/layout.js","../node_modules/_zrender@3.7.4@zrender/lib/core/vector.js","../node_modules/_echarts@3.8.5@echarts/lib/util/format.js","../node_modules/_zrender@3.7.4@zrender/lib/core/BoundingRect.js","../node_modules/_echarts@3.8.5@echarts/lib/model/Model.js","../node_modules/_zrender@3.7.4@zrender/lib/core/env.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/Path.js","../node_modules/_echarts@3.8.5@echarts/lib/model/Component.js","../node_modules/_echarts@3.8.5@echarts/lib/data/List.js","../node_modules/_echarts@3.8.5@echarts/lib/model/Series.js","../node_modules/_zrender@3.7.4@zrender/lib/core/matrix.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/axisHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/util/symbol.js","../node_modules/_echarts@3.8.5@echarts/lib/data/helper/completeDimensions.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/text.js","../node_modules/_echarts@3.8.5@echarts/lib/CoordinateSystem.js","../node_modules/_zrender@3.7.4@zrender/lib/tool/color.js","../node_modules/_zrender@3.7.4@zrender/lib/core/event.js","../node_modules/_echarts@3.8.5@echarts/lib/util/clazz.js","../node_modules/_zrender@3.7.4@zrender/lib/core/curve.js","../node_modules/_echarts@3.8.5@echarts/lib/view/Chart.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/createListFromArray.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/Axis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/featureManager.js","../node_modules/_zrender@3.7.4@zrender/lib/mixin/Eventful.js","../node_modules/_echarts@3.8.5@echarts/lib/util/throttle.js","../node_modules/_echarts@3.8.5@echarts/lib/visual/symbol.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/AxisBuilder.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/AxisView.js","../node_modules/_echarts@3.8.5@echarts/lib/visual/VisualMapping.js","../node_modules/_echarts@3.8.5@echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/_zrender@3.7.4@zrender/lib/core/PathProxy.js","../node_modules/_echarts@3.8.5@echarts/lib/data/DataDiffer.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/axisModelCommonMixin.js","../node_modules/_echarts@3.8.5@echarts/lib/lang.js","../node_modules/_zrender@3.7.4@zrender/lib/core/log.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/Image.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/Text.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/SymbolDraw.js","../node_modules/_echarts@3.8.5@echarts/lib/component/gridSimple.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap/helper.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/sliderMove.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/_zrender@3.7.4@zrender/lib/zrender.js","../node_modules/_zrender@3.7.4@zrender/lib/container/Group.js","../node_modules/_zrender@3.7.4@zrender/lib/config.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/Displayable.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/helper/text.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/Gradient.js","../node_modules/_echarts@3.8.5@echarts/lib/scale/Scale.js","../node_modules/_echarts@3.8.5@echarts/lib/scale/Interval.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/Symbol.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/axisModelCreator.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/modelHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/processor/dataFilter.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/geoCreator.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/RoamController.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/whiskerBoxCommon.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/viewHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/visual/visualSolution.js","../node_modules/_zrender@3.7.4@zrender/lib/mixin/Transformable.js","../node_modules/_zrender@3.7.4@zrender/lib/core/timsort.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/helper/image.js","../node_modules/_zrender@3.7.4@zrender/lib/core/bbox.js","../node_modules/_echarts@3.8.5@echarts/lib/util/component.js","../node_modules/_echarts@3.8.5@echarts/lib/view/Component.js","../node_modules/_echarts@3.8.5@echarts/lib/layout/points.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/cartesian/Grid.js","../node_modules/_echarts@3.8.5@echarts/lib/layout/barGrid.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/selectableMixin.js","../node_modules/_echarts@3.8.5@echarts/lib/visual/dataColor.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/cursorHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/LineDraw.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/Line.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/BrushController.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/polar/polarCreator.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/helper.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkerModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/markerHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkerView.js","../node_modules/_zrender@3.7.4@zrender/lib/svg/graphic.js","../node_modules/_zrender@3.7.4@zrender/lib/svg/core.js","../node_modules/_zrender@3.7.4@zrender/lib/core/guid.js","../node_modules/_zrender@3.7.4@zrender/lib/Element.js","../node_modules/_zrender@3.7.4@zrender/lib/animation/Animator.js","../node_modules/_zrender@3.7.4@zrender/lib/core/LRU.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/Style.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/Pattern.js","../node_modules/_zrender@3.7.4@zrender/lib/animation/requestAnimationFrame.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/mixin/RectText.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/helper/roundRect.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/line.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/quadratic.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/util.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/windingLine.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/helper/fixClipWithShadow.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/helper/poly.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/LinearGradient.js","../node_modules/_echarts@3.8.5@echarts/lib/model/mixin/colorPalette.js","../node_modules/_echarts@3.8.5@echarts/lib/export.js","../node_modules/_echarts@3.8.5@echarts/lib/scale/helper.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/parseGeoJson.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/Region.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/polygon.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/labelHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/line/poly.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/cartesian/AxisModel.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/axisDefault.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/cartesianAxisHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar/BaseBarSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar/helper.js","../node_modules/_echarts@3.8.5@echarts/lib/action/createDataSelectAction.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/View.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/MapDraw.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/interactionMutex.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/roamHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/action/geoRoam.js","../node_modules/_echarts@3.8.5@echarts/lib/action/roamHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/data/Tree.js","../node_modules/_echarts@3.8.5@echarts/lib/data/helper/linkList.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/layoutHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/commonLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/createGraphFromNodeEdge.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/simpleLayoutHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/circularLayoutHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/component/parallel.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/parallel/parallelCreator.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/brushHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/util/array/nest.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/EffectLine.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/Polyline.js","../node_modules/_echarts@3.8.5@echarts/lib/component/singleAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/singleAxisHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/globalListener.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend/LegendModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend/LegendView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/listComponent.js","../node_modules/_echarts@3.8.5@echarts/lib/component/helper/BrushTargetManager.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/preprocessor.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/typeDefaulter.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/visualEncoding.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/VisualMapModel.js","../node_modules/_echarts@3.8.5@echarts/lib/visual/visualDefault.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/VisualMapView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/helper.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/visualMapAction.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/history.js","../node_modules/_zrender@3.7.4@zrender/lib/vml/core.js","../node_modules/_zrender@3.7.4@zrender/lib/svg/helper/Definable.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/debounce.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/constant.js","../node_modules/_echarts-for-react@2.0.14@echarts-for-react/lib/index.js","../node_modules/_echarts@3.8.5@echarts/index.js","../node_modules/_zrender@3.7.4@zrender/lib/Handler.js","../node_modules/_zrender@3.7.4@zrender/lib/mixin/Draggable.js","../node_modules/_zrender@3.7.4@zrender/lib/Storage.js","../node_modules/_zrender@3.7.4@zrender/lib/mixin/Animatable.js","../node_modules/_zrender@3.7.4@zrender/lib/animation/Clip.js","../node_modules/_zrender@3.7.4@zrender/lib/animation/easing.js","../node_modules/_zrender@3.7.4@zrender/lib/Painter.js","../node_modules/_zrender@3.7.4@zrender/lib/Layer.js","../node_modules/_zrender@3.7.4@zrender/lib/animation/Animation.js","../node_modules/_zrender@3.7.4@zrender/lib/dom/HandlerProxy.js","../node_modules/_zrender@3.7.4@zrender/lib/core/GestureMgr.js","../node_modules/_echarts@3.8.5@echarts/lib/model/Global.js","../node_modules/_echarts@3.8.5@echarts/lib/model/mixin/lineStyle.js","../node_modules/_echarts@3.8.5@echarts/lib/model/mixin/areaStyle.js","../node_modules/_echarts@3.8.5@echarts/lib/model/mixin/textStyle.js","../node_modules/_zrender@3.7.4@zrender/lib/tool/path.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/path.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/cubic.js","../node_modules/_zrender@3.7.4@zrender/lib/contain/arc.js","../node_modules/_zrender@3.7.4@zrender/lib/tool/transformPath.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Circle.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Sector.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Ring.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Polygon.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/helper/smoothSpline.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/helper/smoothBezier.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Polyline.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Rect.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Line.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/BezierCurve.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/shape/Arc.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/CompoundPath.js","../node_modules/_zrender@3.7.4@zrender/lib/graphic/RadialGradient.js","../node_modules/_echarts@3.8.5@echarts/lib/model/mixin/itemStyle.js","../node_modules/_echarts@3.8.5@echarts/lib/model/mixin/boxLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/model/globalDefault.js","../node_modules/_echarts@3.8.5@echarts/lib/ExtensionAPI.js","../node_modules/_echarts@3.8.5@echarts/lib/model/OptionManager.js","../node_modules/_echarts@3.8.5@echarts/lib/preprocessor/backwardCompat.js","../node_modules/_echarts@3.8.5@echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/_echarts@3.8.5@echarts/lib/visual/seriesColor.js","../node_modules/_echarts@3.8.5@echarts/lib/loading/default.js","../node_modules/_echarts@3.8.5@echarts/lib/helper.js","../node_modules/_echarts@3.8.5@echarts/lib/scale/Ordinal.js","../node_modules/_echarts@3.8.5@echarts/lib/scale/Time.js","../node_modules/_echarts@3.8.5@echarts/lib/scale/Log.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/line.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/line/LineSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/line/LineView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/_echarts@3.8.5@echarts/lib/processor/dataSample.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/cartesian/Cartesian.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/cartesian/Axis2D.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/cartesian/GridModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/CartesianAxisView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar/BarSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar/BarView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar/barItemStyle.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/pie.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/pie/PieSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/pie/PieView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/pie/pieLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/pie/labelLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/scatter.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/scatter/ScatterSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/scatter/ScatterView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/LargeSymbolDraw.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/radar.js","../node_modules/_echarts@3.8.5@echarts/lib/component/radar.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/radar/Radar.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/radar/IndicatorAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/radar/RadarModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/radar/RadarView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/radar/RadarSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/radar/RadarView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/radar/radarLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/radar/backwardCompat.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/map.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/map/MapSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/Geo.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/fix/nanhai.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/fix/textCoord.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/fix/geoCoord.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/fix/diaoyuIsland.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/map/MapView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/map/mapSymbolLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/map/mapVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/map/mapDataStatistic.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/map/backwardCompat.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/TreeSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/TreeView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/treeAction.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/orthogonalLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/traversalHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/tree/radialLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap/TreemapSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap/TreemapView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap/Breadcrumb.js","../node_modules/_echarts@3.8.5@echarts/lib/util/animation.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap/treemapAction.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap/treemapVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/treemap/treemapLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/GraphSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/data/Graph.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/GraphView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/LinePath.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/adjustEdge.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/graphAction.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/categoryFilter.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/categoryVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/edgeVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/simpleLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/circularLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/forceLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/forceHelper.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/graph/createView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/gauge.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/gauge/GaugeSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/gauge/GaugeView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/gauge/PointerPath.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/funnel.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/funnel/FunnelSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/funnel/FunnelView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/funnel/funnelLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/parallel.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/parallel/parallelPreprocessor.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/parallel/Parallel.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/parallel/ParallelAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/parallel/ParallelModel.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/parallel/AxisModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/parallelAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/parallelAxisAction.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/ParallelAxisView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/parallel/ParallelSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/parallel/ParallelView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/parallel/parallelVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/sankey.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/sankey/SankeySeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/sankey/SankeyView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/sankey/sankeyLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/sankey/sankeyVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/boxplot.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/boxplot/BoxplotSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/WhiskerBoxDraw.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/boxplot/BoxplotView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/boxplot/boxplotVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/boxplot/boxplotLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/candlestick.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/candlestick/CandlestickSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/candlestick/CandlestickView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/candlestick/preprocessor.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/candlestick/candlestickVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/candlestick/candlestickLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/effectScatter.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/effectScatter/EffectScatterSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/effectScatter/EffectScatterView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/EffectSymbol.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/lines.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/lines/LinesSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/lines/LinesView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/EffectPolyline.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/helper/LargeLineDraw.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/lines/linesLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/lines/linesVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/heatmap.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/heatmap/HeatmapSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/heatmap/HeatmapView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/heatmap/HeatmapLayer.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/pictorialBar.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar/PictorialBarSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/bar/PictorialBarView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/themeRiver.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/single/singleCreator.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/single/Single.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/single/SingleAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/SingleAxisView.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/single/AxisModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/SingleAxisPointer.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/themeRiver/ThemeRiverSeries.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/themeRiver/ThemeRiverView.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/themeRiver/themeRiverLayout.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/themeRiver/themeRiverVisual.js","../node_modules/_echarts@3.8.5@echarts/lib/chart/custom.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/cartesian/prepareCustom.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/prepareCustom.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/single/prepareCustom.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/polar/prepareCustom.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/calendar/prepareCustom.js","../node_modules/_echarts@3.8.5@echarts/lib/component/graphic.js","../node_modules/_echarts@3.8.5@echarts/lib/component/grid.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legendScroll.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend/legendAction.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend/legendFilter.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/legend/scrollableLegendAction.js","../node_modules/_echarts@3.8.5@echarts/lib/component/tooltip.js","../node_modules/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/tooltip/TooltipContent.js","../node_modules/_echarts@3.8.5@echarts/lib/component/polar.js","../node_modules/_echarts@3.8.5@echarts/lib/layout/barPolar.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/polar/Polar.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/polar/RadiusAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/polar/AngleAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/polar/PolarModel.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/polar/AxisModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/angleAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/AngleAxisView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/radiusAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axis/RadiusAxisView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/axisPointer/PolarAxisPointer.js","../node_modules/_echarts@3.8.5@echarts/lib/component/geo.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/geo/GeoModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/geo/GeoView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/brush.js","../node_modules/_echarts@3.8.5@echarts/lib/component/brush/preprocessor.js","../node_modules/_echarts@3.8.5@echarts/lib/component/brush/visualEncoding.js","../node_modules/_echarts@3.8.5@echarts/lib/component/brush/selector.js","../node_modules/_echarts@3.8.5@echarts/lib/component/brush/BrushModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/brush/BrushView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/brush/brushAction.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/feature/Brush.js","../node_modules/_echarts@3.8.5@echarts/lib/component/calendar.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/calendar/Calendar.js","../node_modules/_echarts@3.8.5@echarts/lib/coord/calendar/CalendarModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/calendar/CalendarView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/title.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/SliderZoomModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/SliderZoomView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/InsideZoomModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/InsideZoomView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/roams.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMapContinuous.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/ContinuousModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/ContinuousView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMapPiecewise.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/PiecewiseModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/visualMap/PiecewiseView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/markPoint.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkPointModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkPointView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/markLine.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkLineModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkLineView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/markArea.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkAreaModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/marker/MarkAreaView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/preprocessor.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/typeDefaulter.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/timelineAction.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/SliderTimelineModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/TimelineModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/SliderTimelineView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/TimelineView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/timeline/TimelineAxis.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/ToolboxView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/feature/DataView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoomSelect.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/_echarts@3.8.5@echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/_echarts@3.8.5@echarts/lib/component/toolbox/feature/Restore.js","../node_modules/_zrender@3.7.4@zrender/lib/vml/vml.js","../node_modules/_zrender@3.7.4@zrender/lib/vml/graphic.js","../node_modules/_zrender@3.7.4@zrender/lib/vml/Painter.js","../node_modules/_zrender@3.7.4@zrender/lib/svg/svg.js","../node_modules/_zrender@3.7.4@zrender/lib/svg/Painter.js","../node_modules/_zrender@3.7.4@zrender/lib/core/arrayDiff2.js","../node_modules/_zrender@3.7.4@zrender/lib/svg/helper/GradientManager.js","../node_modules/_zrender@3.7.4@zrender/lib/svg/helper/ClippathManager.js","../node_modules/_echarts-for-react@2.0.14@echarts-for-react/lib/core.js","../node_modules/_fast-deep-equal@2.0.1@fast-deep-equal/index.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/index.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/sensorPool.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/id.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/sensors/index.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/sensors/object.js","../node_modules/_size-sensor@0.2.0@size-sensor/lib/sensors/resizeObserver.js","../node_modules/_echarts-for-react@2.0.14@echarts-for-react/lib/utils.js"],"names":["BUILTIN_OBJECT","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","TYPED_ARRAY","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","objToString","Object","prototype","toString","arrayProto","Array","nativeForEach","forEach","nativeFilter","filter","nativeSlice","slice","nativeMap","map","nativeReduce","reduce","methods","clone","source","result","typeStr","call","i","len","length","Ctor","constructor","from","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","defaults","overlay","_ctx","createCanvas","each","obj","cb","context","bind","func","args","arguments","apply","concat","value","type","nodeType","ownerDocument","document","createElement","primitiveKey","HashMap","this","set","get","prefixedKey","removeKey","exports","$override","name","fn","mergeAll","targetAndSources","extend","getContext","indexOf","array","inherits","clazz","baseClazz","clazzPrototype","F","prop","superClass","mixin","isArrayLike","data","push","memo","find","curry","isFunction","isString","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","createHashMap","noop","__webpack_require__","__DEV__","zrender","zrUtil","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","ComponentModel","SeriesModel","ComponentView","ChartView","graphic","modelUtil","throttle","seriesColor","loadingDefault","parseClassType","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","MessageCenter","ECharts","dom","theme","opts","themeStorage","id","group","_dom","zr","_zr","init","renderer","devicePixelRatio","width","height","prioritySortFunc","a","b","prio","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","ecInstance","coordSysMgr","getCoordinateSystems","getComponentByElement","el","modelInfo","__ecComponentInfo","_model","getComponent","mainType","index","parent","createExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","visualFuncs","dataProcessorFuncs","animation","on","_onframe","off","one","echartsProto","doConvertPixel","methodName","finder","ecModel","coordSysList","parseFinder","coordSys","silent","updateMethods","prepareAndUpdate","flushPendingActions","triggerUpdatedEvent","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","console","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","window","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","list","storage","getDisplayList","stopAnimation","getSvgDataUrl","svgSupported","pathToSvg","getDataURL","excludeComponents","excludesComponentViews","self","componentType","eachComponent","component","view","__viewId","ignore","url","getType","toDataURL","getConnectedDataURL","groupId","mathMin","Math","min","mathMax","max","connectedGroups","left","Infinity","top","right","bottom","canvasList","instances","chart","canvas","boundingRect","getBoundingClientRect","targetCanvas","item","img","Image","style","x","y","image","add","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","model","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","seriesModel","getData","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","update","payload","api","restoreData","create","process","stackedDataMap","eachSeries","series","stack","previousStack","stackedOn","doVisualEncoding","componentView","__model","render","updateZ","__alive","idx","chartView","updateProgressiveAndBlend","updateHoverLayerStatus","remove","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","postUpdateFuncs","updateView","clearAllVisual","invokeUpdateMethod","updateVisual","updateLayout","visual","isLayout","prepareView","updateDirectly","ecIns","subType","query","callView","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","split","updateMethod","pop","payloads","batched","batch","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","trigger","pendingActions","shift","isComponent","viewList","viewMap","viewId","classType","Clazz","getClass","__id","componentIndex","dispose","splice","excludesLayout","clearColorPalette","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","MOUSE_EVENT_NAMES","elCount","traverse","isGroup","node","useHoverLayer","frameDrawNum","needProgressive","progressive","floor","blendMode","setStyle","z","zlevel","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","actionType","eventType","isDisposed","_disposed","clear","idBase","Date","groupIdBase","DOM_ATTRIBUTE_KEY","mapDataStores","disConnect","disconnect","getInstanceByDom","getAttribute","registerPreprocessor","preprocessorFunc","registerAction","test","registerVisual","priority","visualFunc","registerLoading","loadingFx","version","dependencies","existInstance","setAttribute","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerTheme","registerProcessor","processorFunc","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","register","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutFunc","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","registerMap","mapName","geoJson","specialAreas","features","JSON","getMap","dataTool","___ec_export","pathTool","matrix","vector","Path","Transformable","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","round","EMPTY_OBJ","makePath","pathData","rect","layout","path","createFromString","getBoundingRect","centerGraphic","resizePath","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimize","position","lineWidth","positiveOrNegative","doubledPosition","hasFillOrStroke","fillOrStroke","liftColor","color","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","insideRollbackOpt","insideRollback","textFill","textStroke","textStrokeWidth","rollbackInsideStyle","extendFrom","applyInsideStyle","insideOriginalTextPosition","autoColor","dirty","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","host","isRectText","textPosition","getShallow","textOffset","labelRotate","PI","textRotation","textDistance","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","parentModel","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","getAutoColor","textBorderColor","textBorderWidth","originalTextPosition","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","useInsideStyle","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","transform","invert","getLocalTransform","extendShape","extendPath","extendFromString","makeImage","imageUrl","onload","subPixelOptimizeLine","param","shape","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","setHoverStyle","hoverSilentOnTouch","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","labelFetcher","labelDataIndex","labelDimIndex","showNormal","showEmphasis","baseText","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","text","setText","labelModel","defaultColor","getFont","gTextStyleModel","join","initProps","getTransform","ancestor","mat","identity","mul","transformDirection","direction","hBase","abs","vBase","vertex","groupTransition","g1","g2","elMap1","g","elMap","anid","getElMap","oldEl","newProp","getAnimatableProps","rotation","clipPointsByRect","points","point","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","replace","RADIAN_EPSILON","TIME_REG","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","str","_trim","match","parseFloat","NaN","precision","returnStr","toFixed","asc","arr","sort","getPrecision","isNaN","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","getPercentWithPrecision","valueList","sum","acc","digits","pow","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","exec","hour","toUpperCase","UTC","quantity","nice","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","global","dev","formatUtil","nubmerUtil","Model","normalizeToArray","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","marker","getTooltipMarker","$vars","dimIndex","labelProp","itemModel","getItemModel","formatter","formatTpl","dataItem","formatTooltip","isIdInner","cptOption","makeGetter","hostObj","has","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","isData","queryDataIndex","indexOfName","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","dataDimToCoordDim","dataDim","getDimension","dimItem","getDimensionInfo","coordDim","coordDimToDataDim","dimName","coordDimIndex","otherDimToDataDim","otherDim","otherDims","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","box","vbox","hbox","getLayoutRect","positionInfo","containerRect","margin","containerWidth","containerHeight","verticalMargin","horizontalMargin","copyLayoutParams","getAvailableSize","positionElement","h","hv","boundingMode","needLocalTransform","elPos","dx","dy","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","newOption","ignoreSize","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","copy","getLayoutParams","ArrayCtor","Float32Array","sqrt","lenSquare","lengthSquare","distance","v1","v2","dist","distanceSquare","distSquare","out","scaleAndAdd","div","dot","scale","s","normalize","d","negate","lerp","t","textContain","numberUtil","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","s2d","truncateText","getTextRect","addCommas","toCamelCase","upperCaseFirst","group1","charAt","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","extraCssText","formatTime","isUTC","date","utc","M","capitalFirst","substr","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","contain","plain","_default","module","clazzUtil","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","navigator","os","ua","firefox","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","detect","userAgent","Displayable","PathProxy","pathContain","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","getLineScale","localPos","transformCoordToLocal","containStroke","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","defaultShape","thisShape","componentUtil","boxLayoutMixin","arrayPush","defaultOption","dependentModels","uid","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","newCptOption","isInit","hasOwn","optList","Class","getReferringComponents","enableClassManagement","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","deps","getClassesByMainType","DataDiffer","globalObj","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","time","TRANSFERABLE_PROPERTIES","transferProperties","__wrappedMethods","propName","DefaultDataProvider","dataArray","_array","pure","getItem","List","hostModel","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_storage","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","normalizeDimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","originalStorage","dim","dimStore","hasItemOption","initData","nameList","dimValueGetter","nameDimIdx","dimensionInfoMap","size","idList","nameRepeatCount","itemName","DataCtor","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","MAX_VALUE","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","_format","_clazz","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","themeSubType","hasClass","label","fillDataTextStyle","newSeriesOption","getLinkedData","setData","getRawData","getBaseAxis","multipleSeries","formattedValue","vertially","tooltip","tooltipName","tooltipDims","setEachItem","dimIdx","valStr","formatArrayValue","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipData","getTooltipPosition","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","OrdinalScale","IntervalScale","Scale","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","getExtent","setBlank","getNeedCrossZero","getAxisRawValue","axis","getLabel","niceScaleExtent","extent","splitNumber","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","font","axisRotate","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","Triangle","cx","cy","moveTo","lineTo","closePath","Diamond","Pin","r","angle","asin","tanX","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","SymbolClz","symbolType","beforeBrush","proxySymbol","symbolPathSetColor","innerColor","symbolStyle","symbolShape","__isEmptyBrush","createSymbol","keepAspect","symbolPath","setColor","OTHER_DIMS","completeDimensions","sysDims","dimsDef","encodeDef","dataDimNameMap","coordDimNameMap","dimCount","retrieveValue","sysDimItem","sysDimItemDimsDef","dimDefItem","userDimName","resultItem","dataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","extra","extraPrefix","genName","extraFromZero","isExtraCoord","guessOrdinal","fromZero","o","imageHelper","_util","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","STYLE_REG","DEFAULT_FONT","textLines","l","measureText","adjustTextX","adjustTextY","ellipsis","options","prepareTruncateOptions","truncateSingleLine","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","parsePlainText","padding","truncate","lineHeight","lines","outerHeight","truncOuterHeight","truncOuterWidth","outerWidth","parseRichText","contentBlock","lastIndex","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","tokens","tokenStyle","token","styleName","tokenHeight","tokenWidth","tokenWidthNotSpecified","percentWidth","bgImg","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","getRichTextRect","getPlainTextRect","adjustTextPositionOnRect","halfHeight","makeFont","textFont","coordinateSystemCreators","_coordinateSystems","coordinateSystems","creater","coordinateSystemCreator","kCSSColorTable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","clampCssByte","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","copyRgba","colorCache","lastRemovedArr","putToCache","colorStr","rgbaArr","put","cached","iv","op","ep","fname","alpha","hsla2rgba","hsla","rgba","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fastMapToColor","fullOutput","mapToColor","arrColor","level","toHex","modifyHSL","H","S","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","rgba2hsla","clampCssAngle","modifyAlpha","Dispatcher","isDomLevel2","addEventListener","MOUSE_EVENT_REG","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","stop","preventDefault","stopPropagation","cancelBubble","returnValue","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","attachEvent","removeEventListener","detachEvent","notLeftMouse","TYPE_DELIMITER","IS_CONTAINER","MEMBER_PRIFIX","ret","superCall","superApply","RootClass","mandatoryMethods","proto","ExtendedClass","entity","registerClass","checkClassType","container","makeContainer","componentMainType","throwWhenNotFound","getAllClassMainTypes","types","hasSubTypes","originalExtend","_vector","v2Create","v2DistSquare","mathPow","mathSqrt","EPSILON","EPSILON_NUMERIC","THREE_SQRT","ONE_THIRD","_v0","_v1","_v2","isAroundZero","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","quadraticAt","cubicDerivativeAt","cubicRootAt","roots","c","A","C","n","t1","disc","K","t2","discSqrt","Y1","Y2","T","theta","acos","ASqrt","tmp","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_t","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","Chart","highlight","toggleHighlight","downplay","removeAll","chartProto","elSetState","state","childCount","dataIdx","isStackable","getDimTypeByAxis","creators","cartesian2d","completeDimOpt","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","categoryAxesModels","categoryIndex","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","radius","geo","coordSysName","registeredCoordSys","axesInfo","categoryAxisModel","categoryDim","categories","dataLen","createNameList","sampleItem","firstDataNotNull","ifNeedCompleteOrdinalData","axisHelper","fixExtentWithBands","nTick","normalizedExtent","Axis","inverse","onBand","_labelInterval","coord","containData","dataToCoord","start","end","coordToData","pointToData","getTicksCoords","alignWithLabel","bands","getBands","coords","getLabelsCoords","getBandWidth","axisExtent","isHorizontal","getRotate","getLabelInterval","labelInterval","axisModel","ctor","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","ORIGIN_METHOD","RATE","THROTTLE_TYPE","delay","debounce","currCall","debounceNextCall","lastCall","lastExec","timer","getTime","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","defaultSymbolType","legendSymbol","eachRawSeriesByType","symbolSize","symbol","isSeriesFiltered","itemSymbolType","itemSymbolSize","_number","matrixUtil","makeAxisEventDataBase","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","updateTransform","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineStyle","lineCap","getLineStyle","arrows","arrowSize","symbolWidth","symbolHeight","axisTickLabel","tickEls","axisBuilder","isBlank","tickModel","lineStyleModel","tickLen","tickInterval","getInterval","ticksCoords","showMinLabel","showMaxLabel","ticksCnt","ifIgnoreOnTick","tickEl","buildAxisTick","labelEls","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","axisLabelShow","labelMargin","labelRotation","labelLayout","innerTextLayout","categoryData","triggerEvent","tickVal","itemLabelModel","textColor","getTextColor","pos","labelStr","textEl","targetType","decomposeTransform","buildAxisLabel","axisName","axisNameAvailableWidth","nameLocation","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","nameTruncateMaxWidth","truncatedText","tooltipOpt","formatterParams","__fullText","__truncatedText","show","content","axisRotation","current","firstRect","nextRect","mRotationBack","rawTick","echarts","axisPointerModelHelper","AxisView","_axisPointer","axisPointerClass","fixValue","updateAxisPointer","force","axisPointer","disposeAxisPointer","axisView","forceRender","getAxisPointerClass","axisPointerModel","getAxisPointerModel","axisPointerClazz","registerAxisPointerClass","zrColor","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","mappingMethod","thisOption","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","originIndex","preprocessForPiecewise","categoryMap","cate","visualArr","setVisualToOption","preprocessForSpecifiedCategory","mapValueToVisual","normalized","getNormalizer","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","parsedVisual","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","colorSaturation","colorLightness","colorAlpha","opacity","makeDoMap","getter","setter","symbolCfg","doMapToArray","applyValue","sourceExtent","findPieceIndex","pieceIndex","listVisualTypes","visualTypes","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","pieceValue","updatePossible","newAbs","excludes","includes","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","addData","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","startAngle","endAngle","anticlockwise","arcTo","toStatic","lineDashSum","offset","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetterName","dataDiffer","existence","_add","_update","_remove","execute","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","origin","rangeStart","rangeEnd","getCoordSysModel","setRange","resetRange","toolbox","title","polygon","lineX","lineY","dataView","lang","dataZoom","zoom","back","magicType","bar","tiled","restore","saveAsImage","debugMode","ZImage","src","_image","createOrUpdateImage","sWidth","sHeight","drawImage","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","SymbolDraw","symbolCtor","_symbolCtor","symbolDrawProto","symbolNeedsDraw","isIgnore","updateData","oldData","_data","SymbolCtor","seriesScope","itemStyle","getItemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","hoverLabelModel","cursorStyle","newIdx","symbolEl","oldIdx","fadeOut","enableAnimation","gridModel","getRect","xAxis","yAxis","grid","getPathToRoot","parentNode","reverse","retrieveTargetInfo","root","tree","targetNode","contains","targetNodeId","getNodeById","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","getSpanSign","handleEnds","handleIndex","sign","restrict","minSpan","maxSpan","extentSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","axisTrigger","link","coordSysAxesInfo","collect","helper","AxisProxy","eachAxisDim","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","coordSysLists","coordModel","store","coordIndex","save","guid","Handler","Storage","Painter","Animation","HandlerProxy","useVML","painterCtors","ZRender","rendererType","vml","handerProxy","getViewportRoot","stage","_needsRefresh","oldDelFromStorage","delFromStorage","oldAddToStorage","addToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","findHover","eventHandler","delInstance","getInstance","registerPainter","Element","_children","__storage","children","childOfName","_doAdd","addBefore","nextSibling","addChildrenToStorage","delChildrenFromStorage","includeChildren","tmpRect","tmpMat","invisible","childRect","Style","RectText","__clipPaths","draggable","dragging","culling","cursor","afterBrush","rectContain","animateStyle","useStyle","roundRectHelper","VALID_TEXT_ALIGN","center","VALID_TEXT_VERTICAL_ALIGN","middle","normalizeStyle","textBaseline","applyTextRotation","textOrigin","placeToken","hostEl","lineTop","needDrawBackground","drawBackground","getTextXForPadding","setCtx","getFill","strokeText","fillText","isPlainBg","onBgImageLoaded","getBoxPosition","blockHeiht","baseX","baseY","maxValue","lastIndexOf","__textCotentBlock","boxPos","boxX","boxY","xLeft","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","drawRichText","renderRichText","textX","textY","needDrawBg","renderPlainText","Gradient","addColorStop","setting","_setting","_interval","getSetting","unionExtent","unionExtentFromData","thisExtent","_isBlank","roundNumber","_intervalPrecision","_niceExtent","getIntervalPrecision","intervalScaleGetTicks","niceTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","findLabelValueDim","getScale","symbolProto","driftSymbol","drift","_createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","setZ","setDraggable","getSymbolSize","_updateCommon","fadeIn","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","elStyle","symbolInnerColor","useNameLabel","valueDim","onEmphasis","ratio","onNormal","keepLabel","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","registerSubTypeDefaulter","checkPropInLink","linkPropValue","axisPropValue","getAxisInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","axisPointerEnabled","coordSysKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","snap","tooltipAxisPointerModel","volatileOption","field","labelOption","crossStyle","makeAxisPointerModel","involveSeries","axisInfo","useHandle","seriesModels","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","getAxis","seriesDataCount","collectSeriesInfo","legendModels","findComponents","eachSeriesByType","isSelected","Geo","resizeGeo","geoModel","boundingCoords","leftTop","rightBottom","setBoundingRect","boxLayoutOption","viewWidth","viewHeight","aspectScale","useCenterAndSize","viewRect","getBoxLayoutParams","setViewRect","setCenter","setZoom","setGeoCoords","geoCoord","addGeoCoord","geoCreator","geoList","mapData","zoomLimit","geoIndex","mapModelGroupBySeries","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","getFilledRegions","originRegionArr","nameMap","regionsArr","dataNameMap","eventTool","interactionMutex","RoamController","pointerChecker","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","setPointerChecker","enable","controlType","disable","zoomOnMouseWheel","moveOnMouseMove","preventDefaultMouseMove","isDragging","_dragging","isPinching","_pinching","_x","_y","checkKeyBinding","gestureEvent","isTaken","oldX","oldY","zoomDelta","pinchScale","pinchX","pinchY","zoomX","zoomY","roamController","WhiskerBoxDraw","seriesModelMixin","_baseAxisDim","addOrdinal","coordDims","baseAxisDimIndex","baseAxisDim","otherAxisDim","defaultValueDimensions","viewMixin","whiskerBoxDraw","_whiskerBoxDraw","getStyleUpdater","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","textRect","align","verticalAlign","confineInContainer","bgColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","buildElStyle","axisPointerType","styleModel","getAreaStyle","buildCartesianSingleLabelElOption","textLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","clockwise","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","mappings","Creater","__hidden","createMappings","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","keys","getValueState","visualTypesMap","eachItem","valueOrIndex","rawDataItem","visualMap","valueState","mIdentity","transformableProto","parentHasTransform","invTransform","tmpTransform","atan2","transformCoordToGlobal","DEFAULT_MIN_MERGE","DEFAULT_MIN_GALLOPING","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","runStart","runLength","minGallop","stackSize","mergeAt","start1","length1","start2","length2","cursor1","cursor2","dest","count1","count2","exit","_minGallop","mergeLow","customCursor","customDest","mergeHigh","mergeRuns","forceMergeRuns","pushRun","_runStart","_runLength","remaining","ts","minRun","minRunLength","globalImageCache","imageOnLoad","cachedImgObj","__cachedImgObj","pending","pendingWrap","cbPayload","newImageOrSrc","__zrImageSrc","PI2","extremity","xDim","yDim","fromPoints","tx","ty","vec2Min","vec2Max","DELIMITER","random","subTypeDefaulters","defaulter","determineSubType","componentTypeMain","dependencyGetter","createDependencyGraphItem","graph","predecessor","successor","topologicalTravel","targetNameList","fullNameList","noEntryList","thisItem","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","Component","componentProto","dataToPoint","Cartesian2D","Axis2D","isAxisUsedInTheGrid","rotateTextRect","rotateRadians","boundingBox","beforeWidth","beforeHeight","afterWidth","afterHeight","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","axes","onZero","onZeroAxisIndex","otherAxis","canNotOnZeroToAxis","_updateScale","ignoreContainLabel","gridRect","axesList","adjustAxes","coordBase","axisExtentSum","toGlobalCoord","toLocalCoord","updateAxisTransfrom","labelUnionRect","axisLabelModel","labelCount","isLabelIgnored","singleRect","getLabelUnionRect","axesMapOnDim","getCartesian","coordList","getCartesians","_findConvertTarget","cartesian","coordsList","axisPositionUsed","axesCount","createAxisCreator","axisPosition","addAxis","isCartesian2D","findAxesModels","baseAxis","getOtherAxis","axesTypes","grids","STACK_PREFIX","getSeriesStackId","getAxisKey","doCalBarWidthAndOffset","seriesInfoList","columnsMap","seriesInfo","axisKey","bandWidth","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","stacks","stackId","barWidth","barMaxWidth","barGap","barCategoryGap","barGapPercent","autoWidth","column","lastColumn","widthSum","barLayoutGrid","barWidthAndOffset","barSeries","calBarWidthAndOffset","getSeriesByType","lastStackCoords","lastStackCoordsOrigin","columnLayoutInfo","columnOffset","columnWidth","valueAxis","barMinHeight","valueAxisStart","getGlobalExtent","lastCoord","lastCoordOrigin","getLayoutOnAxis","widthAndOffsets","offsetCenter","updateSelectedMap","targetList","_targetList","_selectTargetMap","targetMap","select","selected","unSelect","toggleSelected","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","topTarget","LineGroup","isPointNaN","pt","lineNeedsDraw","pts","LineDraw","_ctor","lineDrawProto","lineData","oldLineData","_lineData","LineCtor","hoverLineStyle","lineGroup","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","targetShape","cp1","cpx1","cpy1","_createLine","lineProto","beforeUpdate","symbolFrom","symbolTo","invScale","fromPos","pointAt","toPos","tangent","tangentAt","__position","halfPercent","cp","__verticalAlign","__textAlign","createLine","_updateCommonStl","linePoints","visualColor","visualOpacity","defaultLabelColor","normalText","emphasisText","showLabel","hoverShowLabel","rawVal","labelStyle","linePath","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","CURSOR_MAP","ne","sw","nw","se","DEFAULT_BRUSH_OPT","brushStyle","transformable","brushMode","removeOnClick","baseUID","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","mouseHandlers","createCover","controller","brushOption","cover","coverRenderers","brushType","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","ondragend","updateBaseRect","localRange","handleSize","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","globalDir","getGlobalDirection","localDirection","xmin","ymin","xmax","ymax","pointsToRect","clipByPanel","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","thisGroup","localD","localZero","clipPath","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","enableBrush","release","doDisableBrush","take","doEnableBrush","setPanels","panelOpts","mount","enableGlobalPan","eachCover","updateCovers","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","currPanel","resetCursor","getLineRenderer","localTrack","ends","xyIndex","otherExtent","getLinearBrushOtherExtent","throttleUtil","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","trans","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","handle","hide","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","pointerOption","pointer","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","_onHandleDragEnd","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","axisDim","doClear","buildLabel","Polar","_axisHelper","updatePolarScale","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","setAxis","polarCreator","polarList","resizePolar","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","isCoordSupported","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","nodes","records","edgeType","absorb","processSingleNode","isNodeAbsorded","hasLink","edgeId","isLinked","fillLabel","MarkerModel","createdBySelf","hostSeries","__hostSeries","newOpt","modelPropName","markerOpt","markerModel","html","markerTypeCalculatorWithExtent","mlType","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","numCalculate","valueAxisDim","markerTypeCalculator","average","valueIndex","valueDataDim","baseDataDim","dataTransform","hasXAndY","dataFilter","hasXOrY","markerGroupMap","__keep","markerModelKey","renderSeries","arrayJoin","NONE","mathRound","degree","round4","svgEl","bindStyle","isText","pathHasFill","pathHasStroke","lineJoin","miterLimit","svgPath","__svgEl","pathStr","dataLength","cmdStr","nData","dThetaPositive","isCircle","large","pathDataToString","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","setAttributeNS","attrXLink","svgText","textSvgEl","__textSvgEl","transformText","getVerticalAlignForSvg","newPos","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","appendChild","createTextNode","removeChild","svgURI","createElementNS","idStart","Animatable","afterUpdate","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","Clip","arraySlice","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","lastValue","getArrayDim","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","_target","lastFrame","lastFramePercent","clip","life","_loop","_delay","onframe","frame","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","LinkedList","head","linkedListProto","insert","entry","Entry","insertEntry","LRU","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","STYLE_COMMON_PROPS","createLinearGradient","createRadialGradient","styleProto","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","Pattern","repeat","createPattern","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","r1","r2","r3","r4","total","_l","_a","normalizeRadian","dir","shadowTemp","orignalBrush","modified","clipPaths","smoothSpline","smoothBezier","smooth","controlPoints","smoothConstraint","cp2","globalCoord","colorIdx","colorNameMap","colorPalette","format","_throttle","ecHelper","_List","_Model","_Axis","_env","_parseGeoJson","parseGeoJson","ecUtil","util","fixExtent","Region","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","geometry","coordinates","c2","decode","featureObj","geometries","exterior","interiors","region","polygonContain","MAX_NUMBER","loopGeo","transformTo","windingLine","isAroundEqual","labelDims","fixClipWithShadow","v2Copy","cp0","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","smoothMonotone","connectNulls","prevIdx","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnPoints","stackedOnSmooth","stackedOnBBox","axisModelCreator","axisModelCommonMixin","AxisModel","gridIndex","gridId","getAxisType","extraOption","nameRotate","nameTruncate","nameTextStyle","nameGap","axisTick","inside","axisLabel","splitLine","splitArea","areaStyle","categoryAxis","timeAxis","logAxis","logBase","rawAxisPosition","rectBound","axisOffset","posBound","onZeroCoord","labelInside","createListFromArray","getMarkerPosition","legendHoverLink","barMinAngle","fixPosition","labelPositionOutside","setLabel","actionInfos","TransformDummy","View","_roamTransform","_viewTransform","_center","_zoom","doConvert","_viewRect","viewTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getZoom","getRoamTransform","viewTransformMatrix","roamTransform","defaultCenter","getViewRect","getViewRectAfterRoam","roamHelper","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","otherRegionEl","__regions","MapDraw","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","draw","fromView","isGeo","groupNewProp","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regions","regionGroup","compoundPath","paths","itemStyleModel","regionModel","getRegionModel","hoverItemStyleModel","isDataNaN","itemLayout","_updateController","mapDraw","updateMapSelectHandler","controllerHost","makeActionBase","updateViewOnPan","mouseX","mouseY","updateViewOnZoom","ATTR","getStore","resourceKey","userKey","newZoom","zoomMin","zoomMax","zoomScale","updateCenterAndZoom","seriesGroup","previousZoom","fixX","fixY","linkList","TreeNode","hostTree","depth","viewChildren","Tree","levelOptions","leavesOption","_nodes","levelModels","levelDefine","leavesModel","isRemoved","eachNode","order","suppressVisitSub","updateDepthAndHeight","getAncestors","includeSelf","ancestors","getValue","levelModel","getLevelModel","isExpand","getLeavesModel","getNodeByDataIndex","getNodeByName","clearLayouts","createTree","dataRoot","treeOptions","levels","leaves","listData","dimMax","buildHierarchy","dataNode","addChild","mainData","struct","structAttr","DATAS","MAIN_DATA","transferInjection","isMainData","datas","linkAll","linkSingle","changeInjection","cloneShallowInjection","datasAttr","nextRight","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","moveSubtree","wl","wr","change","modifier","prelim","defaultSeparation","node1","node2","defaultAncestor","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","radialCoordinate","radialCoor","_traversalHelper","eachAfter","eachBefore","_layoutHelper","sep","virtualRoot","realRoot","kx","ky","coorX","coorY","finalCoor","rawX","rawY","Graph","edges","directed","beforeLink","addNode","linkNameList","validEdges","linkCount","addEdge","nodeData","coordSysCtor","edgeData","simpleLayoutEdge","eachEdge","curveness","simpleLayout","getGraph","circularLayout","unitAngle","x12","y12","parallelPreprocessor","parallelModel","handlers","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","triggerOn","Parallel","graphicUtil","normalizeRect","makeRectPanelClipPath","localPoints","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","makeRectIsTargetByCursor","targetModel","keysFunction","sortKeysFunction","sortKeys","entries","entriesMap","mapObject","sortKeyFunction","keyFunction","valuesByKey","keyValue","curveUtil","EffectLine","_updateEffectSymbol","effectLineProto","effectModel","_updateEffectAnimation","period","constantSpeed","delayExpr","isDelayFunc","updateAnimationPoints","getLineLength","_period","__t","updateSymbolPosition","__p1","__cp1","__p2","_createPolyline","polylineProto","positionMap","horizontal","vertical","onLeave","record","doEnter","currTrigger","useHandler","dis","pendings","showTip","hideTip","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","unregister","viewHelper","cartesianAxisHelper","CartesianAxisPointer","pixelValue","pointerShapeBuilder","currPosition","cursorOtherValue","getAxisDimIndex","shadow","LegendModel","_updateData","legendData","hasSelected","availableNames","getSeries","_availableNames","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","inactiveColor","selectedMode","makeBackground","layoutUtil","newlineDisabled","_contentGroup","_backgroundEl","getContentGroup","legendModel","resetInner","itemAlign","renderInner","viewportSize","mainRect","layoutInner","layoutRect","contentGroup","legendDrawnMap","selectMode","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","eachRawSeries","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","__legendDataIndex","contentRect","dataName","layoutBox","boxLayoutParams","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","info","foundCpts","targetInfoBuilders","builder","include","formatMinMax","minMax","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","scales","getScales","makePanelOpts","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","axisConvert","to","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","axisDiffProcessor","refer","resetSingleAxis","reset","filterSingleAxis","filterData","percentRange","valueRange","linkedNodesFinder","effectedModels","pieces","splitList","calculable","visualSolution","getColorVisual","visualMapModel","targetVisuals","resultVisual","mapping","eachTargetSeries","getDataDimension","processSingleVisualMap","visualMetaList","isTargetSeries","visualMeta","getVisualMeta","stops","outerColors","prepareVisualMeta","visualDefault","DEFAULT_COLOR","replacableOptionKeys","dataBound","inRange","outOfRange","contentColor","textGap","_dataExtent","controllerVisuals","itemSize","resetItemSize","completeVisualOption","resetVisual","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","formatValueText","edgeSymbols","isMinMax","textValue","resetExtent","optDim","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","symbolExists","symbolSizeExists","visuals","setSelected","active","inactive","autoPositionValues","doRender","renderBackground","getControllerVisual","targetValue","visualCluster","forceState","visualObj","visualMapping","convertOpacityToAlpha","positionGroup","getItemAlign","modelOption","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","convertDataIndex","giveStore","newSnapshot","dataZoomId","snapshot","doCreateNode","urn","win","vmlInited","doc","namespaces","zrvml","tagName","createNode","initVML","styleSheets","createStyleSheet","addRule","ZText","_graphic","Definable","svgRoot","tagNames","markLabel","_svgRoot","_tagNames","_markLabel","nextId","getDefs","isForceCreating","defs","getElementsByTagName","insertBefore","firstChild","element","onUpdate","addDom","removeDom","getDoms","doms","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","defineProperty","default","_this","_key","SizeSensorId","SensorStyle","SensorClassName","_echarts2","_interopRequireDefault","_core2","__esModule","EchartsReact","_EchartsReactCore","instance","Constructor","TypeError","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","echartsLib","subClass","enumerable","writable","configurable","setPrototypeOf","_inherits","_echarts","_export","Draggable","SILENT","EmptyProxy","handlerNames","proxy","painterRoot","_hovered","_lastTouchMoment","_lastX","_lastY","isHover","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","dispatch","eventArgs","eventPacket","eveType","makeEventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downEl","_downPoint","_upEl","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","displayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","displayableSortFunc","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","easingFuncs","_life","_initialized","onrestart","_pausedTime","globalTime","deltaTime","_startTime","easingFunc","schedule","fire","restart","_needsRemove","arg","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","Layer","parseInt10","preProcessLayer","__unusedCount","postProcessLayer","singleCanvas","nodeName","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","initContext","_domRoot","_getSize","domRoot","cssText","createRoot","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","paintAll","_paintList","__builtin__","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","getLayer","originalEl","_doPaintEl","_furtherProgressive","_progressiveToken","_progress","_doPaintList","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","flushProgressiveLayer","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","isDisplayableCulled","prevClipLayer","prevClipPaths","isClipPathChanged","prevElClipPaths","doClip","insertLayer","layersMap","prevLayer","isLayerValid","virtual","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","display","clearLayer","imageLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","whIdx","cwh","plt","prb","stl","defaultView","getComputedStyle","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","clearRect","pathTransform","imgShape","returnFalse","createDom","newDom","newDomStyle","domStyle","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","__currentValues","createBackBuffer","clearAll","clearColorGradientOrPattern","haveMotionBLur","__canvasGradient","fillRect","_clips","_running","_time","_pauseStart","clips","deferredEvents","deferredClips","_startLoop","_event","GestureMgr","mouseHandlerNames","touchHandlerNames","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","pointerHandlerNames","nm","eventNameFix","processGesture","gestureMgr","_gestureMgr","gestureInfo","recognize","setTouchTimer","_touching","_touchTimer","domHandlers","touchstart","touchmove","touchend","click","isPointerFromTouch","pointerType","HandlerDomProxy","mountHandlers","makeMouseHandler","initDomHandler","handlerDomProxyProto","eventUtil","pointPair","_doTrack","_recognize","touches","trackItem","recognizers","pinchEnd","pinchPre","pinchCenter","globalDefault","colorPaletteMinin","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","_seriesIndices","themeItem","mergeTheme","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","newCptOptionList","existComponent","getComponentsByTypes","ComponentModelClass","createSeriesIndices","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","q","indexAttr","idAttr","nameAttr","getQueryCond","doFilter","components","queryResult","oneSeries","rawSeriesIndex","getCurrentSeriesIndices","filterSeries","filteredSeries","componentTypes","makeStyleMapper","getLineDash","lineType","dotSize","dashSize","PATH_COLOR","transformPath","cc","vMag","vRatio","u","vAngle","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","createPathOptions","pathProxy","cs","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathProxyFromString","pathEls","pathList","pathEl","pathBundle","cubic","quadratic","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","windingArc","x_","containPath","isStroke","mathAtan2","nPoint","unitX","unitY","polyHelper","v2Distance","interpolate","isLoop","segs","w2","w3","v2Min","v2Max","v2Scale","v2Add","v2Clone","v2Sub","constraint","prevPoint","nextPoint","cps","d0","_curve","someVectorAt","isTangent","cpx2","cpy2","_updatePathDirty","getBorderLineDash","platform","animationDuration","animationEasingUpdate","progressiveThreshold","hoverLayerThreshold","useUTC","echartsAPIList","chartInstance","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","oldOptionBackup","newParsedOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","oldOption","newCptOpt","oldCptOpt","isRecreate","optionBackup","timelineModel","getCurrentIndex","indices1","indices2","indicesEquals","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","isTheme","seriesOpt","clockWise","pointerColor","dataRange","componentName","POSSIBLE_STYLES","compatItemStyle","itemStyleOpt","normalItemStyleOpt","emphasisItemStyleOpt","compatTextStyle","labelOptSingle","compatLabelTextStyle","labelOpt","toArr","toObj","upperLabel","edgeLabel","markPoint","markLine","markArea","mpData","mlData","processSeries","axisOpt","parallel","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radar","radarOpt","geoOpt","regionObj","colorAccessPath","maskColor","mask","labelRect","_completeDimensions","_symbol","createList","createScale","mixinAxisModelCommonMethods","scaleProto","rank","scaleHelper","intervalScaleProto","mathCeil","mathFloor","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxTickNum","approxInterval","scaleLevelsLen","scaleLevels","bisect","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","roundingErrorFix","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","fixRoundingError","__fixMax","originalVal","visualSymbol","layoutPoints","dataSample","clipOverflow","showSymbol","showAllSymbol","sampling","lineAnimationDiff","_poly","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","halfBandWidth","createClipShape","hasAnimation","radiusExtent","angleExtent","RADIAN","createPolarClipShape","xExtent","yExtent","createGridClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","stepPt2","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","_polygon","isAreaChart","valueStart","baseDataOffset","stackedOnSameSign","stackedData","getStackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","stopLen","minCoord","maxCoord","coordSpan","gradient","getVisualGradient","getAxesByScale","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","getStackedOnPoint","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","diffResult","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","samplers","nearest","indexSampler","sampler","Cartesian","axisX","axisY","dimAxisMapper","_axes","_dimList","_dataCoordConvert","input","dimList","output","coordExtent","containLabel","axisBuilderAttrs","selfBuilderAttrs","CartesianAxisView","oldAxisGroup","_axisGroup","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","areaInterval","brushSelector","barItemStyle","BAR_BORDER_WIDTH_QUERY","coordinateSystemType","_render","isHorizontalOrRadial","elementCreator","updateStyle","removeRect","removeSector","rectShape","animateProperty","animateTarget","isRadial","sector","sectorShape","fixedLineWidth","rawLayout","getLineWidth","signX","signY","isPolar","getBarItemStyle","createDataSelectAction","dataColor","pieLayout","dataSelectableMixin","PieSeries","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","minAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","animationType","updateDataSelected","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","piePieceProto","firstCreate","_updateLabel","labelText","labelHoverModel","labelLineModel","labelLineHoverModel","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","piePiece","_createClipPath","validDataCount","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","adjustSingleSide","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","labelLayoutList","hasLabelRotate","labelPosition","labelLineLen","labelLineLen2","isLabelInside","leftList","rightList","avoidOverlap","largeThreshold","LargeSymbolDraw","_normalSymbolDraw","_largeSymbolDraw","largeSymbolDraw","normalSymbolDraw","LargeSymbolPath","sizes","symbolProxy","symbolProxyShape","findDataIndex","_symbolEl","largeSymbolProto","radarLayout","IndicatorAxis","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","getIndicatorAxes","indicatorIndex","coordToPoint","closestAxis","minRadianDiff","closestAxisIdx","coodToData","viewSize","indicatorAxes","radarSeries","increaseInterval","rawExtent","fixedMin","fixedMax","halfSplitNumber","radarList","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","indicator","_buildAxes","_buildSplitLineAndArea","axisBuilders","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLines","splitAreas","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","RadarSeries","radarIndex","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","hoverAreaStyleModel","polygonIgnore","hoverPolygonIgnore","itemHoverStyle","pointsConverter","polarOptArr","polarNotRadar","polarOpt","polarIndex","mapSymbolLayout","mapDataStatistic","MapSeries","needsDrawMap","_fillOption","regionName","seriesNames","otherIndex","originalData","getRegion","showLegendSymbol","dataRangeHoverLink","scaleLimit","geoFixFuncs","_nameCoordMap","loadGeoJson","containCoord","regionsMap","specialArea","_regionsMap","fixFunc","getRegionByCoord","getGeoCoord","regionRect","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","geoCoordMap","Russia","United States","United States of America","mapModel","_mapDraw","_renderSymbols","fullData","mainSeries","fullIndex","polygonGroups","__mapOriginalZ2","processedMapType","mapSymbolOffsets","subMapSeries","colorList","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","dataStatistics","mapLocation","orthogonalLayout","radialLayout","treeOption","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","collapsed","_oldTree","_mainGroup","curvature","updateNode","removeNode","getTreeNodeStyle","sourceSymbolEl","sourceLayout","sourceOldLayout","__radialOldRawX","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","isLeft","rootLayout","__edge","getEdgeShape","radialCoor1","radialCoor2","radialCoor3","radialCoor4","commonLayout","treemapVisual","treemapLayout","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","roam","nodeClick","breadcrumb","emptyItemWidth","gapWidth","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","completeTreeValue","childValue","thisValue","hasColorDefine","globalColorList","modelColor","level0","setDefault","resetViewRoot","setLayoutInfo","mapIdToIndex","idIndexMap","_idIndexMap","_idIndexMapCount","getViewRoot","Breadcrumb","animationUtil","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","_containerGroup","nodeGroup","_breadcrumb","_state","thisStorage","reRoot","rootNodeGroup","containerGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","renderNode","dualTravel","thisViewChildren","oldViewChildren","parentGroup","sameTree","processNode","thisNode","oldNode","willDeleteEls","storageName","delEls","__tmWillDelete","clearStorage","els","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","last","old","fadein","_onPan","_onZoom","_clearController","rootRect","findTarget","isLeafRoot","_rootToNode","_zoomToNode","linkTarget","open","bgEl","thisLayout","isInView","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","isAboveViewRoot","bg","useUpperLabel","visualBorderColor","emphasisBorderColor","upperLabelWidth","prepareText","renderContent","__tmWillVisible","upperLabelRect","nodeModel","iconChar","normalLabelModel","emphasisLabelModel","isShow","lasts","prepareAnimationWhenHasOld","zInLevel","zb","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","ARRAY_LENGTH","makeItemPoints","packEventData","itemNode","selfType","onSelect","normalStyleModel","layoutParam","totalWidth","renderList","_prepare","_renderContent","TEXT_PADDING","lastX","availableSize","onclick","doneCallback","elExistsMap","actionTypes","originViewRoot","ITEM_STYLE_NORMAL","calculateColor","getValueVisualDefine","getRangeVisual","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeLayout","thisNodeColor","nodeItemStyleModel","levelItemStyle","visualName","buildVisuals","calculateBorderColor","rangeVisual","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","worst","row","rowFixedLength","areaMax","areaMin","squareArea","halfGapWidth","idx0WhenH","idx1WhenH","rowOtherLength","rowLen","wh1","remain","modWH","wh0","getUpperLabelHeight","seriesOption","viewAbovePath","rootSize","currNode","defaultSize","viewArea","currNodeValue","estimateRootSize","viewRootLayout","squarify","hideChildren","upperLabelHeight","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","statistic","orderedChildren","deletePoint","filterByThreshold","initChildren","best","score","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","childClipRect","categoryFilter","categoryVisual","edgeVisual","forceLayout","createView","createGraphFromNodeEdge","GraphSeries","_categoriesData","links","_updateCategoriesData","categoriesModels","_categoriesModels","categoryIdx","categoryModel","edgeLabelModel","fakeSeriesModel","edgeGetParent","getEdgeData","getCategoriesData","getEdgeByIndex","sourceName","targetName","categoriesData","focusNodeAdjacency","circular","rotateLabel","initLayout","repulsion","gravity","edgeLength","layoutAnimation","edgeSymbol","edgeSymbolSize","nodeScaleRatio","generateNodeKey","_directed","_nodesMap","_edgesMap","graphProto","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","isDirected","nodesMap","getNodeByIndex","edgesMap","getEdge","breadthFirstTraverse","startNode","__visited","queue","currentNode","otherNode","inDegree","outDegree","createGraphDataProxyMixin","hostName","getGraphicEl","adjustEdge","nodeOpacityPath","lineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","fadeInItem","lineDraw","_lineDraw","_firstRender","_nodeScaleRatio","_getNodeGlobalScale","_updateNodeAndLinkScale","_layoutTimeout","_startForceLayoutIteration","warmUp","_layouting","setFixed","setUnfixed","__focusNodeAdjacency","__unfocusNodeAdjacency","edgeDataIndex","circularRotateLabel","adjacentEdge","unfocusNodeAdjacency","stopped","nodeScale","groupScale","groupZoom","straightLineProto","bezierCurveProto","isLine","curveTool","v3","intersectCurveCircle","curvePoints","radiusSquare","nextDiff","tmp0","pts2","fromSymbol","toSymbol","__original","originalPoints","graphSeries","categoryNames","categoryNameIdxMap","colorQuery","opacityQuery","_simpleLayoutHelper","preservedPoints","forceModel","nodeDataExtent","edgeDataExtent","rep","forceInstance","oldStep","pp","friction","v12","nLen","repFact","coordSysType","positions","bbWidth","bbHeight","viewCoordSys","dataOpt","PointerPath","formatLabel","posInfo","parsePosition","_renderMain","angleRangeSpan","prevEndAngle","axisLineWidth","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","subSplitNumber","splitLineLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","pointerModel","titleModel","detailModel","funnelLayout","FunnelSeries","minSize","funnelAlign","FunnelPiece","funnelPieceProto","opacityAccessPath","funnelPiece","valueArr","isAscending","getSortedIndices","sizeExtent","getLinePoints","offY","parallelVisual","hasParallelSeries","createParallelIfNeeded","parallelAxis","axisOption","parallelIndex","parallelOption","mergeAxisOptionFromParallel","ParallelAxis","sliderMove","_axesLayout","_init","parallelAxisIndex","_updateAxesFromSeries","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","axisLength","layoutLength","_layoutAxes","winSize","layoutExtent","axisCount","axisExpandWidth","axisExpandCount","axisExpandable","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","positionTable","rotationTable","axisCoordToPoint","eachActiveState","hasActiveSet","hasAxisBrushed","activeState","getActiveState","axisLayout","getAxisLayout","pointCoord","triggerArea","useJump","axisExpandCenter","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","_initDimensions","setAxisExpand","activeIntervals","getAreaSelectStyle","setActiveIntervals","intervals","areaSelectStyle","parallelAxisModel","elementList","_brushController","_onBrush","fromAxisAreaSelect","areaWidth","builderOpt","_refreshBrushController","getCoverInfoList","extentLen","coverInfoList","coverInfo","parallelAxisId","parallelAxisIndices","rawData","modelDims","maxDimNum","numberDim","convertDimNameToNumber","firstItem","generateDataDims","dataDimsInfo","modelDimsIndex","axisData","translateCategoryValue","getRawIndicesByActiveState","theActiveState","inactiveOpacity","activeOpacity","createLinePoints","isEmptyValue","_dataGroup","_renderForNormal","dataGroup","newDataIndex","addEl","oldDataIndex","seriesStyleModel","updateElCommon","rectEl","globalColors","opacityMap","itemOpacity","sankeyLayout","sankeyVisual","SankeySeries","rawDataOpt","nodeWidth","nodeGap","layoutIterations","SankeyShape","halfExtent","n1Layout","n2Layout","edgeLayout","nest","resolveCollisions","nodesByBreadth","ascendingDepth","nodeY","relaxRightToLeft","weightedTarget","getEdgeValue","relaxLeftToRight","weightedSource","ascendingTargetDepth","ascendingSourceDepth","ascending","computeNodeValues","iterations","remainNodes","nextNode","moveSinksRight","scaleNodeBreadths","computeNodeBreadths","kyArray","ky0","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","minValue","mapValueToColor","customColor","boxplotVisual","boxplotLayout","BoxplotSeries","boxWidth","WhiskerPath","WhiskerBox","styleUpdater","bodyIndex","whiskerIndex","_createContent","whiskerBoxProto","transInit","initBaseline","makeWhiskerEndsShape","whiskerEnds","constDim","chartLayout","bodyEnds","whiskerBoxDrawProto","BoxplotView","normalItemStyleModel","whiskerEl","bodyEl","borderColorQuery","defaulColor","groupResult","axisList","groupSeriesByAxis","groupItem","seriesCount","boxWidthList","boxOffsetList","boundList","maxDataCount","boxWidthBound","availableWidth","boxGap","calculateBase","cDim","halfWidth","variableDim","vDims","axisDimVal","median","getPoint","end1","end5","layEndLine","addBodyEnd","point1","point2","endCenter","layoutSingleSeries","preprocessor","candlestickVisual","candlestickLayout","CandlestickSeries","color0","borderColor0","barMinWidth","animationUpdate","getShadowDim","selectors","brushRect","CandlestickView","seriesItem","positiveBorderColorQuery","negativeBorderColorQuery","positiveColorQuery","negativeColorQuery","candleWidth","calculateCandleWidth","openVal","closeVal","lowestVal","highestVal","ocLow","ocHigh","ocLowPoint","ocHighPoint","lowestPoint","subPixelOptimizePoint","pmin","pmax","makeBrushRect","effectType","showEffectOn","rippleEffect","EffectSymbol","effectSymbolDraw","updateRipplePath","rippleGroup","effectCfg","ripplePath","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","linesLayout","linesVisual","preprocessOption","fromName","toName","LinesSeries","effect","trailLength","EffectPolyline","LargeLineDraw","hasEffect","isPolyline","isLarge","_hasEffet","_isPolyline","_isLarge","isSvg","_lastZlevel","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","lineContain","quadraticContain","LargeLineShape","seg","_lineEl","largeLineProto","lineEl","blurSize","pointSize","maxOpacity","minOpacity","HeatmapLayer","visualMapOfThisSeries","targetSeries","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","dataToRect","contentShape","inRangeVisuals","outOfRangeVisuals","hmLayer","_hmLayer","lng","lat","isInRange","dataSpan","getIsInContinuousRange","getIsInPiecewiseRange","getPieceList","Heatmap","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","gradientPixels","pixelsSingleState","Uint8ClampedArray","PictorialBarSeries","symbolPosition","symbolMargin","symbolRepeat","symbolRepeatDirection","symbolClip","symbolBoundingData","symbolPatternSize","LAYOUT_ATTRS","posDesc","pathForLineWidth","getSymbolMeta","symbolMeta","boundingLength","zeroPx","pxSignIdx","symbolBoundingExtent","convertToCoordOnAxis","coordSysExtent","repeatCutLength","pxSign","prepareBarLength","categorySize","symbolScale","prepareSymbolSize","valueLineWidth","prepareLineWidth","unitLength","pathLen","absBoundingLength","hasEndGap","uLenWithMargin","endFix","repeatSpecified","repeatTimes","toIntTimes","mDiff","sizeFix","pathPosition","bundlePosition","barRectShape","clipShape","prepareLayoutInfo","createPath","createOrUpdateRepeatSymbols","bundle","__pictorialBundle","eachPath","__pictorialAnimationIndex","__pictorialRepeatTimes","updateAttr","makeTarget","updateHoverAnimation","onMouseOver","onMouseOut","createOrUpdateSingleSymbol","mainPath","__pictorialMainPath","createOrUpdateBarRect","barRect","__pictorialBarRect","createOrUpdateClip","__pictorialClipPath","createBar","__pictorialShapeStr","getShapeStr","__pictorialSymbolMeta","removeBar","pathes","immediateAttrs","animationAttrs","barRectHoverStyle","barPositionOutside","times","roundedTimes","coordSysRect","pictorialShapeStr","updateBar","themeRiverLayout","themeRiverVisual","Single","singles","SingleAxis","_axis","_adjustAxis","_updateAxisTransform","extentSum","singleAxisHelper","SingleAxisView","selfBuilderAttr","modelHelper","findPointFromSeries","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","seriesNestestValue","nestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","dataByCoordSys","coordSysItem","coordSysId","coordSysIndex","coordSysMainType","dataByAxis","valueLabelOpt","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","shadowStyle","icon","globalListener","AxisPointerView","XY","WH","SingleAxisPointer","getPointDimIndex","ThemeRiverSeries","fixData","rawDataLength","dataByName","layData","dataList","layerNum","largestLayer","timeValue","keyIndex","getLayerSeries","lenCount","indexArr","layerSeries","comparer","index1","index2","nearestIdx","pointNum","theValue","htmlName","htmlValue","keyGetter","newLayersGroups","oldLayersGroups","points0","layerGroup","_layersSeries","baseY0","layerPoints","singleLayer","sums","temp","computeBaseline","baseLine","layerIndex","barGrid","ITEM_STYLE_NORMAL_PATH","ITEM_STYLE_EMPHASIS_PATH","LABEL_NORMAL","LABEL_EMPHASIS","GROUP_DIFF_PREFIX","prepareCustoms","prepareStyleTransition","targetStyle","elOptionStyle","oldElStyle","doCreateOrUpdate","elOptionType","__customGraphicType","__customPathData","__customImagePath","__customText","graphicType","Clz","createEl","targetProps","targetOpacity","styleEmphasis","updateEl","oldChildren","newChildren","diffChildrenByName","processAddUpdate","processRemove","diffGroupChildren","childOption","customSeries","renderItem","prepareResult","currDataIndexInside","currItemModel","currLabelNormalModel","currLabelEmphasisModel","currLabelValueDim","currVisualColor","userAPI","updateCache","barLayout","currentSeriesIndices","userParams","dataInsideLength","dataDimIndex","wrapEncodeDef","currDirty","makeRenderItem","dataToCoordSize","dataSize","halfSize","dataToRadius","dataToAngle","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","weeks","dayCount","allDay","graphicOption","elements","GraphicModel","parentId","_elOptionsToUpdate","existList","flattenedList","_flatten","mappingResult","elOptionsToUpdate","newElOption","existElOption","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","mergeNewElOptionToExist","existItem","isSetLoc","setLayoutInfoToExist","optionList","useElOptionsToUpdate","targetElParent","__ecGraphicId","removeEl","existEl","existElParent","isSet","_elMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","elOptionCleaned","getCleanedElOption","__ecGraphicWidth","__ecGraphicHeight","elOptions","parentEl","containerInfo","bounding","legendFilter","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","mergeAndNormalizeLayoutParams","getOrient","raw","LegendView","ScrollableLegendView","_currentIndex","_controllerGroup","_showController","__rectSize","me","controllerGroup","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","orientIdx","hw","yx","controllerRect","showController","contentPos","containerPos","controllerPos","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","pageText","pageCount","pagePrevDataIndex","pageNextDataIndex","targetItemGroup","currDataIndex","containerRectSize","itemRect","itemLoc","startIdx","winRect","getItemRect","startRect","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","transitionDuration","enterable","TooltipContent","axisPointerViewHelper","proxyRect","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","_tryShow","_hide","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","hideLater","buildTooltipModel","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","setContent","contentSize","vAlign","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","getOuterSize","refixTooltipPosition","isCenterAlign","confineTooltipPosition","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","modelCascade","resultModel","clientWidth","clientHeight","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","vendors","assembleCssText","transitionText","vendorPrefix","assembleTransition","borderName","camelCase","assembleFont","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmouseleave","_hideDelay","currentStyle","viewportRootOffset","barPolar","calRadialBar","valueMax","valueMin","pointToCoord","stackCoord","RadiusAxis","AngleAxis","_radiusAxis","_angleAxis","radiusToData","angleToData","maxAngle","foundAxisModel","PolarAxisModel","polarId","polarAxisDefaultExtendedOption","getAxisLineShape","rExtent","getRadiusIdx","ticksAngles","_axisLine","_axisTick","tickAngle","_axisLabel","labelsAngles","labelTextAlign","labelTextVerticalAlign","prevAngle","axisAngle","layoutAxis","prevRadius","PolarAxisPointer","coordValue","getLabelPosition","makeAction","selectableMixin","GeoModel","_optionModelMap","optionModelMap","regionOpt","DEFAULT_TOOLBOX_BTNS","brushComponents","brushComponentSpecifiedBtns","brushOpt","tbs","feature","toolboxFeature","toolboxBrush","brushTypes","flag","removeDuplicate","selector","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","doDispatch","brushSelected","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","sels","selectorsByElementType","bSelector","sel","brushModel","setBrushOption","brushTargetManager","throttleDelay","brushIndex","thisBrushSelected","brushId","brushName","brushLink","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","linkOthers","brushed","stepAParallel","brushModelNotControll","stepAOthers","seriesBrushSelected","getBoundingRectFromMinMax","rg","getLineSelectors","inLineRange","layoutRange","lineIntersectPolygon","lx","ly","l2x","l2y","lineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","determinant","nearZero","namenda","miu","v4","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","coordInfoList","inBrush","outOfBrush","setAreas","updateController","modelId","$from","featureManager","brushLang","Brush","_brushMode","featureModel","isBrushed","setIconStatus","getIcons","availableIcons","icons","command","Calendar","calendarModel","_rangeInfo","_sw","_sh","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","day","getDay","formatedDate","getNextNDay","setDate","_lineWidth","_getRangeInfo","_initRangeOption","whNames","cellSize","layoutParams","cellNumbers","cellSizeSpecified","whGlobal","calendarRect","dayInfo","week","nthWeek","pointToDate","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","firstDay","setMonth","reversed","startDateNum","endDateNum","fweek","lweek","nthDay","calendarList","calendarSeries","CalendarModel","dayLabel","monthLabel","yearLabel","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","rangeData","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","sh","addPoints","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","tmpD","_formatterLabel","_yearTextPositionControl","aligns","xc","yc","posPoints","yearText","_monthTextPositionControl","isCenter","termPoints","firstDayPoints","yyyy","yy","MM","monthText","_weekTextPositionControl","isStart","firstDayOfWeek","weekText","subtext","subtarget","subtextStyle","subtextStyleModel","subText","subTextEl","sublink","groupRect","layoutOption","alignStyle","_dimName","_axisIndex","_valueWindow","_percentWindow","_minMaxSpan","_dataZoomModel","setAxisModel","isRestore","percentWindow","valueWindow","useOrigin","getTargetSeriesModels","getOtherAxisModel","coordSysIndexName","foundOtherAxisModel","otherAxisModel","getMinMaxSpan","calculateDataWindow","percentExtent","boundValue","boundPercent","seriesExtent","fixExtentByAxis","calculateDataExtent","dataWindow","minMaxSpan","valueSpan","setMinMaxSpan","leftOut","rightOut","thisHasValue","thisLeftOut","thisRightOut","isInWindow","dataBackground","fillerColor","handleIcon","handleStyle","labelPrecision","showDetail","showDataShadow","zoomLock","DataZoomView","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dataShadowInfo","_buildView","_updateView","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","location","targetAxisModel","otherAxisInverse","_getViewExtent","_onClickPanelClick","_prepareDataShadowInfo","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","thisCoord","stride","otherCoord","thisAxis","thisDim","getOtherDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","bRect","handleColor","viewExtent","_updateInterval","viewExtend","nonRealtime","handleInterval","handleHeight","_updateDataInfo","labelTexts","dataInterval","_formatLabel","orderedHandleEnds","barTransform","textPoint","valueStr","showOrHide","_dispatchZoomAction","localPoint","disabled","roams","InsideZoomView","shouldRecordRange","allCoordIds","coordInfo","generateCoordId","dataZoomOption","coordId","containsPoint","throttleRate","panGetRange","zoomGetRange","roamControllerOpt","newX","newY","directionInfo","getDirectionInfo","percentDelta","signal","pixel","pixelLength","percentPoint","pixelStart","oldPoint","newPoint","cleanStore","onPan","wrapAndDispatch","onZoom","getRange","dataZoomInfos","dataZoomInfo","theDataZoomId","theCoordId","newRecord","createController","controllerParams","typePriority","true","move","false","oneType","mergeControllerParams","VisualMapModel","DEFAULT_BAR_BOUND","ContinuousModel","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","_resetRange","auto","getSelected","findTargetDataIndices","oVals","getColorStopValues","iVals","setStop","iIdx","oIdx","iLen","oLen","first","stopsLen","stopValues","VisualMapView","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_useHandle","_hoverLinkDataIndices","_hovering","_renderBar","dataRangeText","_renderEndsText","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","endsIndex","_applyTransform","targetGroup","shapes","_createBarGroup","createPolygon","_dragHandle","textSize","handleThumbs","handleLabelPoints","_createHandle","_createIndicator","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","handleLabelPoint","indicatorLabel","indicatorLabelPoint","visualMapId","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","barPoints","_updateHandle","_makeColorGradient","symbolSizes","_createBarPoints","handlesColor","currValue","_showIndicator","cursorValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","oldBatch","newBatch","resultBatches","_dispatchHighDown","PiecewiseModel","minOpen","maxOpen","itemSymbol","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","visualTypesInPieces","getSelectedMapKey","hasSel","getRepresentValue","representValue","pieceInterval","splitStep","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","_getItemAlign","viewData","_getViewData","endsText","viewPieceList","_onItemClick","_enableHoverLink","indexInModelPieceList","_createItemSymbol","visualState","onHoverLink","shapeParam","newKey","markerHelper","updateMarkerLayout","xPx","yPx","markPointModel","mpModel","symbolDrawMap","coordDimsInfos","markLineTransform","mlModel","mlFrom","mlTo","isInifinity","ifMarkLineHasOnlyDim","fromCoord","toCoord","otherDimIndex","markLineFilter","updateSingleMarkerEndLayout","isFrom","markLineModel","fromData","toData","__to","lineDrawMap","optData","updateDataVisualAndLayout","lineColor","fromSymbolSize","toSymbolSize","colorUtil","markAreaTransform","maModel","ltCoord","rbCoord","markAreaFilter","getSingleMarkerEndPoint","dimPermutations","markAreaModel","areaData","areaGroupMap","polygonGroup","__data","transferItem","itemStyleEmphasis","labelNormal","excludeLabelAttr","ec2Types","controlStyle","controlPosition","compatibleEC2","currentIndex","setCurrentIndex","isIndexMax","setPlayState","playState","TimelineModel","SliderTimelineModel","checkpointStyle","showPlayBtn","showPrevBtn","showNextBtn","playIcon","stopIcon","nextIcon","prevIcon","autoPlay","rewind","playInterval","_names","_initData","getPlayState","dataArr","idxArr","newItem","TimelineView","TimelineAxis","_timer","_currentPointer","_labelGroup","mainGroup","_createGroup","labelGroup","_createAxis","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","playPosition","prevBtnPosition","nextBtnPosition","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","controlSize","showControl","controlGap","sizePlusGap","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","boundIdx","_customizeScale","newGroup","_renderAxisLine","_renderAxisTick","hoverStyleModel","symbolOpt","_changeTimeline","giveSymbol","_renderControl","makeBtn","iconPath","willRotate","btn","objPath","makeIcon","_handlePlayClick","_renderCurrentPointer","onCreate","_handlePointerDrag","_handlePointerDragend","pointerMoveTo","nextState","_pointerChangeTimeline","mousePos","_toAxisCoord","targetDataIndex","_findNearestTick","axisCoord","nextIndex","noAnimation","_autoLabelInterval","ToolboxModel","featureOpt","featureName","Feature","showTitle","iconStyle","listComponentHelper","toolboxModel","featureOpts","_features","featureNames","_featureNames","processFeature","titleText","__title","needPutOnTop","topOffset","oldName","isUserFeatureName","unusable","iconStyleModel","titles","iconPaths","iconName","createIconPaths","iconStatus","saveAsImageLang","SaveAsImage","$a","download","href","MouseEvent","msSaveOrOpenBlob","bstr","atob","u8arr","Uint8Array","blob","Blob","write","evt","bubbles","cancelable","dispatchEvent","magicTypeLang","MagicType","seriesOptGenreator","radioTypes","radio","newSeriesOpt","currentType","dataViewLang","BLOCK_SPLITER","ITEM_SPLITER","getContentFromModel","seriesGroupByCategoryAxis","otherSeries","meta","groupSeries","tables","headers","columns","items","assembleSeriesWithCategoryAxis","vals","assembleOtherSeries","trim","itemSplitRegex","parseContents","blockMetaList","blocks","isTSVFormat","tsv","tsvLines","header","parseTSVContents","blockMeta","hasName","parseListContents","DataView","readOnly","optionToContent","contentToOption","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","keyCode","selectionStart","selectionEnd","newSeriesOptList","tryMergeDataOption","history","dataZoomLang","DATA_ZOOM_ID_BASE","DataZoom","_isZoomActive","zoomActive","dataZoomSelectActive","retrieveAxisSetting","updateZoomBtnStatus","updateBackBtnStatus","nextActive","setBatch","found","dzModel","findDataZoom","dataZoomOpts","toolboxOpt","dataZoomOpt","addForAxis","axisIndicesName","givenAxisIndices","forEachComponent","$fromToolbox","restoreLang","Restore","vmlCore","Z2","initRootElStyle","coordsize","coordorigin","rgb2Str","append","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillAndStroke","vmlEl","zrEl","isFill","gradientType","focus","expansion","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateFillNode","dashstyle","updateStrokeNode","brushVML","vmlRoot","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","onRemove","onAdd","appendRectText","ow","oh","isImage","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","body","ex","offsetWidth","fromTextEl","fontString","variant","fontVariant","family","getFontStyle","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","encodeHtmlAttribute","zrLog","VMLPainter","vmlViewport","_vmlRoot","_vmlViewport","_firstPaint","__alreadyNotVisible","_getWidth","_getHeight","vmlViewportStyle","createMethodNotSupport","arrayDiff","GradientManager","ClippathManager","checkParentAvailable","insertAfter","prevSibling","prepend","SVGPainter","gradientManager","clipPathManager","viewport","_viewport","_visibleList","visibleList","listLen","newVisibleList","svgProxy","prevSvgElement","svgElement","textSvgElement","added","addWithoutUpdate","_getDefs","viewportStyle","outerHTML","unescape","Diff","buildValues","componentPos","componentLen","oldPos","clonePath","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","execEditLength","diagonalPath","basePath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","updateDom","clipPathEl","cloneNode","_textDom","_extends","assign","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_react2","_propTypes2","_fastDeepEqual2","_sizeSensor","_utils","EchartsReactCore","_Component","getEchartsInstance","echartsElement","warn","rerender","_this$props","onEvents","onChartReady","echartObj","renderEchartDom","bindEvents","events","_bindEvent","loadingOption","prevProps","pickKeys","pick","shouldSetOption","className","_this2","_props","ref","propTypes","object","isRequired","bool","oneOf","oneOfType","defaultProps","keyList","equal","arrA","arrB","dateA","dateB","regexpA","regexpB","_sensorPool","sensor","getSensor","unbind","removeSensor","_id2","_sensors","_constant","Sensors","sensorId","newId","createSensor","removeAttribute","destroy","_object","_resizeObserver","ResizeObserver","_debounce2","listeners","resizeListener","listener","contentDocument","newSensor","observe"],"mappings":"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","file":"static/js/65.js","sourcesContent":["/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;","var _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar loadingDefault = require(\"./loading/default\");\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\nvar each = zrUtil.each;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '3.8.5';\nvar dependencies = {\n  zrender: '3.7.4'\n};\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method) {\n  return function (eventName, handler, context) {\n    // Event name is all lowercase\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 pfs.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  this._api = createExtensionAPI(this);\n  Eventful.call(this);\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = []; // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.prio - b.prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  zr.animation.on('frame', this._onframe, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  // Lazy update\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    updateMethods.prepareAndUpdate.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  var silent;\n\n  if (zrUtil.isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    updateMethods.prepareAndUpdate.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataUrl = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.pathToSvg();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataUrl() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    targetCanvas.width = width;\n    targetCanvas.height = height;\n    var zr = zrender.init(targetCanvas);\n    each(canvasList, function (item) {\n      var img = new graphic.Image({\n        style: {\n          x: item.left * dpr - left,\n          y: item.top * dpr - top,\n          image: item.dom\n        }\n      });\n      zr.add(img);\n    });\n    zr.refreshImmediately();\n    return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function (payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var coordSysMgr = this._coordSysMgr;\n    var zr = this._zr; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // Fixme First time update ?\n\n\n    ecModel.restoreData(); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(this._model, this._api);\n    processData.call(this, ecModel, api);\n    stackSeriesData.call(this, ecModel);\n    coordSysMgr.update(ecModel, api);\n    doVisualEncoding.call(this, ecModel, payload);\n    doRender.call(this, ecModel, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n    var painter = zr.painter; // TODO all use clearColor ?\n\n    if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n      zr.configLayer(0, {\n        clearColor: backgroundColor\n      });\n    } else {\n      // In IE8\n      if (!env.canvasSupported) {\n        var colorArr = colorTool.parse(backgroundColor);\n        backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n        if (colorArr[3] === 0) {\n          backgroundColor = 'transparent';\n        }\n      }\n\n      if (backgroundColor.colorStops || backgroundColor.image) {\n        // Gradient background\n        // FIXME Fixed layer？\n        zr.configLayer(0, {\n          clearColor: backgroundColor\n        });\n        this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n        this._dom.style.background = 'transparent';\n      } else {\n        if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n          zr.configLayer(0, {\n            clearColor: null\n          });\n        }\n\n        this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n        this._dom.style.background = backgroundColor;\n      }\n    }\n\n    each(postUpdateFuncs, function (func) {\n      func(ecModel, api);\n    }); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ecModel.eachSeries(function (seriesModel) {\n      seriesModel.getData().clearAllVisual();\n    });\n    doVisualEncoding.call(this, ecModel, payload, true);\n    invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function (payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    doLayout.call(this, ecModel, payload);\n    invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  prepareAndUpdate: function (payload) {\n    var ecModel = this._model;\n    prepareView.call(this, 'component', ecModel);\n    prepareView.call(this, 'chart', ecModel);\n    updateMethods.update.call(this, payload);\n  }\n};\n/**\n * @private\n */\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n  // If dispatchAction before setOption, do nothing.\n\n  ecModel && ecModel.eachComponent(condition, function (model, index) {\n    callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  this[IN_MAIN_PROCESS] = true;\n\n  this._zr.resize(opts);\n\n  var optionChanged = this._model && this._model.resetOption('media');\n\n  var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n  updateMethods[updateMethod].call(this); // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n  this[IN_MAIN_PROCESS] = false;\n  var silent = opts && opts.silent;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (zrUtil.isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (!zrUtil.isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      updateMethods.prepareAndUpdate.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on');\nechartsProto.off = createRegisterEventWithLowercaseName('off');\nechartsProto.one = createRegisterEventWithLowercaseName('one');\n/**\n * @param {string} methodName\n * @private\n */\n\nfunction invokeUpdateMethod(methodName, ecModel, payload) {\n  var api = this._api; // Update all components\n\n  each(this._componentsViews, function (component) {\n    var componentModel = component.__model;\n    component[methodName](componentModel, ecModel, api, payload);\n    updateZ(componentModel, component);\n  }, this); // Upate all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chart = this._chartsMap[seriesModel.__viewId];\n    chart[methodName](seriesModel, ecModel, api, payload);\n    updateZ(seriesModel, chart);\n    updateProgressiveAndBlend(seriesModel, chart);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Post render\n\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction prepareView(type, ecModel) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? this._componentsViews : this._chartsViews;\n  var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n  var zr = this._zr;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n    if (isComponent) {\n      if (componentType === 'series') {\n        return;\n      }\n    } else {\n      model = componentType;\n    } // Consider: id same and type changed.\n\n\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n\n      if (Clazz) {\n        view = new Clazz();\n        view.init(ecModel, this._api);\n        viewMap[viewId] = view;\n        viewList.push(view);\n        zr.add(view.group);\n      } else {\n        // Error\n        return;\n      }\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n  }, this);\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      zr.remove(view.group);\n      view.dispose(ecModel, this._api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n}\n/**\n * Processor data in each series\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction processData(ecModel, api) {\n  each(dataProcessorFuncs, function (process) {\n    process.func(ecModel, api);\n  });\n}\n/**\n * @private\n */\n\n\nfunction stackSeriesData(ecModel) {\n  var stackedDataMap = {};\n  ecModel.eachSeries(function (series) {\n    var stack = series.get('stack');\n    var data = series.getData();\n\n    if (stack && data.type === 'list') {\n      var previousStack = stackedDataMap[stack]; // Avoid conflict with Object.prototype\n\n      if (stackedDataMap.hasOwnProperty(stack) && previousStack) {\n        data.stackedOn = previousStack;\n      }\n\n      stackedDataMap[stack] = data;\n    }\n  });\n}\n/**\n * Layout before each chart render there series, special visual encoding stage\n *\n * @param {module:echarts/model/Global} ecModel\n * @private\n */\n\n\nfunction doLayout(ecModel, payload) {\n  var api = this._api;\n  each(visualFuncs, function (visual) {\n    if (visual.isLayout) {\n      visual.func(ecModel, api, payload);\n    }\n  });\n}\n/**\n * Encode visual infomation from data after data processing\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {object} layout\n * @param {boolean} [excludesLayout]\n * @private\n */\n\n\nfunction doVisualEncoding(ecModel, payload, excludesLayout) {\n  var api = this._api;\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n  each(visualFuncs, function (visual) {\n    (!excludesLayout || !visual.isLayout) && visual.func(ecModel, api, payload);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction doRender(ecModel, payload) {\n  var api = this._api; // Render all components\n\n  each(this._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  }, this);\n  each(this._chartsViews, function (chart) {\n    chart.__alive = false;\n  }, this); // Render all charts\n\n  ecModel.eachSeries(function (seriesModel, idx) {\n    var chartView = this._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    chartView.render(seriesModel, ecModel, api, payload);\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateProgressiveAndBlend(seriesModel, chartView);\n  }, this); // If use hover layer\n\n  updateHoverLayerStatus(this._zr, ecModel); // Remove groups of unrendered charts\n\n  each(this._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  }, this);\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    this._zr.on(eveName, function (e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params; // no e.target when 'globalout'.\n\n      if (eveName === 'globalout') {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        }\n\n      if (params) {\n        params.event = e;\n        params.type = eveName;\n        this.trigger(eveName, params);\n      }\n    }, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._disposed = true;\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction updateHoverLayerStatus(zr, ecModel) {\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    if (!el.isGroup) {\n      elCount++;\n    }\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    storage.traverse(function (el) {\n      if (!el.isGroup) {\n        el.useHoverLayer = true;\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateProgressiveAndBlend(seriesModel, chartView) {\n  // Progressive configuration\n  var elCount = 0;\n  chartView.group.traverse(function (el) {\n    if (el.type !== 'group' && !el.ignore) {\n      elCount++;\n    }\n  });\n  var frameDrawNum = +seriesModel.get('progressive');\n  var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n\n  if (needProgressive) {\n    chartView.group.traverse(function (el) {\n      // FIXME marker and other components\n      if (!el.isGroup) {\n        el.progressive = needProgressive ? Math.floor(elCount++ / frameDrawNum) : -1;\n\n        if (needProgressive) {\n          el.stopAnimation(true);\n        }\n      }\n    });\n  } // Blend configration\n\n\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      el.setStyle('blend', blendMode);\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function (el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\nvar mapDataStores = {};\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  zrUtil.each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        zrUtil.each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n\n  if (dom.setAttribute) {\n    dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n  } else {\n    dom[DOM_ATTRIBUTE_KEY] = chart.id;\n  }\n\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    zrUtil.each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    zrUtil.each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  var key;\n\n  if (dom.getAttribute) {\n    key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n  } else {\n    key = dom[DOM_ATTRIBUTE_KEY];\n  }\n\n  return instances[key];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Function} processorFunc\n */\n\n\nfunction registerProcessor(priority, processorFunc) {\n  if (typeof priority === 'function') {\n    processorFunc = priority;\n    priority = PRIORITY_PROCESSOR_FILTER;\n  }\n\n  dataProcessorFuncs.push({\n    prio: priority,\n    func: processorFunc\n  });\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = zrUtil.isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutFunc\n */\n\n\nfunction registerLayout(priority, layoutFunc) {\n  if (typeof priority === 'function') {\n    layoutFunc = priority;\n    priority = PRIORITY_VISUAL_LAYOUT;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: layoutFunc,\n    isLayout: true\n  });\n}\n/**\n * @param {number} [priority=3000]\n * @param {Function} visualFunc\n */\n\n\nfunction registerVisual(priority, visualFunc) {\n  if (typeof priority === 'function') {\n    visualFunc = priority;\n    priority = PRIORITY_VISUAL_CHART;\n  }\n\n  visualFuncs.push({\n    prio: priority,\n    func: visualFunc\n  });\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  if (geoJson.geoJson && !geoJson.features) {\n    specialAreas = geoJson.specialAreas;\n    geoJson = geoJson.geoJson;\n  }\n\n  if (typeof geoJson === 'string') {\n    geoJson = typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(geoJson) : new Function('return (' + geoJson + ');')();\n  }\n\n  mapDataStores[mapName] = {\n    geoJson: geoJson,\n    specialAreas: specialAreas\n  };\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  return mapDataStores[mapName];\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\nvar ___ec_export = require(\"./export\");\n(function () {\n    for (var key in ___ec_export) {\n        if (___ec_export.hasOwnProperty(key)) {\n            exports[key] = ___ec_export[key];\n        }\n    }\n})();","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar Image = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = Image;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\nvar round = Math.round;\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n  var boundingRect = path.getBoundingRect();\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, boundingRect);\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new Image({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function (img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n\n  if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n    shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n  }\n\n  if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n    shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n  }\n\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  var shape = param.shape;\n  var lineWidth = param.style.lineWidth;\n  var originX = shape.x;\n  var originY = shape.y;\n  var originWidth = shape.width;\n  var originHeight = shape.height;\n  shape.x = subPixelOptimize(shape.x, lineWidth, true);\n  shape.y = subPixelOptimize(shape.y, lineWidth, true);\n  shape.width = Math.max(subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x, originWidth === 0 ? 0 : 1);\n  shape.height = Math.max(subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y, originHeight === 0 ? 0 : 1);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nfunction subPixelOptimize(position, lineWidth, positiveOrNegative) {\n  // Assure that (position + lineWidth / 2) is near integer edge,\n  // otherwise line will be fuzzy in canvas.\n  var doubledPosition = round(position * 2);\n  return (doubledPosition + round(lineWidth)) % 2 === 0 ? doubledPosition / 2 : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n}\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke != 'none';\n}\n\nfunction liftColor(color) {\n  return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n}\n/**\n * @private\n */\n\n\nfunction cacheElementStl(el) {\n  if (el.__hoverStlDirty) {\n    var stroke = el.style.stroke;\n    var fill = el.style.fill; // Create hoverStyle on mouseover\n\n    var hoverStyle = el.__hoverStl;\n    hoverStyle.fill = hoverStyle.fill || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n    hoverStyle.stroke = hoverStyle.stroke || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n    var normalStyle = {};\n\n    for (var name in hoverStyle) {\n      // See comment in `doSingleEnterHover`.\n      if (hoverStyle[name] != null) {\n        normalStyle[name] = el.style[name];\n      }\n    }\n\n    el.__normalStl = normalStyle;\n    el.__hoverStlDirty = false;\n  }\n}\n/**\n * @private\n */\n\n\nfunction doSingleEnterHover(el) {\n  if (el.__isHover) {\n    return;\n  }\n\n  cacheElementStl(el);\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.addHover(el, el.__hoverStl);\n  } else {\n    var style = el.style;\n    var insideRollbackOpt = style.insideRollbackOpt; // Consider case: only `position: 'top'` is set on emphasis, then text\n    // color should be returned to `autoColor`, rather than remain '#fff'.\n    // So we should rollback then apply again after style merging.\n\n    insideRollbackOpt && rollbackInsideStyle(style); // styles can be:\n    // {\n    //     label: {\n    //         normal: {\n    //             show: false,\n    //             position: 'outside',\n    //             fontSize: 18\n    //         },\n    //         emphasis: {\n    //             show: true\n    //         }\n    //     }\n    // },\n    // where properties of `emphasis` may not appear in `normal`. We previously use\n    // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n    // But consider rich text and setOption in merge mode, it is impossible to cover\n    // all properties in merge. So we use merge mode when setting style here, where\n    // only properties that is not `null/undefined` can be set. The disadventage:\n    // null/undefined can not be used to remove style any more in `emphasis`.\n\n    style.extendFrom(el.__hoverStl); // Do not save `insideRollback`.\n\n    if (insideRollbackOpt) {\n      applyInsideStyle(style, style.insideOriginalTextPosition, insideRollbackOpt); // textFill may be rollbacked to null.\n\n      if (style.textFill == null) {\n        style.textFill = insideRollbackOpt.autoColor;\n      }\n    }\n\n    el.dirty(false);\n    el.z2 += 1;\n  }\n\n  el.__isHover = true;\n}\n/**\n * @inner\n */\n\n\nfunction doSingleLeaveHover(el) {\n  if (!el.__isHover) {\n    return;\n  }\n\n  var normalStl = el.__normalStl;\n\n  if (el.useHoverLayer) {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    // Consider null/undefined value, should use\n    // `setStyle` but not `extendFrom(stl, true)`.\n    normalStl && el.setStyle(normalStl);\n    el.z2 -= 1;\n  }\n\n  el.__isHover = false;\n}\n/**\n * @inner\n */\n\n\nfunction doEnterHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleEnterHover(child);\n    }\n  }) : doSingleEnterHover(el);\n}\n\nfunction doLeaveHover(el) {\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      doSingleLeaveHover(child);\n    }\n  }) : doSingleLeaveHover(el);\n}\n/**\n * @inner\n */\n\n\nfunction setElementHoverStl(el, hoverStl) {\n  // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n  // Often used when item group has a label element and it's hoverStyle is different\n  el.__hoverStl = el.hoverStyle || hoverStl || {};\n  el.__hoverStlDirty = true;\n\n  if (el.__isHover) {\n    cacheElementStl(el);\n  }\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOver(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction onElementMouseOut(e) {\n  if (this.__hoverSilentOnTouch && e.zrByTouch) {\n    return;\n  } // Only if element is not in emphasis status\n\n\n  !this.__isEmphasis && doLeaveHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction enterEmphasis() {\n  this.__isEmphasis = true;\n  doEnterHover(this);\n}\n/**\n * @inner\n */\n\n\nfunction leaveEmphasis() {\n  this.__isEmphasis = false;\n  doLeaveHover(this);\n}\n/**\n * Set hover style of element.\n * This method can be called repeatly without side-effects.\n * @param {module:zrender/Element} el\n * @param {Object} [hoverStyle]\n * @param {Object} [opt]\n * @param {boolean} [opt.hoverSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conviniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n *        on touch device.\n */\n\n\nfunction setHoverStyle(el, hoverStyle, opt) {\n  el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n  el.type === 'group' ? el.traverse(function (child) {\n    if (child.type !== 'group') {\n      setElementHoverStl(child, hoverStyle);\n    }\n  }) : setElementHoverStl(el, hoverStyle); // Duplicated function will be auto-ignored, see Eventful.js.\n\n  el.on('mouseover', onElementMouseOver).on('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually\n\n  el.on('emphasis', enterEmphasis).on('normal', leaveEmphasis);\n}\n/**\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {Object} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {module:echarts/model/Model} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText = showNormal || showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex) : null, opt.defaultText) : null;\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Set basic textStyle properties.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis);\n  textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n    // in bar series, and magric type should be considered.\n\n    textPosition === 'outside' && (textPosition = 'top');\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             normal: {\n  //                 rich: {\n  //                     // no 'a' here but using parent 'a'.\n  //                 }\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             normal: {\n//                 rich: {\n//                     // no 'a' here but using parent 'a'.\n//                 }\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      // Always set `insideRollback`, for clearing previous.\n      var originalTextPosition = textStyle.textPosition;\n      textStyle.insideRollback = applyInsideStyle(textStyle, originalTextPosition, opt); // Save original textPosition, because style.textPosition will be repalced by\n      // real location (like [10, 30]) in zrender.\n\n      textStyle.insideOriginalTextPosition = originalTextPosition;\n      textStyle.insideRollbackOpt = opt;\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n\nfunction applyInsideStyle(textStyle, textPosition, opt) {\n  var useInsideStyle = opt.useInsideStyle;\n  var insideRollback;\n\n  if (textStyle.textFill == null && useInsideStyle !== false && (useInsideStyle === true || opt.isRectText && textPosition // textPosition can be [10, 30]\n  && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0)) {\n    insideRollback = {\n      textFill: null,\n      textStroke: textStyle.textStroke,\n      textStrokeWidth: textStyle.textStrokeWidth\n    };\n    textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n    if (textStyle.textStroke == null) {\n      textStyle.textStroke = opt.autoColor;\n      textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n    }\n  }\n\n  return insideRollback;\n}\n\nfunction rollbackInsideStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  // ecModel or default text style model.\n  var gTextStyleModel = ecModel || ecModel.getModel('textStyle');\n  return [// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' ');\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So if do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height);\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new Image(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setHoverStyle = setHoverStyle;\nexports.setLabelStyle = setLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n\nfunction quantityExponent(val) {\n  return Math.floor(Math.log(val) / Math.LN10);\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.nice = nice;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"./format\");\n\nvar nubmerUtil = require(\"./number\");\n\nvar Model = require(\"../model/Model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *         normal: {\n *             show: false,\n *             position: 'outside',\n *             fontSize: 18\n *         },\n *         emphasis: {\n *             show: true\n *         }\n *     }\n * @param {Object} opt\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, subOpts) {\n  if (opt) {\n    var emphasisOpt = opt.emphasis = opt.emphasis || {};\n    var normalOpt = opt.normal = opt.normal || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!emphasisOpt.hasOwnProperty(subOptName) && normalOpt.hasOwnProperty(subOptName)) {\n        emphasisOpt[subOptName] = normalOpt[subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  // Performance sensitive.\n  return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    return value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +nubmerUtil.parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n}\n/**\n * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {string} [opt.seriesIndex]\n * @param {Object} [opt.name]\n * @param {Object} [opt.mainType]\n * @param {Object} [opt.subType]\n */\n\n\nfunction createDataFormatModel(data, opt) {\n  var model = new Model();\n  zrUtil.mixin(model, dataFormatMixin);\n  model.seriesIndex = opt.seriesIndex;\n  model.name = opt.name || '';\n  model.mainType = opt.mainType;\n  model.subType = opt.subType;\n\n  model.getData = function () {\n    return data;\n  };\n\n  return model;\n} // PENDING A little ugly\n\n\nvar dataFormatMixin = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex, true);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    return {\n      componentType: this.mainType,\n      componentSubType: this.subType,\n      seriesType: this.mainType === 'series' ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: this.id,\n      seriesName: this.name,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      marker: formatUtil.getTooltipMarker(color),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex]\n   * @param {string} [labelProp='label']\n   * @return {string}\n   */\n  getFormattedLabel: function (dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get([labelProp || 'label', status, 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatUtil.formatTpl(formatter, params);\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getRawValue: function (idx, dataType) {\n    var data = this.getData(dataType);\n    var dataItem = data.getRawDataItem(idx);\n\n    if (dataItem != null) {\n      return isObject(dataItem) && !(dataItem instanceof Array) ? dataItem.value : dataItem;\n    }\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: zrUtil.noop\n};\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name : '\\0-'; // name may be displayed on screen, so use '-'.\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var get = modelUitl.makeGetter();\n *\n * function some(hostObj) {\n *      get(hostObj)._someProperty = 1212;\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nvar makeGetter = function () {\n  var index = 0;\n  return function () {\n    var key = '\\0__ec_prop_getter_' + index++;\n    return function (hostObj) {\n      return hostObj[key] || (hostObj[key] = {});\n    };\n  };\n}();\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string|number} dataDim\n * @return {string}\n */\n\n\nfunction dataDimToCoordDim(data, dataDim) {\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} coordDim\n * @return {Array.<string>} data dimensions on the coordDim.\n */\n\n\nfunction coordDimToDataDim(data, coordDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n\n    if (dimItem.coordDim === coordDim) {\n      dataDim[dimItem.coordDimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n * @param {module:echarts/data/List} data\n * @param {string} otherDim Can be `otherDims`\n *                        like 'label' or 'tooltip'.\n * @return {Array.<string>} data dimensions on the otherDim.\n */\n\n\nfunction otherDimToDataDim(data, otherDim) {\n  var dataDim = [];\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var otherDims = dimItem.otherDims;\n    var dimIndex = otherDims[otherDim];\n\n    if (dimIndex != null && dimIndex !== false) {\n      dataDim[dimIndex] = dimItem.name;\n    }\n  });\n  return dataDim;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.converDataValue = converDataValue;\nexports.createDataFormatModel = createDataFormatModel;\nexports.dataFormatMixin = dataFormatMixin;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeGetter = makeGetter;\nexports.parseFinder = parseFinder;\nexports.dataDimToCoordDim = dataDimToCoordDim;\nexports.coordDimToDataDim = coordDimToDataDim;\nexports.otherDimToDataDim = otherDimToDataDim;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n\n// Layout helpers for each component positioning\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransfrom),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n\n/**\n * 每三位默认加,格式化\n * @param {string|number} x\n * @return {string}\n */\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\n\nfunction encodeHTML(source) {\n  return String(source).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;');\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function (varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    var val = wrapVar(alias, 0);\n    tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {string} color\n * @param {string} [extraCssText]\n * @return {string}\n */\n\n\nfunction getTooltipMarker(color, extraCssText) {\n  return color ? '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '';\n}\n/**\n * @param {string} str\n * @return {string}\n * @inner\n */\n\n\nvar s2d = function (str) {\n  return str < 10 ? '0' + str : str;\n};\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  tpl = tpl.replace('MM', s2d(M)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', s2d(d)).replace('d', d).replace('hh', s2d(h)).replace('h', h).replace('mm', s2d(m)).replace('m', m).replace('ss', s2d(s)).replace('s', s);\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\nvar getTextRect = textContain.getBoundingRect;\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextRect = getTextRect;","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n\n/**\n * @module echarts/model/Model\n */\nvar mixin = zrUtil.mixin;\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function (option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function (path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function (key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function () {\n    return this.option == null;\n  },\n  restoreData: function () {},\n  // Pending\n  clone: function () {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function (properties) {\n    clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function (path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function (getParentMethod) {\n    clazzUtil.set(this, 'getParent', getParentMethod);\n  },\n  isAnimationEnabled: function () {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = clazzUtil.get(model, 'getParent');\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nclazzUtil.enableClassExtend(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\nvar arrayPush = Array.prototype.push;\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function (option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('componentModel');\n  },\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function (newCptOption, isInit) {},\n  getDefaultOption: function () {\n    if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      clazzUtil.set(this, '__defaultOption', defaultOption);\n    }\n\n    return clazzUtil.get(this, '__defaultOption');\n  },\n  getReferringComponents: function (mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n  }); // Ensure main type\n\n  return zrUtil.map(deps, function (type) {\n    return clazzUtil.parseClassType(type).main;\n  });\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar modelUtil = require(\"../util/model\");\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar globalObj = typeof window === UNDEFINED ? global : window;\nvar dataCtors = {\n  'float': typeof globalObj.Float64Array === UNDEFINED ? Array : globalObj.Float64Array,\n  'int': typeof globalObj.Int32Array === UNDEFINED ? Array : globalObj.Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n};\nvar TRANSFERABLE_PROPERTIES = ['stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'];\n\nfunction transferProperties(a, b) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n    if (b.hasOwnProperty(propName)) {\n      a[propName] = b[propName];\n    }\n  });\n  a.__wrappedMethods = b.__wrappedMethods;\n}\n\nfunction DefaultDataProvider(dataArray) {\n  this._array = dataArray || [];\n}\n\nDefaultDataProvider.prototype.pure = false;\n\nDefaultDataProvider.prototype.count = function () {\n  return this._array.length;\n};\n\nDefaultDataProvider.prototype.getItem = function (idx) {\n  return this._array[idx];\n};\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimensionName;\n    var dimensionInfo = {};\n\n    if (typeof dimensions[i] === 'string') {\n      dimensionName = dimensions[i];\n      dimensionInfo = {\n        name: dimensionName,\n        coordDim: dimensionName,\n        coordDimIndex: 0,\n        stackable: false,\n        // Type can be 'float', 'int', 'number'\n        // Default is number, Precision of float may not enough\n        type: 'number'\n      };\n    } else {\n      dimensionInfo = dimensions[i];\n      dimensionName = dimensionInfo.name;\n      dimensionInfo.type = dimensionInfo.type || 'number';\n\n      if (!dimensionInfo.coordDim) {\n        dimensionInfo.coordDim = dimensionName;\n        dimensionInfo.coordDimIndex = 0;\n      }\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this.indices = [];\n  /**\n   * Data storage\n   * @type {Object.<key, TypedArray|Array>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * @param {module:echarts/data/List}\n   */\n\n  this.stackedOn = null;\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * Get dimension name\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (!isNaN(dim)) {\n    dim = this.dimensions[dim] || dim;\n  }\n\n  return dim;\n};\n/**\n * Get type and stackable info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data\n * @param {Array.<string>} [nameList]\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  data = data || [];\n  var isDataArray = zrUtil.isArray(data);\n\n  if (isDataArray) {\n    data = new DefaultDataProvider(data);\n  }\n\n  this._rawData = data; // Clear\n\n  var storage = this._storage = {};\n  var indices = this.indices = [];\n  var dimensions = this.dimensions;\n  var dimensionInfoMap = this._dimensionInfos;\n  var size = data.count();\n  var idList = [];\n  var nameRepeatCount = {};\n  var nameDimIdx;\n  nameList = nameList || []; // Init storage\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimInfo = dimensionInfoMap[dimensions[i]];\n    dimInfo.otherDims.itemName === 0 && (nameDimIdx = i);\n    var DataCtor = dataCtors[dimInfo.type];\n    storage[dimensions[i]] = new DataCtor(size);\n  }\n\n  var self = this;\n\n  if (!dimValueGetter) {\n    self.hasItemOption = false;\n  } // Default dim value getter\n\n\n  dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n    var value = modelUtil.getDataItemValue(dataItem); // If any dataItem is like { value: 10 }\n\n    if (modelUtil.isDataItemOption(dataItem)) {\n      self.hasItemOption = true;\n    }\n\n    return modelUtil.converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, dimensionInfoMap[dimName]);\n  };\n\n  for (var i = 0; i < size; i++) {\n    // NOTICE: Try not to write things into dataItem\n    var dataItem = data.getItem(i); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of cateogry\n    // Use a tempValue to normalize the value to be a (x, y) value\n    // Store the data by dimensions\n\n    for (var k = 0; k < dimensions.length; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim]; // PENDING NULL is empty or zero\n\n      dimStorage[i] = dimValueGetter(dataItem, dim, i, k);\n    }\n\n    indices.push(i);\n  } // Use the name in option and create id\n\n\n  for (var i = 0; i < size; i++) {\n    var dataItem = data.getItem(i);\n\n    if (!nameList[i] && dataItem) {\n      if (dataItem.name != null) {\n        nameList[i] = dataItem.name;\n      } else if (nameDimIdx != null) {\n        nameList[i] = storage[dimensions[nameDimIdx]][i];\n      }\n    }\n\n    var name = nameList[i] || ''; // Try using the id in option\n\n    var id = dataItem && dataItem.id;\n\n    if (!id && name) {\n      // Use name as id and add counter to avoid same name\n      nameRepeatCount[name] = nameRepeatCount[name] || 0;\n      id = name;\n\n      if (nameRepeatCount[name] > 0) {\n        id += '__ec__' + nameRepeatCount[name];\n      }\n\n      nameRepeatCount[name]++;\n    }\n\n    id && (idList[i] = id);\n  }\n\n  this._nameList = nameList;\n  this._idList = idList;\n};\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this.indices.length;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx, stack) {\n  var storage = this._storage;\n  var dataIndex = this.indices[idx]; // If value not exists\n\n  if (dataIndex == null || !storage[dim]) {\n    return NaN;\n  }\n\n  var value = storage[dim][dataIndex]; // FIXME ordinal data type is not stackable\n\n  if (stack) {\n    var dimensionInfo = this._dimensionInfos[dim];\n\n    if (dimensionInfo && dimensionInfo.stackable) {\n      var stackedOn = this.stackedOn;\n\n      while (stackedOn) {\n        // Get no stacked data of stacked on\n        var stackedValue = stackedOn.get(dim, idx); // Considering positive stack, negative stack and empty data\n\n        if (value >= 0 && stackedValue > 0 || // Positive stack\n        value <= 0 && stackedValue < 0 // Negative stack\n        ) {\n            value += stackedValue;\n          }\n\n        stackedOn = stackedOn.stackedOn;\n      }\n    }\n  }\n\n  return value;\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx, stack) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx, stack));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dimensions = this.dimensions;\n  var dimensionInfos = this._dimensionInfos;\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    if ( // Ordinal type can be string or number\n    dimensionInfos[dimensions[i]].type !== 'ordinal' && isNaN(this.get(dimensions[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n * @param {Function} filter\n */\n\n\nlistProto.getDataExtent = function (dim, stack, filter) {\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var dimInfo = this.getDimensionInfo(dim);\n  stack = dimInfo && dimInfo.stackable && stack;\n  var dimExtent = (this._extent || (this._extent = {}))[dim + !!stack];\n  var value;\n\n  if (dimExtent) {\n    return dimExtent;\n  } // var dimInfo = this._dimensionInfos[dim];\n\n\n  if (dimData) {\n    var min = Infinity;\n    var max = -Infinity; // var isOrdinal = dimInfo.type === 'ordinal';\n\n    for (var i = 0, len = this.count(); i < len; i++) {\n      value = this.get(dim, i, stack); // FIXME\n      // if (isOrdinal && typeof value === 'string') {\n      //     value = zrUtil.indexOf(dimData, value);\n      // }\n\n      if (!filter || filter(value, dim, i)) {\n        value < min && (min = value);\n        value > max && (max = value);\n      }\n    }\n\n    return this._extent[dim + !!stack] = [min, max];\n  } else {\n    return [Infinity, -Infinity];\n  }\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getSum = function (dim, stack) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i, stack);\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Retreive the index with given value\n * @param {number} idx\n * @param {number} value\n * @return {number}\n */\n// FIXME Precision of float value\n\n\nlistProto.indexOf = function (dim, value) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var indices = this.indices;\n\n  if (dimData) {\n    for (var i = 0, len = indices.length; i < len; i++) {\n      var rawIndex = indices[i];\n\n      if (dimData[rawIndex] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  var indices = this.indices;\n  var nameList = this._nameList;\n\n  for (var i = 0, len = indices.length; i < len; i++) {\n    var rawIndex = indices[i];\n\n    if (nameList[rawIndex] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  // Indices are ascending\n  var indices = this.indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = indices.length - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {boolean} stack If given value is after stacked\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} Considere multiple points has the same value.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, stack, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i, stack);\n    var dist = Math.abs(diff);\n\n    if (diff <= maxDistance && dist <= minDist) {\n      // For the case of two data are same on xAxis, which has sequence data.\n      // Show the nearest index\n      // https://github.com/ecomfe/echarts/issues/2869\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndices.length = 0;\n      }\n\n      nearestIndices.push(i);\n    }\n  }\n\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = function (idx) {\n  var rawIdx = this.indices[idx];\n  return rawIdx == null ? -1 : rawIdx;\n};\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  return this._rawData.getItem(this.getRawIndex(idx));\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  return this._nameList[this.indices[idx]] || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return this._idList[this.indices[idx]] || this.getRawIndex(idx) + '';\n};\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, stack, context) {\n  if (typeof dims === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dims;\n    dims = [];\n  }\n\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var value = [];\n  var dimSize = dims.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i, stack), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n        break;\n\n      default:\n        for (var k = 0; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i, stack);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var newIndices = [];\n  var value = [];\n  var dimSize = dimensions.length;\n  var indices = this.indices;\n  context = context || this;\n\n  for (var i = 0; i < indices.length; i++) {\n    var keep; // Simple optimization\n\n    if (!dimSize) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      keep = cb.call(context, this.get(dimensions[0], i, stack), i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this.get(dimensions[k], i, stack);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices.push(indices[i]);\n    }\n  }\n\n  this.indices = newIndices; // Reset data extent\n\n  this._extent = {};\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, stack, context) {\n  if (typeof dimensions === 'function') {\n    context = stack;\n    stack = cb;\n    cb = dimensions;\n    dimensions = [];\n  }\n\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, stack, context);\n  return result;\n};\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n    var dimStore = originalStorage[dim];\n\n    if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n      storage[dim] = new dimStore.constructor(originalStorage[dim].length);\n    } else {\n      // Direct reference for other dimensions\n      storage[dim] = originalStorage[dim];\n    }\n  }\n\n  return list;\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {boolean} [stack=false]\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, stack, context) {\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  var indices = list.indices = this.indices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  this.each(dimensions, function () {\n    var idx = arguments[arguments.length - 1];\n    var retValue = cb && cb.apply(this, arguments);\n\n    if (retValue != null) {\n      // a number\n      if (typeof retValue === 'number') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var dimStore = storage[dim];\n        var rawIdx = indices[idx];\n\n        if (dimStore) {\n          dimStore[rawIdx] = retValue[i];\n        }\n      }\n    }\n  }, stack, context);\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var storage = this._storage;\n  var targetStorage = list._storage;\n  var originalIndices = this.indices;\n  var indices = list.indices = [];\n  var frameValues = [];\n  var frameIndices = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count(); // Copy data from original data\n\n  for (var i = 0; i < storage[dimension].length; i++) {\n    targetStorage[dimension][i] = storage[dimension][i];\n  }\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var idx = originalIndices[i + k];\n      frameValues[k] = dimStore[idx];\n      frameIndices[k] = idx;\n    }\n\n    var value = sampleValue(frameValues);\n    var idx = frameIndices[sampleIndex(frameValues, value) || 0]; // Only write value on the filtered data\n\n    dimStore[idx] = value;\n    indices.push(idx);\n  }\n\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  idx = this.indices[idx];\n  return new Model(this._rawData.getItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var idList = this._idList;\n  var otherIdList = otherList && otherList._idList;\n  var val; // Use prefix to avoid index to be the same as otherIdList[idx],\n  // which will cause weird udpate animation.\n\n  var prefix = 'e\\0\\0';\n  return new DataDiffer(otherList ? otherList.indices : [], this.indices, function (idx) {\n    return (val = otherIdList[idx]) != null ? val : prefix + idx;\n  }, function (idx) {\n    return (val = idList[idx]) != null ? val : prefix + idx;\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function () {\n  var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n  var list = new List(dimensionInfoList, this.hostModel); // FIXME\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  list.indices = this.indices.slice();\n\n  if (this._extent) {\n    list._extent = zrUtil.extend({}, this._extent);\n  }\n\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf'];\nvar _default = List;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * Data provided for legend\n   * @type {Function}\n   */\n  // PENDING\n  legendDataProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.normal.color',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function (option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.mergeDefaultAndTheme(option, ecModel);\n    var data = this.getInitialData(option, ecModel);\n\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n    set(this, 'dataBeforeProcessed', data); // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n\n    this.restoreData();\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function (option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function (newSeriesOption, ecModel) {\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    var data = this.getInitialData(newSeriesOption, ecModel); // TODO Merge data?\n\n    if (data) {\n      set(this, 'data', data);\n      set(this, 'dataBeforeProcessed', data.cloneShallow());\n    }\n  },\n  fillDataTextStyle: function (data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i].label, props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function () {},\n\n  /**\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function (dataType) {\n    var data = get(this, 'data');\n    return dataType == null ? data : data.getLinkedData(dataType);\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function (data) {\n    set(this, 'data', data);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function () {\n    return get(this, 'dataBeforeProcessed');\n  },\n\n  /**\n   * Coord dimension to data dimension.\n   *\n   * By default the result is the same as dimensions of series data.\n   * But in some series data dimensions are different from coord dimensions (i.e.\n   * candlestick and boxplot). Override this method to handle those cases.\n   *\n   * Coord dimension to data dimension can be one-to-many\n   *\n   * @param {string} coordDim\n   * @return {Array.<string>} dimensions on the axis.\n   */\n  coordDimToDataDim: function (coordDim) {\n    return modelUtil.coordDimToDataDim(this.getData(), coordDim);\n  },\n\n  /**\n   * Convert data dimension to coord dimension.\n   *\n   * @param {string|number} dataDim\n   * @return {string}\n   */\n  dataDimToCoordDim: function (dataDim) {\n    return modelUtil.dataDimToCoordDim(this.getData(), dataDim);\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function () {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    function formatArrayValue(value) {\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.tooltipName != null;\n      }, 0);\n      var result = [];\n      var tooltipDims = modelUtil.otherDimToDataDim(data, 'tooltip');\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dimIdx) {\n        setEachItem(data.get(dimIdx, dataIndex), dimIdx);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dimIdx) {\n        var dimInfo = data.getDimensionInfo(dimIdx); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var valStr = (vertially ? '- ' + (dimInfo.tooltipName || dimInfo.name) + ': ' : '') + (dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(encodeHTML(valStr));\n      }\n\n      return (vertially ? '<br/>' : '') + result.join(vertially ? '<br/>' : ', ');\n    }\n\n    var data = get(this, 'data');\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? formatArrayValue(value) : encodeHTML(addCommas(value));\n    var name = data.getName(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent';\n    var colorEl = getTooltipMarker(color);\n    var seriesName = this.name; // FIXME\n\n    if (seriesName === '\\0-') {\n      // Not show '-'\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? '<br/>' : ': ') : '';\n    return !multipleSeries ? seriesName + colorEl + (name ? encodeHTML(name) + ': ' + formattedValue : formattedValue) : colorEl + seriesName + formattedValue;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function () {\n    set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n  },\n  getColorFromPalette: function (name, scope) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope);\n    }\n\n    return color;\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null\n});\nzrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\nvar _default = SeriesModel;\nmodule.exports = _default;","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var fixMin = min != null;\n  var fixMax = max != null;\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = (model.get('data') || []).length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max)); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  }\n\n  return [min, max];\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extent = getScaleExtent(scale, model);\n  var fixMin = model.getMin() != null;\n  var fixMax = model.getMax() != null;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: fixMin,\n    fixMax: fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {Array.<number>} tickCoords In axis self coordinate.\n * @param {Array.<string>} labels\n * @param {string} font\n * @param {number} axisRotate 0: towards right horizontally, clock-wise is negative.\n * @param {number} [labelRotate=0] 0: towards right horizontally, clock-wise is negative.\n * @return {number}\n */\n\n\nfunction getAxisLabelInterval(tickCoords, labels, font, axisRotate, labelRotate) {\n  var textSpaceTakenRect;\n  var autoLabelInterval = 0;\n  var accumulatedLabelInterval = 0;\n  var rotation = (axisRotate - labelRotate) / 180 * Math.PI;\n  var step = 1;\n\n  if (labels.length > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.floor(labels.length / 40);\n  }\n\n  for (var i = 0; i < tickCoords.length; i += step) {\n    var tickCoord = tickCoords[i]; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labels[i], font, 'center', 'top');\n    rect.x += tickCoord * Math.cos(rotation);\n    rect.y += tickCoord * Math.sin(rotation); // Magic number\n\n    rect.width *= 1.3;\n    rect.height *= 1.3;\n\n    if (!textSpaceTakenRect) {\n      textSpaceTakenRect = rect.clone();\n    } // There is no space for current label;\n    else if (textSpaceTakenRect.intersect(rect)) {\n        accumulatedLabelInterval++;\n        autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n      } else {\n        textSpaceTakenRect.union(rect); // Reset\n\n        accumulatedLabelInterval = 0;\n      }\n  }\n\n  if (autoLabelInterval === 0 && step > 1) {\n    return step;\n  }\n\n  return (autoLabelInterval + 1) * step - 1;\n}\n/**\n * @param {Object} axis\n * @param {Function} labelFormatter\n * @return {Array.<string>}\n */\n\n\nfunction getFormattedLabels(axis, labelFormatter) {\n  var scale = axis.scale;\n  var labels = scale.getTicksLabels();\n  var ticks = scale.getTicks();\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return zrUtil.map(labels, labelFormatter);\n  } else if (typeof labelFormatter === 'function') {\n    return zrUtil.map(ticks, function (tick, idx) {\n      return labelFormatter(getAxisRawValue(axis, tick), idx);\n    }, this);\n  } else {\n    return labels;\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.getAxisLabelInterval = getAxisLabelInterval;\nexports.getFormattedLabels = getFormattedLabels;\nexports.getAxisRawValue = getAxisRawValue;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function (x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function (x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function (x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function (x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function (x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function (x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  beforeBrush: function () {\n    var style = this.style;\n    var shape = this.shape; // FIXME\n\n    if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      style.textPosition = ['50%', '40%'];\n      style.textAlign = 'center';\n      style.textVerticalAlign = 'middle';\n    }\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n    var proxySymbol = symbolBuildProxies[symbolType];\n\n    if (shape.symbolType !== 'none') {\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n/**\n * Complete dimensions by data (guess dimension).\n */\nvar each = zrUtil.each;\nvar isString = zrUtil.isString;\nvar defaults = zrUtil.defaults;\nvar OTHER_DIMS = {\n  tooltip: 1,\n  label: 1,\n  itemName: 1\n};\n/**\n * Complete the dimensions array, by user defined `dimension` and `encode`,\n * and guessing from the data structure.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: []}, ...] can be specified to give names.\n * @param {Array} data Data list. [[1, 2, 3], [2, 3, 4]].\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n * @param {string} [opt.extraFromZero] If specified, extra dim names will be:\n *                      extraPrefix + 0, extraPrefix + extraBaseIndex + 1 ...\n *                      If not specified, extra dim names will be:\n *                      extraPrefix, extraPrefix + 0, extraPrefix + 1 ...\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<Object>} [{\n *      name: string mandatory,\n *      coordDim: string mandatory,\n *      coordDimIndex: number mandatory,\n *      type: string optional,\n *      tooltipName: string optional,\n *      otherDims: {\n *          tooltip: number optional,\n *          label: number optional\n *      },\n *      isExtraCoord: boolean true or undefined.\n *      other props ...\n * }]\n */\n\nfunction completeDimensions(sysDims, data, opt) {\n  data = data || [];\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var encodeDef = zrUtil.createHashMap(opt.encodeDef);\n  var dataDimNameMap = zrUtil.createHashMap();\n  var coordDimNameMap = zrUtil.createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = opt.dimCount;\n\n  if (dimCount == null) {\n    var value0 = retrieveValue(data[0]);\n    dimCount = Math.max(zrUtil.isArray(value0) && value0.length || 1, sysDims.length, dimsDef.length);\n    each(sysDims, function (sysDimItem) {\n      var sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n    });\n  } // Apply user defined dims (`name` and `type`) and init result.\n\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = isString(dimsDef[i]) ? {\n      name: dimsDef[i]\n    } : dimsDef[i] || {};\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = {\n      otherDims: {}\n    }; // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option, tooltipName\n      // will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.tooltipName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n  } // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = encodeDef.set(coordDim, normalizeToArray(dataDims).slice());\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        dataDims[coordDimIndex] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, coordDimIndex);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      sysDimItem = zrUtil.clone(sysDimItem); // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = normalizeToArray(encodeDef.get(coordDim)); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        resultItem.name = resultItem.tooltipName = sysDimItemDimsDef[coordDimIndex];\n      }\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  }); // Make sure the first extra dim is 'value'.\n\n  var extra = opt.extraPrefix || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || {};\n    var coordDim = resultItem.coordDim;\n    coordDim == null && (resultItem.coordDim = genName(extra, coordDimNameMap, opt.extraFromZero), resultItem.coordDimIndex = 0, resultItem.isExtraCoord = true);\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n    resultItem.type == null && guessOrdinal(data, resultDimIdx) && (resultItem.type = 'ordinal');\n  }\n\n  return result;\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMS[coordDim]) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  }\n\n  function genName(name, map, fromZero) {\n    if (fromZero || map.get(name) != null) {\n      var i = 0;\n\n      while (map.get(name + i) != null) {\n        i++;\n      }\n\n      name += i;\n    }\n\n    map.set(name, true);\n    return name;\n  }\n} // The rule should not be complex, otherwise user might not\n// be able to known where the data is wrong.\n\n\nvar guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n  for (var i = 0, len = data.length; i < len; i++) {\n    var value = retrieveValue(data[i]);\n\n    if (!zrUtil.isArray(value)) {\n      return false;\n    }\n\n    var value = value[dimIndex]; // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (value != null && isFinite(value) && value !== '') {\n      return false;\n    } else if (isString(value) && value !== '-') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction retrieveValue(o) {\n  return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value : o;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordinateSystemCreators = {};\n\nfunction CoordinateSystemManager() {\n  this._coordinateSystems = [];\n}\n\nCoordinateSystemManager.prototype = {\n  constructor: CoordinateSystemManager,\n  create: function (ecModel, api) {\n    var coordinateSystems = [];\n    zrUtil.each(coordinateSystemCreators, function (creater, type) {\n      var list = creater.create(ecModel, api);\n      coordinateSystems = coordinateSystems.concat(list || []);\n    });\n    this._coordinateSystems = coordinateSystems;\n  },\n  update: function (ecModel, api) {\n    zrUtil.each(this._coordinateSystems, function (coordSys) {\n      // FIXME MUST have\n      coordSys.update && coordSys.update(ecModel, api);\n    });\n  },\n  getCoordinateSystems: function () {\n    return this._coordinateSystems.slice();\n  }\n};\n\nCoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n  coordinateSystemCreators[type] = coordinateSystemCreator;\n};\n\nCoordinateSystemManager.get = function (type) {\n  return coordinateSystemCreators[type];\n};\n\nvar _default = CoordinateSystemManager;\nmodule.exports = _default;","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\nvar MEMBER_PRIFIX = '\\0ec_\\0';\n/**\n * Hide private class member.\n * The same behavior as `host[name] = value;` (can be right-value)\n * @public\n */\n\nfunction set(host, name, value) {\n  return host[MEMBER_PRIFIX + name] = value;\n}\n/**\n * Hide private class member.\n * The same behavior as `host[name];`\n * @public\n */\n\n\nfunction get(host, name) {\n  return host[MEMBER_PRIFIX + name];\n}\n/**\n * For hidden private class member.\n * The same behavior as `host.hasOwnProperty(name);`\n * @public\n */\n\n\nfunction hasOwn(host, name) {\n  return host.hasOwnProperty(MEMBER_PRIFIX + name);\n}\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function () {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.set = set;\nexports.get = get;\nexports.hasOwn = hasOwn;\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {},\n\n  /**\n   * Render the chart\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function (seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function (seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function (ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function () {}\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param  {module:zrender/Element} el\n * @param  {string} state\n */\n\n\nfunction elSetState(el, state) {\n  if (el) {\n    el.trigger(state);\n\n    if (el.type === 'group') {\n      for (var i = 0; i < el.childCount(); i++) {\n        elSetState(el.childAt(i), state);\n      }\n    }\n  }\n}\n/**\n * @param  {module:echarts/data/List} data\n * @param  {Object} payload\n * @param  {string} state 'normal'|'emphasis'\n * @inner\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n  if (dataIndex != null) {\n    zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\nvar _default = Chart;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar converDataValue = _model.converDataValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nfunction ifNeedCompleteOrdinalData(data) {\n  var sampleItem = firstDataNotNull(data);\n  return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n}\n/**\n * Helper function to create a list from option data\n */\n\n\nfunction createListFromArray(data, seriesModel, ecModel) {\n  // If data is undefined\n  data = data || [];\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var creator = creators[coordSysName];\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var completeDimOpt = {\n    encodeDef: seriesModel.get('encode'),\n    dimsDef: seriesModel.get('dimensions')\n  }; // FIXME\n\n  var axesInfo = creator && creator(data, seriesModel, ecModel, completeDimOpt);\n  var dimensions = axesInfo && axesInfo.dimensions;\n\n  if (!dimensions) {\n    // Get dimensions from registered coordinate system\n    dimensions = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n  }\n\n  var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n  var list = new List(dimensions, seriesModel);\n  var nameList = createNameList(axesInfo, data);\n  var categories = {};\n  var dimValueGetter = categoryIndex >= 0 && ifNeedCompleteOrdinalData(data) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // If any dataItem is like { value: 10 }\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    } // Use dataIndex as ordinal value in categoryAxis\n\n\n    return dimIndex === categoryIndex ? dataIndex : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n  } : function (itemOpt, dimName, dataIndex, dimIndex) {\n    var value = getDataItemValue(itemOpt);\n    var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]); // If any dataItem is like { value: 10 }\n\n    if (isDataItemOption(itemOpt)) {\n      list.hasItemOption = true;\n    }\n\n    var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n\n    if (categoryAxesModels && categoryAxesModels[dimName]) {\n      // If given value is a category string\n      if (typeof val === 'string') {\n        // Lazy get categories\n        categories[dimName] = categories[dimName] || categoryAxesModels[dimName].getCategories();\n        val = zrUtil.indexOf(categories[dimName], val);\n\n        if (val < 0 && !isNaN(val)) {\n          // In case some one write '1', '2' istead of 1, 2\n          val = +val;\n        }\n      }\n    }\n\n    return val;\n  };\n  list.hasItemOption = false;\n  list.initData(data, nameList, dimValueGetter);\n  return list;\n}\n\nfunction isStackable(axisType) {\n  return axisType !== 'category' && axisType !== 'time';\n}\n\nfunction getDimTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n/**\n * Creaters for each coord system.\n */\n\n\nvar creators = {\n  cartesian2d: function (data, seriesModel, ecModel, completeDimOpt) {\n    var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n      return ecModel.queryComponents({\n        mainType: name,\n        index: seriesModel.get(name + 'Index'),\n        id: seriesModel.get(name + 'Id')\n      })[0];\n    });\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var dimensions = [{\n      name: 'x',\n      type: getDimTypeByAxis(xAxisType),\n      stackable: isStackable(xAxisType)\n    }, {\n      name: 'y',\n      // If two category axes\n      type: getDimTypeByAxis(yAxisType),\n      stackable: isStackable(yAxisType)\n    }];\n    var isXAxisCateogry = xAxisType === 'category';\n    var isYAxisCategory = yAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isXAxisCateogry) {\n      categoryAxesModels.x = xAxisModel;\n    }\n\n    if (isYAxisCategory) {\n      categoryAxesModels.y = yAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isXAxisCateogry ? 0 : isYAxisCategory ? 1 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  singleAxis: function (data, seriesModel, ecModel, completeDimOpt) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: seriesModel.get('singleAxisIndex'),\n      id: seriesModel.get('singleAxisId')\n    })[0];\n    var singleAxisType = singleAxisModel.get('type');\n    var isCategory = singleAxisType === 'category';\n    var dimensions = [{\n      name: 'single',\n      type: getDimTypeByAxis(singleAxisType),\n      stackable: isStackable(singleAxisType)\n    }];\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isCategory) {\n      categoryAxesModels.single = singleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isCategory ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  polar: function (data, seriesModel, ecModel, completeDimOpt) {\n    var polarModel = ecModel.queryComponents({\n      mainType: 'polar',\n      index: seriesModel.get('polarIndex'),\n      id: seriesModel.get('polarId')\n    })[0];\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var radiusAxisType = radiusAxisModel.get('type');\n    var angleAxisType = angleAxisModel.get('type');\n    var dimensions = [{\n      name: 'radius',\n      type: getDimTypeByAxis(radiusAxisType),\n      stackable: isStackable(radiusAxisType)\n    }, {\n      name: 'angle',\n      type: getDimTypeByAxis(angleAxisType),\n      stackable: isStackable(angleAxisType)\n    }];\n    var isAngleAxisCateogry = angleAxisType === 'category';\n    var isRadiusAxisCateogry = radiusAxisType === 'category';\n    dimensions = completeDimensions(dimensions, data, completeDimOpt);\n    var categoryAxesModels = {};\n\n    if (isRadiusAxisCateogry) {\n      categoryAxesModels.radius = radiusAxisModel;\n    }\n\n    if (isAngleAxisCateogry) {\n      categoryAxesModels.angle = angleAxisModel;\n    }\n\n    return {\n      dimensions: dimensions,\n      categoryIndex: isAngleAxisCateogry ? 1 : isRadiusAxisCateogry ? 0 : -1,\n      categoryAxesModels: categoryAxesModels\n    };\n  },\n  geo: function (data, seriesModel, ecModel, completeDimOpt) {\n    // TODO Region\n    // 多个散点图系列在同一个地区的时候\n    return {\n      dimensions: completeDimensions([{\n        name: 'lng'\n      }, {\n        name: 'lat'\n      }], data, completeDimOpt)\n    };\n  }\n};\n\nfunction createNameList(result, data) {\n  var nameList = [];\n  var categoryDim = result && result.dimensions[result.categoryIndex];\n  var categoryAxisModel;\n\n  if (categoryDim) {\n    categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n  }\n\n  if (categoryAxisModel) {\n    // FIXME Two category axis\n    var categories = categoryAxisModel.getCategories();\n\n    if (categories) {\n      var dataLen = data.length; // Ordered data is given explicitly like\n      // [[3, 0.2], [1, 0.3], [2, 0.15]]\n      // or given scatter data,\n      // pick the category\n\n      if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n        nameList = [];\n\n        for (var i = 0; i < dataLen; i++) {\n          nameList[i] = categories[data[i][result.categoryIndex || 0]];\n        }\n      } else {\n        nameList = categories.slice(0);\n      }\n    }\n  }\n\n  return nameList;\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nvar linearMap = numberUtil.linearMap;\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n}\n\nvar normalizedExtent = [0, 1];\n/**\n * @name module:echarts/coord/CartesianAxis\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._labelInterval;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.contain(this.dataToCoord(data));\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return numberUtil.getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has a ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, normalizedExtent, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has a ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, normalizedExtent, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicksCoords: function (alignWithLabel) {\n    if (this.onBand && !alignWithLabel) {\n      var bands = this.getBands();\n      var coords = [];\n\n      for (var i = 0; i < bands.length; i++) {\n        coords.push(bands[i][0]);\n      }\n\n      if (bands[i - 1]) {\n        coords.push(bands[i - 1][1]);\n      }\n\n      return coords;\n    } else {\n      return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n    }\n  },\n\n  /**\n   * Coords of labels are on the ticks or on the middle of bands\n   * @return {Array.<number>}\n   */\n  getLabelsCoords: function () {\n    return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n  },\n\n  /**\n   * Get bands.\n   *\n   * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n   * |---1---|---2---|---3---|---4---|.\n   *\n   * @return {Array}\n   */\n  // FIXME Situation when labels is on ticks\n  getBands: function () {\n    var extent = this.getExtent();\n    var bands = [];\n    var len = this.scale.count();\n    var start = extent[0];\n    var end = extent[1];\n    var span = end - start;\n\n    for (var i = 0; i < len; i++) {\n      bands.push([span * i / len + start, span * (i + 1) / len + start]);\n    }\n\n    return bands;\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Get interval of the axis label.\n   * To get precise result, at least one of `getRotate` and `isHorizontal`\n   * should be implemented.\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var labelInterval = this._labelInterval;\n\n    if (!labelInterval) {\n      var axisModel = this.model;\n      var labelModel = axisModel.getModel('axisLabel');\n      labelInterval = labelModel.get('interval');\n\n      if (this.type === 'category' && (labelInterval == null || labelInterval === 'auto')) {\n        labelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisModel.getFormattedLabels(), labelModel.getFont(), this.getRotate ? this.getRotate() : this.isHorizontal && !this.isHorizontal() ? 90 : 0, labelModel.get('rotate'));\n      }\n\n      this._labelInterval = labelInterval;\n    }\n\n    return labelInterval;\n  }\n};\nvar _default = Axis;\nmodule.exports = _default;","var features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;","var ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function () {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer);\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","function _default(seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n    var symbolSize = seriesModel.get('symbolSize');\n    data.setVisual({\n      legendSymbol: legendSymbol || symbolType,\n      symbol: symbolType,\n      symbolSize: symbolSize\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof symbolSize === 'function') {\n        data.each(function (idx) {\n          var rawValue = seriesModel.getRawValue(idx); // FIXME\n\n          var params = seriesModel.getDataParams(idx);\n          data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n        });\n      }\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var itemSymbolType = itemModel.getShallow('symbol', true);\n        var itemSymbolSize = itemModel.getShallow('symbolSize', true); // If has item symbol\n\n        if (itemSymbolType != null) {\n          data.setItemVisual(idx, 'symbol', itemSymbolType);\n        }\n\n        if (itemSymbolSize != null) {\n          // PENDING Transform symbolSize ?\n          data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar PI = Math.PI;\n\nfunction makeAxisEventDataBase(axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n}\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.labelInterval] Default label interval when label\n *                                     interval from model is null or 'auto'.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\n\nvar AxisBuilder = function (axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function (name) {\n    return !!builders[name];\n  },\n  add: function (name) {\n    builders[name].call(this);\n  },\n  getGroup: function () {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'line',\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    })));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([[opt.rotation + Math.PI / 2, pt1], [opt.rotation - Math.PI / 2, pt2]], function (item, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true);\n          symbol.attr({\n            rotation: item[0],\n            position: item[1],\n            silent: true\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function () {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var tickEls = buildAxisTick(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, tickEls);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function () {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function () {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: labelLayout.textAlign,\n      textVerticalAlign: labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction isSilent(axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n}\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n/**\n * @static\n */\n\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval, ticksCnt, showMinLabel, showMaxLabel) {\n  if (i === 0 && showMinLabel || i === ticksCnt - 1 && showMaxLabel) {\n    return false;\n  } // FIXME\n  // Have not consider label overlap (if label is too long) yet.\n\n\n  var rawTick;\n  var scale = axis.scale;\n  return scale.type === 'ordinal' && (typeof interval === 'function' ? (rawTick = scale.getTicks()[i], !interval(rawTick, scale.getLabel(rawTick))) : i % (interval + 1));\n};\n/**\n * @static\n */\n\n\nvar getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n  var interval = model.get('interval');\n\n  if (interval == null || interval == 'auto') {\n    interval = labelInterval;\n  }\n\n  return interval;\n};\n\nfunction buildAxisTick(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n\n  if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var tickModel = axisModel.getModel('axisTick');\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickLen = tickModel.get('length');\n  var tickInterval = getInterval(tickModel, opt.labelInterval);\n  var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel')); // FIXME\n  // Corresponds to ticksCoords ?\n\n  var ticks = axis.scale.getTicks();\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  var pt1 = [];\n  var pt2 = [];\n  var matrix = axisBuilder._transform;\n  var tickEls = [];\n  var ticksCnt = ticksCoords.length;\n\n  for (var i = 0; i < ticksCnt; i++) {\n    // Only ordinal scale support tick interval\n    if (ifIgnoreOnTick(axis, i, tickInterval, ticksCnt, showMinLabel, showMaxLabel)) {\n      continue;\n    }\n\n    var tickCoord = ticksCoords[i];\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = opt.tickDirection * tickLen;\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line(graphic.subPixelOptimizeLine({\n      // Id for animation\n      anid: 'tick_' + ticks[i],\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: defaults(lineStyleModel.getLineStyle(), {\n        stroke: axisModel.get('axisLine.lineStyle.color')\n      }),\n      z2: 2,\n      silent: true\n    }));\n    axisBuilder.group.add(tickEl);\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var ticks = axis.scale.getTicks();\n  var labels = axisModel.getFormattedLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var categoryData = axisModel.get('data');\n  var labelEls = [];\n  var silent = isSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n  each(ticks, function (tickVal, index) {\n    if (ifIgnoreOnTick(axis, index, opt.labelInterval, ticks.length, showMinLabel, showMaxLabel)) {\n      return;\n    }\n\n    var itemLabelModel = labelModel;\n\n    if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n      itemLabelModel = new Model(categoryData[tickVal].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickVal);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var labelStr = axis.scale.getLabel(tickVal);\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickVal,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: labels[index],\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always returns labelStr.\n      // But in interval scale labelStr is like '223,445', which maked\n      // user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = labelStr;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n\n/**\n * Base class of AxisView.\n */\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n    updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n    updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function (option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function (value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function () {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function () {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function (normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  symbol: {\n    applyVisual: function (value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function (normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function (value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function (normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function (normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function (value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function (value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function (value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// TODO Parse shadow style\n// TODO Only shallow path support\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;","function defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this); // Travel by inverted order to make sure order consistency\n    // when duplicate keys exists (consider newDataIndex.pop() below).\n    // For performance consideration, these code below do not look neat.\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.unshift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisHelper = require(\"./axisHelper\");\n\nfunction getName(obj) {\n  if (zrUtil.isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = {\n  /**\n   * Format labels\n   * @return {Array.<string>}\n   */\n  getFormattedLabels: function () {\n    return axisHelper.getFormattedLabels(this.axis, this.get('axisLabel.formatter'));\n  },\n\n  /**\n   * Get categories\n   */\n  getCategories: function () {\n    return this.get('type') === 'category' && zrUtil.map(this.get('data'), getName);\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","var _default = {\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  }\n};\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, idx, isIgnore) {\n  var point = data.getItemLayout(idx); // Is an object\n  // if (point && point.hasOwnProperty('point')) {\n  //     point = point.point;\n  // }\n\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx)) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Array.<boolean>} [isIgnore]\n */\n\n\nsymbolDrawProto.updateData = function (data, isIgnore) {\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = {\n    itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label.normal'),\n    hoverLabelModel: seriesModel.getModel('label.emphasis'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data;\n\n  if (data) {\n    if (enableAnimation) {\n      data.eachItemGraphicEl(function (el) {\n        el.fadeOut(function () {\n          group.remove(el);\n        });\n      });\n    } else {\n      group.removeAll();\n    }\n  }\n};\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n\n// Grid view\necharts.extendComponentView({\n  type: 'grid',\n  render: function (gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction retrieveTargetInfo(payload, seriesModel) {\n  if (payload && (payload.type === 'treemapZoomToNode' || payload.type === 'treemapRootToNode')) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds,\n *              where the input minSpan and maxSpan will not work.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  // Normalize firstly.\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    minSpan = maxSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleIndex = 0;\n  }\n\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbinden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1], Math.max(extend[0], value));\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * 'percent' or 'value'\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var rawOption = retrieveRaw(option);\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var rawOption = retrieveRaw(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    this.doInit(rawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function (rawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(rawOption);\n\n    updateRangeUse(this, rawOption);\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function () {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function () {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function () {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function () {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function () {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function (rawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (rawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function () {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function (callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function (dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function (dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   * @param {boolean} [ignoreUpdateRangeUsg=false]\n   */\n  setRawRange: function (opt, ignoreUpdateRangeUsg) {\n    var option = this.option;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // If only one of 'start' and 'startValue' is not null/undefined, the other\n      // should be cleared, which enable clear the option.\n      // If both of them are not set, keep option with the original value, which\n      // enable use only set start but not set end when calling `dispatchAction`.\n      // The same as 'end' and 'endValue'.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        option[names[0]] = opt[names[0]];\n        option[names[1]] = opt[names[1]];\n      }\n    }, this);\n    !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function () {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function (axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function (axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function () {\n    return this._rangePropMode.slice();\n  }\n});\n\nfunction retrieveRaw(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, rawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = rawOption[names[0]] != null;\n    var valueSpecified = rawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function (dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;","var clazzUtil = require(\"../util/clazz\");\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getDataExtent(dim, true));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * @return {Array.<string>}\n */\n\n\nScale.prototype.getTicksLabels = function () {\n  var labels = [];\n  var ticks = this.getTicks();\n\n  for (var i = 0; i < ticks.length; i++) {\n    labels.push(this.getLabel(ticks[i]));\n  }\n\n  return labels;\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","var numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function (start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function (other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function () {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function (interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    return helper.intervalScaleGetTicks(this._interval, this._extent, this._niceExtent, this._intervalPrecision);\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getTicksLabels: function () {\n    var labels = [];\n    var ticks = this.getTicks();\n\n    for (var i = 0; i < ticks.length; i++) {\n      labels.push(this.getLabel(ticks[i]));\n    }\n\n    return labels;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function (data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function (splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction getSymbolSize(data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n}\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : 'pointer';\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    this._createSymbol(symbolType, data, idx, symbolSize);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\nvar normalLabelAccessPath = ['label', 'normal'];\nvar emphasisLabelAccessPath = ['label', 'emphasis'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolRotate = seriesScope && seriesScope.symbolRotate;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolRotate = itemModel.getShallow('symbolRotate');\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  var valueDim = !useNameLabel && findLabelValueDim(data);\n\n  if (useNameLabel || valueDim != null) {\n    graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n      labelFetcher: seriesModel,\n      labelDataIndex: idx,\n      defaultText: useNameLabel ? data.getName(idx) : data.get(valueDim, idx),\n      isRectText: true,\n      autoColor: color\n    });\n  }\n\n  symbolPath.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  symbolPath.hoverStyle = hoverItemStyle; // FIXME\n  // Do not use symbol.trigger('emphasis'), but use symbol.highlight() instead.\n\n  graphic.setHoverStyle(symbolPath);\n  var scale = getScale(symbolSize);\n\n  if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n    var onEmphasis = function () {\n      var ratio = scale[1] / scale[0];\n      this.animateTo({\n        scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n      }, 400, 'elasticOut');\n    };\n\n    var onNormal = function () {\n      this.animateTo({\n        scale: scale\n      }, 400, 'elasticOut');\n    };\n\n    symbolPath.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n};\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    labelOption.show = true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","function _default(seriesType, ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType(seriesType, function (series) {\n    var data = series.getData();\n    data.filterSelf(function (idx) {\n      var name = data.getName(idx); // If in any legend component the status is not selected.\n\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(name)) {\n          return false;\n        }\n      }\n\n      return true;\n    }, this);\n  }, this);\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspectScale = geoModel.get('aspectScale') || 0.75;\n  var aspect = rect.width / rect.height * aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function (ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var mapData = echarts.getMap(name);\n      var geo = new Geo(name + idx, name, mapData && mapData.geoJson, mapData && mapData.specialAreas, geoModel.get('nameMap'));\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var mapData = echarts.getMap(mapType);\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, mapData && mapData.geoJson, mapData && mapData.specialAreas, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function (originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    nameMap = nameMap || {};\n    var map = echarts.getMap(mapName);\n    var geoJson = map && map.geoJson;\n\n    if (!geoJson) {\n      return originRegionArr;\n    }\n\n    var dataNameMap = zrUtil.createHashMap();\n    var features = geoJson.features;\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    for (var i = 0; i < features.length; i++) {\n      var name = features[i].properties.name;\n\n      if (!dataNameMap.get(name)) {\n        if (nameMap.hasOwnProperty(name)) {\n          name = nameMap[name];\n        }\n\n        regionsArr.push({\n          name: name\n        });\n      }\n    }\n\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true]\n   * @param {Object} [opt.moveOnMouseMove=true]\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.notLeftMouse(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (eventTool.notLeftMouse(e) || !checkKeyBinding(this, 'moveOnMouseMove', e) || !this._dragging || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  this.trigger('pan', dx, dy, oldX, oldY, x, y);\n}\n\nfunction mouseup(e) {\n  if (!eventTool.notLeftMouse(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  // wheelDelta maybe -0 in chrome mac.\n  if (!checkKeyBinding(this, 'zoomOnMouseWheel', e) || e.wheelDelta === 0) {\n    return;\n  } // Convenience:\n  // Mac and VM Windows on Mac: scroll up: zoom out.\n  // Windows: scroll up: zoom in.\n\n\n  var zoomDelta = e.wheelDelta > 0 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.offsetX, e.offsetY);\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var zoomDelta = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  zoom.call(this, e, zoomDelta, e.pinchX, e.pinchY);\n}\n\nfunction zoom(e, zoomDelta, zoomX, zoomY) {\n  if (this.pointerChecker && this.pointerChecker(e, zoomX, zoomY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    this.trigger('zoom', zoomDelta, zoomX, zoomY);\n  }\n}\n\nfunction checkKeyBinding(roamController, prop, e) {\n  var setting = roamController._opt[prop];\n  return setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","var List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar WhiskerBoxDraw = require(\"../helper/WhiskerBoxDraw\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var categories;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // 考虑时间轴\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      categories = xAxisModel.getCategories();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      categories = yAxisModel.getCategories();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var data = option.data;\n    addOrdinal && zrUtil.each(data, function (item, index) {\n      if (item.value && zrUtil.isArray(item.value)) {\n        item.value.unshift(index);\n      } else {\n        zrUtil.isArray(item) && item.unshift(index);\n      }\n    });\n    var defaultValueDimensions = this.defaultValueDimensions;\n    var dimensions = [{\n      name: baseAxisDim,\n      otherDims: {\n        tooltip: false\n      },\n      dimsDef: ['base']\n    }, {\n      name: otherAxisDim,\n      dimsDef: defaultValueDimensions.slice()\n    }];\n    dimensions = completeDimensions(dimensions, data, {\n      encodeDef: this.get('encode'),\n      dimsDef: this.get('dimensions'),\n      // Consider empty data entry.\n      dimCount: defaultValueDimensions.length + 1\n    });\n    var list = new List(dimensions, this);\n    list.initData(data, categories ? categories.slice() : null);\n    return list;\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function () {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nvar viewMixin = {\n  init: function () {\n    /**\n     * Old data.\n     * @private\n     * @type {module:echarts/chart/helper/WhiskerBoxDraw}\n     */\n    var whiskerBoxDraw = this._whiskerBoxDraw = new WhiskerBoxDraw(this.getStyleUpdater());\n    this.group.add(whiskerBoxDraw.group);\n  },\n  render: function (seriesModel, ecModel, api) {\n    this._whiskerBoxDraw.updateData(seriesModel.getData());\n  },\n  remove: function (ecModel) {\n    this._whiskerBoxDraw.remove();\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;\nexports.viewMixin = viewMixin;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n\n/**\n * @file Visual solution, for consistent option specification.\n */\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function () {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem, true);\n  } else {\n    data.each([dimension], eachItem, true);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\nvar base = 0;\nvar DELIMITER = '_';\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random()].join(DELIMITER);\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","var Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar Component = function () {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function (ecModel, api) {},\n  render: function (componentModel, ecModel, api, payload) {},\n  dispose: function () {}\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","function _default(seriesType, ecModel) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var dims = [];\n    var coordDims = coordSys.dimensions;\n\n    for (var i = 0; i < coordDims.length; i++) {\n      dims.push(seriesModel.coordDimToDataDim(coordSys.dimensions[i])[0]);\n    }\n\n    if (dims.length === 1) {\n      data.each(dims[0], function (x, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n      });\n    } else if (dims.length === 2) {\n      data.each(dims, function (x, y, idx) {\n        // Also {Array.<number>}, not undefined to avoid if...else... statement\n        data.setItemLayout(idx, isNaN(x) || isNaN(y) ? [NaN, NaN] : coordSys.dataToPoint([x, y]));\n      }, true);\n    }\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./GridModel\");\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\nvar each = zrUtil.each;\nvar ifAxisCrossZero = axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = axisHelper.niceScaleExtent;\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n\nfunction getLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var labels = axisModel.getFormattedLabels();\n  var axisLabelModel = axisModel.getModel('axisLabel');\n  var rect;\n  var step = 1;\n  var labelCount = labels.length;\n\n  if (labelCount > 40) {\n    // Simple optimization for large amount of labels\n    step = Math.ceil(labelCount / 40);\n  }\n\n  for (var i = 0; i < labelCount; i += step) {\n    if (!axis.isLabelIgnored(i)) {\n      var unrotatedSingleRect = axisLabelModel.getTextRect(labels[i]);\n      var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n      rect ? rect.union(singleRect) : rect = singleRect;\n    }\n  }\n\n  return rect;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  });\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis) {\n  // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n  var axes = axesMap[otherAxisDim];\n\n  if (!axis.onZero) {\n    return;\n  }\n\n  var onZeroAxisIndex = axis.onZeroAxisIndex; // If target axis is specified.\n\n  if (onZeroAxisIndex != null) {\n    var otherAxis = axes[onZeroAxisIndex];\n\n    if (otherAxis && canNotOnZeroToAxis(otherAxis)) {\n      axis.onZero = false;\n    }\n\n    return;\n  }\n\n  for (var idx in axes) {\n    if (axes.hasOwnProperty(idx)) {\n      var otherAxis = axes[idx];\n\n      if (otherAxis && !canNotOnZeroToAxis(otherAxis)) {\n        onZeroAxisIndex = +idx;\n        break;\n      }\n    }\n  }\n\n  if (onZeroAxisIndex == null) {\n    axis.onZero = false;\n  }\n\n  axis.onZeroAxisIndex = onZeroAxisIndex;\n}\n\nfunction canNotOnZeroToAxis(axis) {\n  return axis.type === 'category' || axis.type === 'time' || !ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = getLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (zrUtil.isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = 'bottom';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n          }\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = 'left';\n\n          if (axisPositionUsed[axisPosition]) {\n            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n          }\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse');\n      axis.onZero = axisModel.get('axisLine.onZero');\n      axis.onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  zrUtil.each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n      axis.scale.unionExtentFromData(data, dim);\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    zrUtil.indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    zrUtil.indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransfrom(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return zrUtil.map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar STACK_PREFIX = '__ec_stack_';\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt, api) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params, api);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction calBarWidthAndOffset(barSeries, api) {\n  var seriesInfoList = zrUtil.map(barSeries, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    return {\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    };\n  });\n  return doCalBarWidthAndOffset(seriesInfoList, api);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList, api) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n    // TODO\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutGrid(seriesType, ecModel, api) {\n  var barWidthAndOffset = calBarWidthAndOffset(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n  }));\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (seriesModel.coordinateSystem.type !== 'cartesian2d') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var valueAxisStart = baseAxis.onZero ? valueAxis.toGlobalCoord(valueAxis.dataToCoord(0)) : valueAxis.getGlobalExtent()[0];\n    var coordDims = [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0]];\n    var coords = data.mapArray(coordDims, function (x, y) {\n      return cartesian.dataToPoint([x, y]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      offset: columnOffset,\n      size: columnWidth\n    });\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = coords[idx];\n      var lastCoord = lastStackCoords[stackId][idx][sign];\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (valueAxis.isHorizontal()) {\n        x = lastCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - lastCoordOrigin;\n        height = columnWidth;\n        lastStackCoordsOrigin[stackId][idx][sign] += width;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += width;\n      } else {\n        x = coord[0] + columnOffset;\n        y = lastCoord;\n        width = columnWidth;\n        height = coord[1] - lastCoordOrigin;\n        lastStackCoordsOrigin[stackId][idx][sign] += height;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoords[stackId][idx][sign] += height;\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }, true);\n  }, this);\n}\n\nbarLayoutGrid.getLayoutOnAxis = getLayoutOnAxis;\nvar _default = barLayoutGrid;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\nvar _default = {\n  updateSelectedMap: function (targetList) {\n    this._targetList = targetList.slice();\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function (name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\nfunction _default(seriesType, ecModel) {\n  // Pie and funnel may use diferrent scope\n  var paletteScope = {};\n  ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n    var dataAll = seriesModel.getRawData();\n    var idxMap = {};\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n\n        if (!singleDataColor) {\n          // FIXME Performance\n          var itemModel = dataAll.getItemModel(rawIdx);\n          var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope); // Legend may use the visual info in data before processed\n\n          dataAll.setItemVisual(rawIdx, 'color', color); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        } else {\n          // Set data all color for legend\n          dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","var graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n/**\n * @param {module:echarts/data/List} lineData\n */\n\nlineDrawProto.updateData = function (lineData) {\n  var oldLineData = this._lineData;\n  var group = this.group;\n  var LineCtor = this._ctor;\n  var hostModel = lineData.hostModel;\n  var seriesScope = {\n    lineStyle: hostModel.getModel('lineStyle.normal').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('lineStyle.emphasis').getLineStyle(),\n    labelModel: hostModel.getModel('label.normal'),\n    hoverLabelModel: hostModel.getModel('label.emphasis')\n  };\n  lineData.diff(oldLineData).add(function (idx) {\n    if (!lineNeedsDraw(lineData.getItemLayout(idx))) {\n      return;\n    }\n\n    var lineGroup = new LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, lineGroup);\n    group.add(lineGroup);\n  }).update(function (newIdx, oldIdx) {\n    var lineGroup = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(lineData.getItemLayout(newIdx))) {\n      group.remove(lineGroup);\n      return;\n    }\n\n    if (!lineGroup) {\n      lineGroup = new LineCtor(lineData, newIdx, seriesScope);\n    } else {\n      lineGroup.updateData(lineData, newIdx, seriesScope);\n    }\n\n    lineData.setItemGraphicEl(newIdx, lineGroup);\n    group.add(lineGroup);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n  this._lineData = lineData;\n};\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData;\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LineDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n\n/**\n * @module echarts/chart/helper/Line\n */\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line'\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  var p1 = points[0];\n  var p2 = points[1];\n  var cp1 = points[2];\n  targetShape.x1 = p1[0];\n  targetShape.y1 = p1[1];\n  targetShape.x2 = p2[0];\n  targetShape.y2 = p2[1];\n  targetShape.percent = 1;\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var distance = 5 * invScale; // End\n\n    if (label.__position === 'end') {\n      textPosition = [d[0] * distance + toPos[0], d[1] * distance + toPos[1]];\n      textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n      textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n    } // Middle\n    else if (label.__position === 'middle') {\n        var halfPercent = percent / 2;\n        var tangent = line.tangentAt(halfPercent);\n        var n = [tangent[1], -tangent[0]];\n        var cp = line.pointAt(halfPercent);\n\n        if (n[1] > 0) {\n          n[0] = -n[0];\n          n[1] = -n[1];\n        }\n\n        textPosition = [cp[0] + n[0] * distance, cp[1] + n[1] * distance];\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n        if (toPos[0] < fromPos[0]) {\n          rotation = Math.PI + rotation;\n        }\n\n        label.attr('rotation', rotation);\n      } // Start\n      else {\n          textPosition = [-d[0] * distance + fromPos[0], -d[1] * distance + fromPos[1]];\n          textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n          textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale]\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label'\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n    labelModel = itemModel.getModel('label.normal');\n    hoverLabelModel = itemModel.getModel('label.emphasis');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var defaultText;\n  var normalText;\n  var emphasisText;\n\n  if (showLabel || hoverShowLabel) {\n    var rawVal = seriesModel.getRawValue(idx);\n    defaultText = rawVal == null ? defaultText = lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    defaultLabelColor = visualColor || '#000';\n    normalText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType), defaultText);\n    emphasisText = zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), normalText);\n  } // label.afterUpdate = lineAfterUpdate;\n\n\n  if (showLabel) {\n    var labelStyle = graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n  } else {\n    label.setStyle('text', null);\n  }\n\n  if (hoverShowLabel) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(mouseHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function (brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function (panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function (opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function (cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function (brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function () {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function () {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  each(controller._handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  each(controller._handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  // Check active\n  if (!controller._brushType) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar mouseHandlers = {\n  mousedown: function (e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd.call(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function (e) {\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: handleDragEnd //,\n  // FIXME\n  // in tooltip, globalout should not be triggered.\n  // globalout: handleDragEnd\n\n};\n\nfunction handleDragEnd(e) {\n  if (this._dragging) {\n    preventDefault(e);\n    var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n    var eventParams = updateCoverByMouse(this, e, localCursorPoint, true);\n    this._dragging = false;\n    this._track = [];\n    this._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(this, eventParams);\n  }\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function (controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function (localTrack) {\n      return localTrack;\n    },\n    endCreating: function (controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function (controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function (localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function (controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function (axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function (api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function (axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = get(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function (group, elOption, updateProps) {\n    var pointerEl = get(group).pointerEl;\n\n    if (pointerEl) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n    var labelEl = get(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function (value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function (value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function (dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    get(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function () {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function (moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function (api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function () {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function (xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(get(el).lastProp, props)) {\n    get(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nrequire(\"./PolarModel\");\n\n// TODO Axis scale\n// 依赖 PolarModel 做预处理\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = parsePercent(polarModel.get('radius'), size);\n  radiusAxis.inverse ? radiusAxis.setExtent(radius, 0) : radiusAxis.setExtent(0, radius);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      radiusAxis.scale.unionExtentFromData(data, 'radius');\n      angleAxis.scale.unionExtentFromData(data, 'angle');\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function (ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt.label, ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.mergeOption(option, ecModel, extraOpt.createdBySelf, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function () {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n  mergeOption: function (newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel.mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function () {\n    return this._data;\n  },\n  setData: function (data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, modelUtil.dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n}\n\nfunction getPrecision(data, valueAxisDim, dataIndex) {\n  var precision = -1;\n\n  do {\n    precision = Math.max(numberUtil.getPrecision(data.get(valueAxisDim, dataIndex)), precision);\n    data = data.stackedOn;\n  } while (data);\n\n  return precision;\n}\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var value = numCalculate(data, targetDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(targetDataDim, value, true)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex, true);\n  coordArr[targetCoordIndex] = data.get(targetDataDim, dataIndex, true);\n  var precision = getPrecision(data, targetDataDim, dataIndex);\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return coordArr;\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      item.coord = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex); // Force to use the value of calculated value.\n\n      item.value = item.coord[targetCoordIndex];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          var dataDim = seriesModel.coordDimToDataDim(dims[i])[0];\n          coord[i] = numCalculate(data, dataDim, coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(seriesModel.dataDimToCoordDim(ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = seriesModel.coordDimToDataDim(ret.baseAxis.dim)[0];\n    ret.valueDataDim = seriesModel.coordDimToDataDim(ret.valueAxis.dim)[0];\n  }\n\n  return ret;\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    }, true);\n    return sum / count;\n  } else {\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function () {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function (markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function () {}\n});\n\nmodule.exports = _default;","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;","var _clazz = require(\"../../util/clazz\");\n\nvar set = _clazz.set;\nvar get = _clazz.get;\nvar _default = {\n  clearColorPalette: function () {\n    set(this, 'colorIdx', 0);\n    set(this, 'colorNameMap', {});\n  },\n  getColorFromPalette: function (name, scope) {\n    scope = scope || this;\n    var colorIdx = get(scope, 'colorIdx') || 0;\n    var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {}); // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var colorPalette = this.get('color', true) || [];\n\n    if (!colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n    return color;\n  }\n};\nmodule.exports = _default;","var zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphic = require(\"./util/graphic\");\n\nexports.graphic = graphic;\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n\nvar _parseGeoJson = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJson = _parseGeoJson;\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nexports.util = ecUtil;","var numberUtil = require(\"../util/number\");\n\n/**\n * For testable.\n */\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nfunction intervalScaleGetTicks(interval, extent, niceTickExtent, intervalPrecision) {\n  var ticks = []; // If interval is 0, return [];\n\n  if (!interval) {\n    return ticks;\n  } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n  var safeLimit = 10000;\n\n  if (extent[0] < niceTickExtent[0]) {\n    ticks.push(extent[0]);\n  }\n\n  var tick = niceTickExtent[0];\n\n  while (tick <= niceTickExtent[1]) {\n    ticks.push(tick); // Avoid rounding error\n\n    tick = roundNumber(tick + interval, intervalPrecision);\n\n    if (tick === ticks[ticks.length - 1]) {\n      // Consider out of safe float point, e.g.,\n      // -3711126.9907707 + 2e-10 === -3711126.9907707\n      break;\n    }\n\n    if (ticks.length > safeLimit) {\n      return [];\n    }\n  } // Consider this case: the last item of ticks is smaller\n  // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n  if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n    ticks.push(extent[1]);\n  }\n\n  return ticks;\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;\nexports.intervalScaleGetTicks = intervalScaleGetTicks;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties.name, geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;","var _model = require(\"../../util/model\");\n\nvar otherDimToDataDim = _model.otherDimToDataDim;\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nfunction findLabelValueDim(data) {\n  var valueDim;\n  var labelDims = otherDimToDataDim(data, 'label');\n\n  if (labelDims.length) {\n    valueDim = labelDims[0];\n  } else {\n    // Get last value dim\n    var dimensions = data.dimensions.slice();\n    var dataType;\n\n    while (dimensions.length && (valueDim = dimensions.pop(), dataType = data.getDimensionInfo(valueDim).type, dataType === 'ordinal' || dataType === 'time')) {} // jshint ignore:line\n\n  }\n\n  return valueDim;\n}\n\nexports.findLabelValueDim = findLabelValueDim;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n\n// Poly path support NaN point\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  // 一级层叠\n  z: 0,\n  // 二级层叠\n  // 反向坐标轴\n  inverse: false,\n  // 坐标轴名字，默认为空\n  name: '',\n  // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // 坐标轴名字旋转，degree。\n  nameRotate: null,\n  // Adapt to axis rotate, when nameLocation is 'middle'.\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // 坐标轴文字样式，默认取全局样式\n  nameTextStyle: {},\n  // 文字与轴线距离\n  nameGap: 15,\n  silent: false,\n  // Default false to support tooltip.\n  triggerEvent: false,\n  // Default false to avoid legacy user event listener fail.\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  // 坐标轴线\n  axisLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // 坐标轴两端的箭头\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // 属性show控制显示与否，默认显示\n    show: true,\n    // 控制小标记是否在grid里\n    inside: false,\n    // 属性length控制线长\n    length: 5,\n    // 属性lineStyle控制线条样式\n    lineStyle: {\n      width: 1\n    }\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    show: true,\n    // 控制文本标签是否在grid里\n    inside: false,\n    rotate: 0,\n    showMinLabel: null,\n    // true | false | null (auto)\n    showMaxLabel: null,\n    // true | false | null (auto)\n    margin: 8,\n    // formatter: null,\n    // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n    fontSize: 12\n  },\n  // 分隔线\n  splitLine: {\n    // 默认显示，属性show控制显示与否\n    show: true,\n    // 属性lineStyle（详见lineStyle）控制线条样式\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // 分隔区域\n  splitArea: {\n    // 默认不显示，属性show控制显示与否\n    show: false,\n    // 属性areaStyle（详见areaStyle）控制区域样式\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // 类目起始和结束两端空白策略\n  boundaryGap: true,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  // 坐标轴小标记\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  // 坐标轴文本标签，详见axis.axisLabel\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // 数值起始和结束两端空白策略\n  boundaryGap: [0, 0],\n  // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n  // min: null,\n  // 最大值，设置成 'dataMax' 则从数据中计算最大值\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // 脱离0值比例，放大聚焦到最终_min，_max区间\n  // scale: false,\n  // 分割段数，默认为5\n  splitNumber: 5 // Minimum interval\n  // minInterval: null\n  // maxInterval: null\n\n}, defaultOption); // FIXME\n\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var rawAxisPosition = axis.position;\n  var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (axis.onZero) {\n    var otherAxis = grid.getAxis(axisDim === 'x' ? 'y' : 'x', axis.onZeroAxisIndex);\n    var onZeroCoord = otherAxis.toGlobalCoord(otherAxis.dataToCoord(0));\n    posBound[idx['onZero']] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = axis.onZero ? posBound[idx[rawAxisPosition]] - posBound[idx['onZero']] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // label interval when auto mode.\n\n  layout.labelInterval = axis.getLabelInterval(); // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.__base_bar__',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  getMarkerPosition: function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(value, true);\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // 最小高度改为0\n    barMinHeight: 0,\n    // 最小角度为0，仅对极坐标系下的柱状图有效\n    barMinAngle: 0,\n    // cursor: null,\n    // barMaxWidth: null,\n    // 默认自适应\n    // barWidth: null,\n    // 柱间距离，默认为柱形宽度的30%，可设固定值\n    // barGap: '30%',\n    // 类目间柱形距离，默认为类目间距的20%，可设固定值\n    // barCategoryGap: '20%',\n    // label: {\n    //     normal: {\n    //         show: false\n    //     }\n    // },\n    itemStyle: {// normal: {\n      // color: '各异'\n      // },\n      // emphasis: {}\n    }\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nfunction setLabel(normalStyle, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside) {\n  var labelModel = itemModel.getModel('label.normal');\n  var hoverLabelModel = itemModel.getModel('label.emphasis');\n  graphic.setLabelStyle(normalStyle, hoverStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: seriesModel.getRawValue(dataIndex),\n    isRectText: true,\n    autoColor: color\n  });\n  fixPosition(normalStyle);\n  fixPosition(hoverStyle);\n}\n\nfunction fixPosition(style, labelPositionOutside) {\n  if (style.textPosition === 'outside') {\n    style.textPosition = labelPositionOutside;\n  }\n}\n\nexports.setLabel = setLabel;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(seriesType, actionInfos) {\n  zrUtil.each(actionInfos, function (actionInfo) {\n    actionInfo.update = 'updateView';\n    /**\n     * @payload\n     * @property {string} seriesName\n     * @property {string} name\n     */\n\n    echarts.registerAction(actionInfo, function (payload, ecModel) {\n      var selected = {};\n      ecModel.eachComponent({\n        mainType: 'series',\n        subType: seriesType,\n        query: payload\n      }, function (seriesModel) {\n        if (seriesModel[actionInfo.method]) {\n          seriesModel[actionInfo.method](payload.name, payload.dataIndex);\n        }\n\n        var data = seriesModel.getData(); // Create selected map\n\n        data.each(function (idx) {\n          var name = data.getName(idx);\n          selected[name] = seriesModel.isSelected(name) || false;\n        });\n      });\n      return {\n        name: payload.name,\n        selected: selected\n      };\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransform = new TransformDummy();\n  this._viewTransform = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function (x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function (centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function () {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function () {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function () {\n    return this._roamTransform;\n  },\n  _updateCenterAndZoom: function () {\n    // Must update after view transform updated\n    var viewTransformMatrix = this._viewTransform.getLocalTransform();\n\n    var roamTransform = this._roamTransform;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, viewTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, viewTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function () {\n    var roamTransform = this._roamTransform;\n    var viewTransform = this._viewTransform;\n    viewTransform.parent = roamTransform;\n    roamTransform.updateTransform();\n    viewTransform.updateTransform();\n    viewTransform.transform && matrix.copy(this.transform || (this.transform = []), viewTransform.transform);\n\n    if (this.transform) {\n      this.invTransform = this.invTransform || [];\n      matrix.invert(this.invTransform, this.transform);\n    } else {\n      this.invTransform = null;\n    }\n\n    this.decomposeTransform();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function () {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    var transform = this.transform;\n    return transform ? v2ApplyTransform([], data, transform) : [data[0], data[1]];\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nfunction getFixedItemStyle(model, scale) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, group, api, fromView) {\n  group.off('click');\n  group.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    group.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    group.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, group);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, group) {\n  // FIXME\n  group.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function (mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n    var group = this.group;\n    var scale = geo.scale;\n    var groupNewProp = {\n      position: geo.position,\n      scale: scale\n    }; // No animation when first draw or in action\n\n    if (!group.childAt(0) || payload) {\n      group.attr(groupNewProp);\n    } else {\n      graphic.updateProps(group, groupNewProp, mapOrGeoModel);\n    }\n\n    group.removeAll();\n    var itemStyleAccessPath = ['itemStyle', 'normal'];\n    var hoverItemStyleAccessPath = ['itemStyle', 'emphasis'];\n    var labelAccessPath = ['label', 'normal'];\n    var hoverLabelAccessPath = ['label', 'emphasis'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel, scale);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel, scale);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          shape: {\n            points: geometry.exterior\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); i++) {\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            shape: {\n              points: geometry.interiors[i]\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get('value', dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: region.center.slice(),\n          scale: [1 / scale[0], 1 / scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      graphic.setHoverStyle(regionGroup, hoverItemStyle, {\n        hoverSilentOnTouch: !!mapOrGeoModel.get('selectedMode')\n      });\n      group.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, group, api, fromView);\n    updateMapSelected(mapOrGeoModel, group);\n  },\n  remove: function () {\n    this.group.removeAll();\n\n    this._controller.dispose();\n\n    this._controllerHost = {};\n  },\n  _updateController: function (mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (dx, dy) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: dx,\n        dy: dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (zoom, mouseX, mouseY) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      }));\n\n      if (this._updateGroup) {\n        var group = this.group;\n        var scale = group.scale;\n        group.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _roamHelper = require(\"./roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n\n/**\n * @payload\n * @property {string} [componentType=series]\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\necharts.registerAction({\n  type: 'geoRoam',\n  event: 'geoRoam',\n  update: 'updateLayout'\n}, function (payload, ecModel) {\n  var componentType = payload.componentType || 'series';\n  ecModel.eachComponent({\n    mainType: componentType,\n    query: payload\n  }, function (componentModel) {\n    var geo = componentModel.coordinateSystem;\n\n    if (geo.type !== 'geo') {\n      return;\n    }\n\n    var res = updateCenterAndZoom(geo, payload, componentModel.get('scaleLimit'));\n    componentModel.setCenter && componentModel.setCenter(res.center);\n    componentModel.setZoom && componentModel.setZoom(res.zoom); // All map series with same `map` use the same geo coordinate system\n    // So the center and zoom must be in sync. Include the series not selected by legend\n\n    if (componentType === 'series') {\n      zrUtil.each(componentModel.seriesGroup, function (seriesModel) {\n        seriesModel.setCenter(res.center);\n        seriesModel.setZoom(res.zoom);\n      });\n    }\n  });\n});","/**\n * @param {module:echarts/coord/View} view\n * @param {Object} payload\n * @param {Object} [zoomLimit]\n */\nfunction updateCenterAndZoom(view, payload, zoomLimit) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    var center = view.pointToData(point);\n    view.setCenter(center);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scale[0] *= zoom;\n    view.scale[1] *= zoom;\n    var position = view.position;\n    var fixX = (payload.originX - position[0]) * (zoom - 1);\n    var fixY = (payload.originY - position[1]) * (zoom - 1);\n    position[0] -= fixX;\n    position[1] -= fixY;\n    view.updateTransform(); // Get the new center\n\n    var center = view.pointToData(point);\n    view.setCenter(center);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}\n\nexports.updateCenterAndZoom = updateCenterAndZoom;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar List = require(\"./List\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar completeDimensions = require(\"./helper/completeDimensions\");\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\nvar TreeNode = function (name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function () {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function (dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel();\n    var leavesModel;\n\n    if (!levelModel && (this.children.length === 0 || this.children.length !== 0 && this.isExpand === false)) {\n      leavesModel = this.getLeavesModel();\n    }\n\n    return itemModel.getModel(path, (levelModel || leavesModel || hostTree.hostModel).getModel(path));\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLeavesModel: function () {\n    return this.hostTree.leavesModel;\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function (key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n * @param {Object} leavesOption\n */\n\nfunction Tree(hostModel, levelOptions, leavesOption) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n  this.leavesModel = new Model(leavesOption || {}, hostModel, hostModel.ecModel);\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function (name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function () {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @param {Array.<Object>} treeOptions.leaves\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions) {\n  var tree = new Tree(hostModel, treeOptions.levels, treeOptions.leaves);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensions = completeDimensions([{\n    name: 'value'\n  }], listData, {\n    dimCount: dimMax\n  });\n  var list = new List(dimensions, hostModel);\n  list.initData(listData);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Link lists and struct (graph or tree)\n */\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n * @see https://github.com/d3/d3-hierarchy\n */\n\n/**\n * Initialize all computational message for following algorithm\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree\n */\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * Computes all real x-coordinates by summing up the modifiers recursively.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * Shifts the current subtree rooted at wr. This is done by increasing prelim(w+) and modifier(w+) by shift.\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","var _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n\nfunction _default(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n  init(virtualRoot);\n  eachAfter(realRoot, firstWalk, separation);\n  virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n  eachBefore(realRoot, secondWalk);\n  var left = realRoot;\n  var right = realRoot;\n  var bottom = realRoot;\n  eachBefore(realRoot, function (node) {\n    var x = node.getLayout().x;\n\n    if (x < left.getLayout().x) {\n      left = node;\n    }\n\n    if (x > right.getLayout().x) {\n      right = node;\n    }\n\n    if (node.depth > bottom.depth) {\n      bottom = node;\n    }\n  });\n  var delta = left === right ? 1 : separation(left, right) / 2;\n  var tx = delta - left.getLayout().x;\n  var kx = 0;\n  var ky = 0;\n  var coorX = 0;\n  var coorY = 0;\n\n  if (layout === 'radial') {\n    kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n    ky = height / (bottom.depth - 1 || 1);\n    eachBefore(realRoot, function (node) {\n      coorX = (node.getLayout().x + tx) * kx;\n      coorY = (node.depth - 1) * ky;\n      var finalCoor = radialCoordinate(coorX, coorY);\n      node.setLayout({\n        x: finalCoor.x,\n        y: finalCoor.y,\n        rawX: coorX,\n        rawY: coorY\n      }, true);\n    });\n  } else {\n    if (seriesModel.get('orient') === 'horizontal') {\n      ky = height / (right.getLayout().x + delta + tx);\n      kx = width / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorY = (node.getLayout().x + tx) * ky;\n        coorX = (node.depth - 1) * kx;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    } else {\n      kx = width / (right.getLayout().x + delta + tx);\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        node.setLayout({\n          x: coorX,\n          y: coorY\n        }, true);\n      });\n    }\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n\nfunction _default(nodes, edges, hostModel, directed, beforeLink) {\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = hostModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, hostModel, hostModel.ecModel);\n  } else {\n    // FIXME\n    var coordSysCtor = CoordinateSystem.get(coordSys); // FIXME\n\n    var dimensionNames = completeDimensions((coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []).concat(['value']), nodes);\n    nodeData = new List(dimensionNames, hostModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], hostModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","var vec2 = require(\"zrender/lib/core/vector\");\n\nfunction circularLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var rect = coordSys.getBoundingRect();\n  var nodeData = seriesModel.getData();\n  var graph = nodeData.graph;\n  var angle = 0;\n  var sum = nodeData.getSum('value');\n  var unitAngle = Math.PI * 2 / (sum || nodeData.count());\n  var cx = rect.width / 2 + rect.x;\n  var cy = rect.height / 2 + rect.y;\n  var r = Math.min(rect.width, rect.height) / 2;\n  graph.eachNode(function (node) {\n    var value = node.getValue('value');\n    angle += unitAngle * (sum ? value : 1) / 2;\n    node.setLayout([r * Math.cos(angle) + cx, r * Math.sin(angle) + cy]);\n    angle += unitAngle * (sum ? value : 1) / 2;\n  });\n  nodeData.setLayout({\n    cx: cx,\n    cy: cy\n  });\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.normal.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var cp1;\n    var x12 = (p1[0] + p2[0]) / 2;\n    var y12 = (p1[1] + p2[1]) / 2;\n\n    if (+curveness) {\n      curveness *= 3;\n      cp1 = [cx * curveness + x12 * (1 - curveness), cy * curveness + y12 * (1 - curveness)];\n    }\n\n    edge.setLayout([p1, p2, cp1]);\n  });\n}\n\nexports.circularLayout = circularLayout;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function (parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function (opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function (opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function (e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function (e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function (e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","var Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Parallel coordinate system creater.\n */\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","var BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * nest helper used to group by the array.\n * can specified the keys and sort the keys.\n */\nfunction nest() {\n  var keysFunction = [];\n  var sortKeysFunction = [];\n  /**\n   * map an Array into the mapObject.\n   * @param {Array} array\n   * @param {number} depth\n   */\n\n  function map(array, depth) {\n    if (depth >= keysFunction.length) {\n      return array;\n    }\n\n    var i = -1;\n    var n = array.length;\n    var keyFunction = keysFunction[depth++];\n    var mapObject = {};\n    var valuesByKey = {};\n\n    while (++i < n) {\n      var keyValue = keyFunction(array[i]);\n      var values = valuesByKey[keyValue];\n\n      if (values) {\n        values.push(array[i]);\n      } else {\n        valuesByKey[keyValue] = [array[i]];\n      }\n    }\n\n    zrUtil.each(valuesByKey, function (value, key) {\n      mapObject[key] = map(value, depth);\n    });\n    return mapObject;\n  }\n  /**\n   * transform the Map Object to multidimensional Array\n   * @param {Object} map\n   * @param {number} depth\n   */\n\n\n  function entriesMap(mapObject, depth) {\n    if (depth >= keysFunction.length) {\n      return mapObject;\n    }\n\n    var array = [];\n    var sortKeyFunction = sortKeysFunction[depth++];\n    zrUtil.each(mapObject, function (value, key) {\n      array.push({\n        key: key,\n        values: entriesMap(value, depth)\n      });\n    });\n\n    if (sortKeyFunction) {\n      return array.sort(function (a, b) {\n        return sortKeyFunction(a.key, b.key);\n      });\n    } else {\n      return array;\n    }\n  }\n\n  return {\n    /**\n     * specified the key to groupby the arrays.\n     * users can specified one more keys.\n     * @param {Function} d\n     */\n    key: function (d) {\n      keysFunction.push(d);\n      return this;\n    },\n\n    /**\n     * specified the comparator to sort the keys\n     * @param {Function} order\n     */\n    sortKeys: function (order) {\n      sortKeysFunction[keysFunction.length - 1] = order;\n      return this;\n    },\n\n    /**\n     * the array to be grouped by.\n     * @param {Array} array\n     */\n    entries: function (array) {\n      return entriesMap(map(array, 0), 0);\n    }\n  };\n}\n\nmodule.exports = nest;","var graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n    hoverLineStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n\necharts.extendComponentView({\n  type: 'single'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, labelInterval, z2\n * }\n */\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.labelInterval = axis.getLabelInterval();\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return seriesModel.coordDimToDataDim(dim)[0];\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar get = modelUtil.makeGetter();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  get(zr).records || (get(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = get(zr).records[key] || (get(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (get(zr).initialized) {\n    return;\n  }\n\n  get(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(get(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function (payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (get(zr).records || {})[key];\n\n  if (record) {\n    get(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../axis/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n  },\n  mergeOption: function (option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n  },\n  optionUpdated: function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function (ecModel) {\n    var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    this._data = legendData;\n    var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n      return series.name;\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.legendDataProvider) {\n        var data = seriesModel.legendDataProvider();\n        availableNames = availableNames.concat(data.mapArray(data.getName));\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // 图例图形宽度\n    itemWidth: 25,\n    // 图例图形高度\n    itemHeight: 14,\n    // 图例关闭时候的颜色\n    inactiveColor: '#ccc',\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function () {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function () {\n    return this._contentGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (legendModel, ecModel, api) {\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && legendModel.get('orient') === 'vertical' ? 'right' : 'left';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      }\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Series legend\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, api)).on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Data legend of pie, funnel\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendDataProvider) {\n            var data = seriesModel.legendDataProvider();\n            var idx = data.indexOfName(name);\n\n            if (idx < 0) {\n              return;\n            }\n\n            var color = data.getItemVisual(idx, 'color');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, selectMode);\n\n            itemGroup.on('click', curry(dispatchSelectAction, name, api)) // FIXME Should not specify the series name\n            .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api)).on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n  },\n  _createItem: function (name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    itemGroup.add(createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, true)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType == 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      } // Put symbol in the center\n\n\n      itemGroup.add(createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    contentGroup.attr('position', [-contentRect.x, -contentRect.y]);\n    return this.group.getBoundingRect();\n  }\n});\n\nfunction dispatchSelectAction(name, api) {\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: name\n  });\n}\n\nfunction dispatchHighlightAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesModel, dataName, api) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    seriesModel.get('legendHoverLink') && api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesModel.name,\n      name: dataName\n    });\n  }\n}\n\nmodule.exports = _default;","var _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function (foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function (foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function () {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function () {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function (to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function (to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function (values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function (values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\necharts.registerProcessor(function (ecModel, api) {\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // We calculate window and reset axis here but not in model\n    // init stage and not after action dispatch handler, because\n    // reset should be called after seriesData.restoreData.\n    dataZoomModel.eachTargetAxis(resetSingleAxis); // Caution: data zoom filtering is order sensitive when using\n    // percent range and no min/max/scale set on axis.\n    // For example, we have dataZoom definition:\n    // [\n    //      {xAxisIndex: 0, start: 30, end: 70},\n    //      {yAxisIndex: 0, start: 20, end: 80}\n    // ]\n    // In this case, [20, 80] of y-dataZoom should be based on data\n    // that have filtered by x-dataZoom using range of [30, 70],\n    // but should not be based on full raw data. Thus sliding\n    // x-dataZoom will change both ranges of xAxis and yAxis,\n    // while sliding y-dataZoom will only change the range of yAxis.\n    // So we should filter x-axis after reset x-axis immediately,\n    // and then reset y-axis and filter y-axis.\n\n    dataZoomModel.eachTargetAxis(filterSingleAxis);\n  });\n  ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n    // Fullfill all of the range props so that user\n    // is able to get them from chart.getOption().\n    var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n    var percentRange = axisProxy.getDataPercentWindow();\n    var valueRange = axisProxy.getDataValueWindow();\n    dataZoomModel.setRawRange({\n      start: percentRange[0],\n      end: percentRange[1],\n      startValue: valueRange[0],\n      endValue: valueRange[1]\n    }, true);\n  });\n});\n\nfunction resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n}\n\nfunction filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n  dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\necharts.registerVisual(echarts.PRIORITY.VISUAL.COMPONENT, function (ecModel) {\n  ecModel.eachComponent('visualMap', function (visualMapModel) {\n    processSingleVisualMap(visualMapModel, ecModel);\n  });\n  prepareVisualMeta(ecModel);\n});\n\nfunction processSingleVisualMap(visualMapModel, ecModel) {\n  visualMapModel.eachTargetSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    visualSolution.applyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, data, visualMapModel.getValueState, visualMapModel, visualMapModel.getDataDimension(data));\n  });\n} // Only support color.\n\n\nfunction prepareVisualMeta(ecModel) {\n  ecModel.eachSeries(function (seriesModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        visualMeta.dimension = visualMapModel.getDataDimension(data);\n        visualMetaList.push(visualMeta);\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  });\n} // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar DEFAULT_COLOR = ['#f6efa6', '#d88273', '#bf444c'];\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function (supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function () {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function (callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function (seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function (value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function () {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function (list) {\n    var optDim = this.option.dimension;\n    return optDim != null ? optDim : list.dimensions.length - 1;\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function () {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function () {\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: DEFAULT_COLOR\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function () {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function () {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual mapping.\n */\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function (visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function (visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function (group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function (targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function (group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction convertDataIndex(batch) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batch.dataIndex != null) {\n      batch.dataIndexInside = batch.dataIndex;\n      batch.dataIndex = null;\n    }\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.convertDataIndex = convertDataIndex;","var echarts = require(\"../../echarts\");\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nexports.default = function (fn) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 30;\n\n  var timer = null;\n\n  return function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    clearTimeout(timer);\n\n    timer = setTimeout(function () {\n      fn.apply(_this, args);\n    }, delay);\n  };\n};\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar SizeSensorId = exports.SizeSensorId = 'size-sensor-id';\n\nvar SensorStyle = exports.SensorStyle = 'display:block;position:absolute;top:0;left:0;height:100%;width:100%;overflow:hidden;pointer-events:none;z-index:-1;opacity:0';\n\nvar SensorClassName = exports.SensorClassName = 'size-sensor-object';","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _echarts = require('echarts');\n\nvar _echarts2 = _interopRequireDefault(_echarts);\n\nvar _core = require('./core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// export the Component the echarts Object.\nvar EchartsReact = function (_EchartsReactCore) {\n  _inherits(EchartsReact, _EchartsReactCore);\n\n  function EchartsReact(props) {\n    _classCallCheck(this, EchartsReact);\n\n    var _this = _possibleConstructorReturn(this, (EchartsReact.__proto__ || Object.getPrototypeOf(EchartsReact)).call(this, props));\n\n    _this.echartsLib = _echarts2['default'];\n    return _this;\n  }\n\n  return EchartsReact;\n}(_core2['default']);\n\nexports['default'] = EchartsReact;","var _echarts = require(\"./lib/echarts\");\n\n(function () {\n  for (var key in _echarts) {\n    if (_echarts == null || !_echarts.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _echarts[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/chart/line\");\n\nrequire(\"./lib/chart/bar\");\n\nrequire(\"./lib/chart/pie\");\n\nrequire(\"./lib/chart/scatter\");\n\nrequire(\"./lib/chart/radar\");\n\nrequire(\"./lib/chart/map\");\n\nrequire(\"./lib/chart/tree\");\n\nrequire(\"./lib/chart/treemap\");\n\nrequire(\"./lib/chart/graph\");\n\nrequire(\"./lib/chart/gauge\");\n\nrequire(\"./lib/chart/funnel\");\n\nrequire(\"./lib/chart/parallel\");\n\nrequire(\"./lib/chart/sankey\");\n\nrequire(\"./lib/chart/boxplot\");\n\nrequire(\"./lib/chart/candlestick\");\n\nrequire(\"./lib/chart/effectScatter\");\n\nrequire(\"./lib/chart/lines\");\n\nrequire(\"./lib/chart/heatmap\");\n\nrequire(\"./lib/chart/pictorialBar\");\n\nrequire(\"./lib/chart/themeRiver\");\n\nrequire(\"./lib/chart/custom\");\n\nrequire(\"./lib/component/graphic\");\n\nrequire(\"./lib/component/grid\");\n\nrequire(\"./lib/component/legendScroll\");\n\nrequire(\"./lib/component/tooltip\");\n\nrequire(\"./lib/component/axisPointer\");\n\nrequire(\"./lib/component/polar\");\n\nrequire(\"./lib/component/geo\");\n\nrequire(\"./lib/component/parallel\");\n\nrequire(\"./lib/component/singleAxis\");\n\nrequire(\"./lib/component/brush\");\n\nrequire(\"./lib/component/calendar\");\n\nrequire(\"./lib/component/title\");\n\nrequire(\"./lib/component/dataZoom\");\n\nrequire(\"./lib/component/visualMap\");\n\nrequire(\"./lib/component/markPoint\");\n\nrequire(\"./lib/component/markLine\");\n\nrequire(\"./lib/component/markArea\");\n\nrequire(\"./lib/component/timeline\");\n\nrequire(\"./lib/component/toolbox\");\n\nrequire(\"zrender/lib/vml/vml\");\n\nrequire(\"zrender/lib/svg/svg\");","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMinin = require(\"./mixin/colorPalette\");\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\nvar each = zrUtil.each;\nvar filter = zrUtil.filter;\nvar map = zrUtil.map;\nvar isArray = zrUtil.isArray;\nvar indexOf = zrUtil.indexOf;\nvar isObject = zrUtil.isObject;\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  constructor: GlobalModel,\n  init: function (option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function (option, optionPreprocessorFuncs) {\n    zrUtil.assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function (type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function (newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = []; // 如果不存在对应的 component model 则直接 merge\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        option[mainType] = option[mainType] == null ? zrUtil.clone(componentOption) : zrUtil.merge(option[mainType], componentOption, true);\n      } else {\n        newCptTypes.push(mainType);\n      }\n    }); // FIXME OPTION 同步是否要改回原来的\n\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n    this._seriesIndices = this._seriesIndices || [];\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        zrUtil.assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel instanceof ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name;\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = zrUtil.extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            zrUtil.extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n      }\n    }\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function () {\n    var option = zrUtil.clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function () {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function (mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function (condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series'},\n   *     function (model, index) {...}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function (condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function (mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (zrUtil.isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function (name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function (seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function (subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function () {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function (cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function (subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function (subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function (seriesModel) {\n    assertSeriesInitialized(this);\n    return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function () {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function (cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    this._seriesIndices = createSeriesIndices(filteredSeries);\n  },\n  restoreData: function () {\n    var componentsMap = this._componentsMap;\n    this._seriesIndices = createSeriesIndices(componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        component.restoreData();\n      });\n    });\n  }\n});\n/**\n * @inner\n */\n\nfunction mergeTheme(option, theme) {\n  zrUtil.each(theme, function (themeItem, name) {\n    // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? zrUtil.clone(themeItem) : zrUtil.merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = zrUtil.createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices = null;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  zrUtil.merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!zrUtil.isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(seriesModels) {\n  return map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || [];\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nzrUtil.mixin(GlobalModel, colorPaletteMinin);\nvar _default = GlobalModel;\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getLineStyle: function (excludes) {\n    var style = getLineStyle(this, excludes);\n    var lineDash = this.getLineDash(style.lineWidth);\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getLineDash: function (lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\nvar _default = {\n  getAreaStyle: function (excludes, includes) {\n    return getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function (isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function () {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function (text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;","var makeStyleMapper = require(\"./makeStyleMapper\");\n\nvar getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\nvar _default = {\n  getItemStyle: function (excludes, includes) {\n    var style = getItemStyle(this, excludes, includes);\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function () {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","var _default = {\n  getBoxLayoutParams: function () {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","var platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // 全图默认背景\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // 浅色\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // 深色\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  // 默认需要 Grid 配置项\n  // grid: {},\n  // 主题，主题\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar echartsAPIList = ['getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed', 'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption', 'getViewOfComponentModel', 'getViewOfSeriesModel']; // And `getCoordinateSystems` and `getComponentByElement` will be injected in echarts.js\n\nfunction ExtensionAPI(chartInstance) {\n  zrUtil.each(echartsAPIList, function (name) {\n    this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n  }, this);\n}\n\nvar _default = ExtensionAPI;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function (rawOption, optionPreprocessorFuncs) {\n    rawOption = clone(rawOption, true); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function (isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function (ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function (ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\n// Compatitable with 2.0\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\nvar COMPATITABLE_SERIES = ['bar', 'boxplot', 'candlestick', 'chord', 'effectScatter', 'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel', 'pie', 'radar', 'sankey', 'scatter', 'treemap'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    }\n\n    if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n    }\n\n    for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n      if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n        compatLayoutProperties(seriesOpt);\n        break;\n      }\n    }\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction compatTextStyle(opt, propName) {\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatLabelTextStyle(labelOpt) {\n  if (isObject(labelOpt)) {\n    compatTextStyle(labelOpt, 'normal');\n    compatTextStyle(labelOpt, 'emphasis');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatItemStyle(seriesOpt);\n  compatLabelTextStyle(seriesOpt.label); // treemap\n\n  compatLabelTextStyle(seriesOpt.upperLabel); // graph\n\n  compatLabelTextStyle(seriesOpt.edgeLabel);\n  var markPoint = seriesOpt.markPoint;\n  compatItemStyle(markPoint);\n  compatLabelTextStyle(markPoint && markPoint.label);\n  var markLine = seriesOpt.markLine;\n  compatItemStyle(seriesOpt.markLine);\n  compatLabelTextStyle(markLine && markLine.label);\n  var markArea = seriesOpt.markArea;\n  compatLabelTextStyle(markArea && markArea.label); // For gauge\n\n  compatTextStyle(seriesOpt, 'axisLabel');\n  compatTextStyle(seriesOpt, 'title');\n  compatTextStyle(seriesOpt, 'detail');\n  var data = seriesOpt.data;\n\n  if (data) {\n    for (var i = 0; i < data.length; i++) {\n      compatItemStyle(data[i]);\n      compatLabelTextStyle(data[i] && data[i].label);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatItemStyle(mpData[i]);\n      compatLabelTextStyle(mpData[i] && mpData[i].label);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatItemStyle(mlData[i][0]);\n        compatLabelTextStyle(mlData[i][0] && mlData[i][0].label);\n        compatItemStyle(mlData[i][1]);\n        compatLabelTextStyle(mlData[i][1] && mlData[i][1].label);\n      } else {\n        compatItemStyle(mlData[i]);\n        compatLabelTextStyle(mlData[i] && mlData[i].label);\n      }\n    }\n  }\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatLabelTextStyle(geoOpt.label);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatLabelTextStyle(regionObj.label);\n      });\n    }\n  });\n  compatLabelTextStyle(toObj(option.timeline).label);\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","var Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nfunction _default(ecModel) {\n  function encodeColor(seriesModel) {\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n    var data = seriesModel.getData();\n    var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n    || seriesModel.getColorFromPalette(seriesModel.get('name')); // Default color\n    // FIXME Set color function or use the platte color\n\n    data.setVisual('color', color); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (typeof color === 'function' && !(color instanceof Gradient)) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', color(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n      });\n    }\n  }\n\n  ecModel.eachRawSeries(encodeColor);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    color: '#c23531',\n    textColor: '#000',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    zlevel: 0\n  });\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  var arc = new graphic.Arc({\n    shape: {\n      startAngle: -PI / 2,\n      endAngle: -PI / 2 + 0.1,\n      r: 10\n    },\n    style: {\n      stroke: opts.color,\n      lineCap: 'round',\n      lineWidth: 5\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  arc.animateShape(true).when(1000, {\n    endAngle: PI * 3 / 2\n  }).start('circularInOut');\n  arc.animateShape(true).when(1000, {\n    startAngle: PI * 3 / 2\n  }).delay(300).start('circularInOut');\n  var group = new graphic.Group();\n  group.add(arc);\n  group.add(labelRect);\n  group.add(mask); // Inject resize\n\n  group.resize = function () {\n    var cx = api.getWidth() / 2;\n    var cy = api.getHeight() / 2;\n    arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    var r = arc.shape.r;\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  var data = seriesModel.get('data');\n  return createListFromArray(data, seriesModel, seriesModel.ecModel);\n}\n/**\n * @see {module:echarts/data/helper/completeDimensions}\n */\n\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!(option instanceof Model)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n  init: function (data, extent) {\n    this._data = data;\n    this._extent = extent || [0, data.length - 1];\n  },\n  parse: function (val) {\n    return typeof val === 'string' ? zrUtil.indexOf(this._data, val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function (rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._data[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function (val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function (val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function () {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function (n) {\n    return this._data[n];\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function () {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, false));\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function (a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function (val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function (opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function (approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function (val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n}); // Steps from d3\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 42], // 10w\n['quarter', ONE_DAY * 380 / 4], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function () {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getTicks: function () {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function (val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function (data, dim) {\n    this.unionExtent(data.getDataExtent(dim, true, function (val) {\n      return val > 0;\n    }));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function (opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'line', 'circle', 'line'));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(dataSample, 'line'));","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clipOverflow: true,\n    // cursor: null,\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // itemStyle: {\n    //     normal: {},\n    //     emphasis: {}\n    // },\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // areaStyle: {},\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    // 拐点图形类型\n    symbol: 'emptyCircle',\n    // 拐点图形大小\n    symbolSize: 4,\n    // 拐点图形旋转控制\n    symbolRotate: null,\n    // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n    showSymbol: true,\n    // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n    showAllSymbol: false,\n    // 是否连接断点\n    connectNulls: false,\n    // 数据过滤，'average', 'max', 'min', 'sum'\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\n// FIXME step not support polar\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.3 : 0;\n}\n\nfunction getAxisExtentWithGap(axis) {\n  var extent = axis.getGlobalExtent();\n\n  if (axis.onBand) {\n    // Remove extra 1px to avoid line miter in clipped edge\n    var halfBandWidth = axis.getBandWidth() / 2 - 1;\n    var dir = extent[1] > extent[0] ? 1 : -1;\n    extent[0] += dir * halfBandWidth;\n    extent[1] -= dir * halfBandWidth;\n  }\n\n  return extent;\n}\n\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Array.<Array.<number>>} points\n * @private\n */\n\n\nfunction getStackedOnPoints(coordSys, data) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = 0;\n\n  if (!baseAxis.onZero) {\n    var extent = valueAxis.scale.getExtent();\n\n    if (extent[0] > 0) {\n      // Both positive\n      valueStart = extent[0];\n    } else if (extent[1] < 0) {\n      // Both negative\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  return data.mapArray([valueDim], function (val, idx) {\n    var stackedOnSameSign;\n    var stackedOn = data.stackedOn; // Find first stacked value with same sign\n\n    while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n      stackedOnSameSign = stackedOn;\n      break;\n    }\n\n    var stackedData = [];\n    stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n    stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n    return coordSys.dataToPoint(stackedData);\n  }, true);\n}\n\nfunction createGridClipShape(cartesian, hasAnimation, seriesModel) {\n  var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n  var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = Math.min(xExtent[0], xExtent[1]);\n  var y = Math.min(yExtent[0], yExtent[1]);\n  var width = Math.max(xExtent[0], xExtent[1]) - x;\n  var height = Math.max(yExtent[0], yExtent[1]) - y;\n  var lineWidth = seriesModel.get('lineStyle.normal.width') || 2; // Expand clip shape to avoid clipping when line value exceeds axis\n\n  var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n\n  if (isHorizontal) {\n    y -= expandSize;\n    height += expandSize * 2;\n  } else {\n    x -= expandSize;\n    width += expandSize * 2;\n  }\n\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipShape(polar, hasAnimation, seriesModel) {\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis();\n  var radiusExtent = radiusAxis.getExtent();\n  var angleExtent = angleAxis.getExtent();\n  var RADIAN = Math.PI / 180;\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: polar.cx,\n      cy: polar.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: -angleExtent[1] * RADIAN\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipShape(coordSys, hasAnimation, seriesModel) {\n  return coordSys.type === 'polar' ? createPolarClipShape(coordSys, hasAnimation, seriesModel) : createGridClipShape(coordSys, hasAnimation, seriesModel);\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    // Can only be x or y\n    if (visualMetaList[i].dimension < 2) {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta || coordSys.type !== 'cartesian2d') {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var dimension = visualMeta.dimension;\n  var dimName = data.dimensions[dimension];\n  var axis = coordSys.getAxis(dimName); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[dimName] = minCoord;\n  gradient[dimName + '2'] = maxCoord;\n  return gradient;\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function () {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n    var points = data.mapArray(data.getItemLayout, true);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var stackedOnPoints = getStackedOnPoints(coordSys, data);\n    var showSymbol = seriesModel.get('showSymbol');\n\n    var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol') && this._getSymbolIgnoreFunc(data, coordSys); // Remove temporary symbols\n\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step'); // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, isSymbolIgnore); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOn = data.stackedOn;\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOn) {\n        var stackedOnSeries = stackedOn.hostModel;\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n  },\n  dispose: function () {},\n  highlight: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function (points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function (points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  _getSymbolIgnoreFunc: function (data, coordSys) {\n    var categoryAxis = coordSys.getAxesByScale('ordinal')[0]; // `getLabelInterval` is provided by echarts/component/axis\n\n    if (categoryAxis && categoryAxis.isLabelIgnored) {\n      return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function (ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\nfunction sign(val) {\n  return val >= 0 ? 1 : -1;\n}\n\nfunction getStackedOnPoint(coordSys, data, idx) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = baseAxis.onZero ? 0 : valueAxis.scale.getExtent()[0];\n  var valueDim = valueAxis.dim;\n  var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n  var stackedOnSameSign;\n  var stackedOn = data.stackedOn;\n  var val = data.get(valueDim, idx); // Find first stacked value with same sign\n\n  while (stackedOn && sign(stackedOn.get(valueDim, idx)) === sign(val)) {\n    stackedOnSameSign = stackedOn;\n    break;\n  }\n\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n  stackedData[1 - baseDataOffset] = stackedOnSameSign ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n  return coordSys.dataToPoint(stackedData);\n} // function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var dims = newCoordSys.dimensions;\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","var samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    }\n\n    return max;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    }\n\n    return min;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType, ecModel, api) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var sampling = seriesModel.get('sampling');\n    var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n    if (coordSys.type === 'cartesian2d' && sampling) {\n      var baseAxis = coordSys.getBaseAxis();\n      var valueAxis = coordSys.getOtherAxis(baseAxis);\n      var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n      var size = extent[1] - extent[0];\n      var rate = Math.round(data.count() / size);\n\n      if (rate > 1) {\n        var sampler;\n\n        if (typeof sampling === 'string') {\n          sampler = samplers[sampling];\n        } else if (typeof sampling === 'function') {\n          sampler = sampling;\n        }\n\n        if (sampler) {\n          data = data.downSample(valueAxis.dim, 1 / rate, sampler, indexSampler);\n          seriesModel.setData(data);\n        }\n      }\n    }\n  }, this);\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Cartesian = require(\"./Cartesian\");\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)), yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))];\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    return [xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp), yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)];\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * If axis is on the zero position of the other axis\n   * @type {boolean}\n   */\n  onZero: false,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @param  {number}  idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","require(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"./cartesianAxisHelper\");\n\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar getInterval = AxisBuilder.getInterval;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine']; // function getAlignWithLabel(model, axisModel) {\n//     var alignWithLabel = model.get('alignWithLabel');\n//     if (alignWithLabel === 'auto') {\n//         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n//     }\n//     return alignWithLabel;\n// }\n\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel, layout.labelInterval);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitLine: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n    var p1 = [];\n    var p2 = []; // Simple optimization\n    // Batching the lines if color are the same\n\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n\n      this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n        anid: 'line_' + ticks[i],\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      })));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @param {number|Function} labelInterval\n   * @private\n   */\n  _splitArea: function (axisModel, gridModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitAreaModel = axisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var ticksCoords = axis.getTicksCoords();\n    var ticks = axis.scale.getTicks();\n    var prevX = axis.toGlobalCoord(ticksCoords[0]);\n    var prevY = axis.toGlobalCoord(ticksCoords[0]);\n    var count = 0;\n    var areaInterval = getInterval(splitAreaModel, labelInterval);\n    var areaStyle = areaStyleModel.getAreaStyle();\n    areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      if (ifIgnoreOnTick(axis, i, areaInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (axis.isHorizontal()) {\n        x = prevX;\n        y = gridRect.y;\n        width = tickCoord - x;\n        height = gridRect.height;\n      } else {\n        x = gridRect.x;\n        y = prevY;\n        width = gridRect.width;\n        height = tickCoord - y;\n      }\n\n      var colorIndex = count++ % areaColors.length;\n\n      this._axisGroup.add(new graphic.Rect({\n        anid: 'area_' + ticks[i],\n        shape: {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        },\n        style: zrUtil.defaults({\n          fill: areaColors[colorIndex]\n        }, areaStyle),\n        silent: true\n      }));\n\n      prevX = x + width;\n      prevY = y + height;\n    }\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/BarSeries\");\n\nrequire(\"./bar/BarView\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'bar')); // Visual coding for legend\n\necharts.registerVisual(function (ecModel) {\n  ecModel.eachSeriesByType('bar', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual('legendSymbol', 'roundRect');\n  });\n});","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar _default = BaseBarSeries.extend({\n  type: 'series.bar',\n  dependencies: ['grid', 'polar'],\n  brushSelector: 'rect'\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\n\nvar Model = require(\"../../model/Model\");\n\nvar barItemStyle = require(\"./barItemStyle\");\n\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'barBorderWidth']; // FIXME\n// Just for compatible with ec2.\n\nzrUtil.extend(Model.prototype, barItemStyle);\n\nvar _default = echarts.extendChartView({\n  type: 'bar',\n  render: function (seriesModel, ecModel, api) {\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._render(seriesModel, ecModel, api);\n    } else {}\n\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  _render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n      var el = elementCreator[coord.type](data, dataIndex, itemModel, layout, isHorizontalOrRadial, animationModel);\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).update(function (newIndex, oldIndex) {\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        return;\n      }\n\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (el) {\n        graphic.updateProps(el, {\n          shape: layout\n        }, animationModel, newIndex);\n      } else {\n        el = elementCreator[coord.type](data, newIndex, itemModel, layout, isHorizontalOrRadial, animationModel, true);\n      }\n\n      data.setItemGraphicEl(newIndex, el); // Add back\n\n      group.add(el);\n      updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n\n      if (coord.type === 'cartesian2d') {\n        el && removeRect(dataIndex, animationModel, el);\n      } else {\n        el && removeSector(dataIndex, animationModel, el);\n      }\n    }).execute();\n    this._data = data;\n  },\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (el) {\n          if (el.type === 'sector') {\n            removeSector(el.dataIndex, ecModel, el);\n          } else {\n            removeRect(el.dataIndex, ecModel, el);\n          }\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n});\n\nvar elementCreator = {\n  cartesian2d: function (data, dataIndex, itemModel, layout, isHorizontal, animationModel, isUpdate) {\n    var rect = new graphic.Rect({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      var animateTarget = {};\n      rectShape[animateProperty] = 0;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](rect, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return rect;\n  },\n  polar: function (data, dataIndex, itemModel, layout, isRadial, animationModel, isUpdate) {\n    var sector = new graphic.Sector({\n      shape: zrUtil.extend({}, layout)\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](sector, {\n        shape: animateTarget\n      }, animationModel, dataIndex);\n    }\n\n    return sector;\n  }\n};\n\nfunction removeRect(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      width: 0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nfunction removeSector(dataIndex, animationModel, el) {\n  // Not show text when animating\n  el.style.text = null;\n  graphic.updateProps(el, {\n    shape: {\n      r: el.shape.r0\n    }\n  }, animationModel, dataIndex, function () {\n    el.parent && el.parent.remove(el);\n  });\n}\n\nvar getLayout = {\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = getLineWidth(itemModel, layout); // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var color = data.getItemVisual(dataIndex, 'color');\n  var opacity = data.getItemVisual(dataIndex, 'opacity');\n  var itemStyleModel = itemModel.getModel('itemStyle.normal');\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getBarItemStyle();\n\n  if (!isPolar) {\n    el.setShape('r', itemStyleModel.get('barBorderRadius') || 0);\n  }\n\n  el.useStyle(zrUtil.defaults({\n    fill: color,\n    opacity: opacity\n  }, itemStyleModel.getBarItemStyle()));\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n\n  if (!isPolar) {\n    setLabel(el.style, hoverStyle, itemModel, color, seriesModel, dataIndex, labelPositionOutside);\n  }\n\n  graphic.setHoverStyle(el, hoverStyle);\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n  return Math.min(lineWidth, Math.abs(rawLayout.width), Math.abs(rawLayout.height));\n}\n\nmodule.exports = _default;","var makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar getBarItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], // Compatitable with 2\n['stroke', 'barBorderColor'], ['lineWidth', 'barBorderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\nvar _default = {\n  getBarItemStyle: function (excludes) {\n    var style = getBarItemStyle(this, excludes);\n\n    if (this.getBorderLineDash) {\n      var lineDash = this.getBorderLineDash();\n      lineDash && (style.lineDash = lineDash);\n    }\n\n    return style;\n  }\n};\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(zrUtil.curry(dataColor, 'pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'pie'));","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function (option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n\n    this.updateSelectedMap(option.data);\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function (newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this.option.data);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each('value', function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    label: {\n      normal: {\n        // If rotate around circle\n        rotate: false,\n        show: true,\n        // 'outer', 'inside', 'center'\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n        // 默认使用全局文本样式，详见TEXTSTYLE\n        // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n      },\n      emphasis: {}\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      normal: {\n        show: true,\n        // 引导线两段中的第一段长度\n        length: 15,\n        // 引导线两段中的第二段长度\n        length2: 15,\n        smooth: false,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1\n      },\n      emphasis: {}\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationEasing: 'cubicOut',\n    data: []\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    polyline.ignore = polyline.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    polyline.ignore = polyline.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle()));\n  sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), itemModel.get('selected'), seriesModel.get('selectedOffset'), seriesModel.get('animation'));\n\n  function onEmphasis() {\n    // Sector may has animation of updating data. Force to move to the last frame\n    // Or it may stopped on the wrong shape\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r + seriesModel.get('hoverOffset')\n      }\n    }, 300, 'elasticOut');\n  }\n\n  function onNormal() {\n    sector.stopAnimation(true);\n    sector.animateTo({\n      shape: {\n        r: layout.r\n      }\n    }, 300, 'elasticOut');\n  }\n\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n  }\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function () {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && isFirstRender && data.count() > 0 // Default expansion animation\n    && animationType !== 'scale') {\n      var shape = data.getItemLayout(0);\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel));\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  _createClipPath: function (cx, cy, r, startAngle, clockwise, cb, seriesModel) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function (point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","var _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var data = seriesModel.getData();\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each('value', function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum('value'); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent('value');\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each('value', function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r\n      });\n      currentAngle = endAngle;\n    }, true); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each('value', function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, width, height);\n  });\n}\n\nmodule.exports = _default;","var textContain = require(\"zrender/lib/contain/text\");\n\n// FIXME emphasis label position is not same with normal label position\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  }); // 压\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  } // 弹\n\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // 右侧\n    ? Number.MAX_VALUE // 下\n    : 0 // 上\n    : isDownList // 左侧\n    ? Number.MAX_VALUE // 下\n    : 0; // 上\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      // Not change x for center label\n      if (list[i].position === 'center') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // 右下，左下\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // 右上，左上\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n  var leftList = [];\n  var rightList = [];\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (labelLayoutList[i].x < cx) {\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var linePoints = labelLayoutList[i].linePoints;\n\n    if (linePoints) {\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (labelLayoutList[i].x < cx) {\n        linePoints[2][0] = labelLayoutList[i].x + 3;\n      } else {\n        linePoints[2][0] = labelLayoutList[i].x - 3;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n      linePoints[1][0] = linePoints[2][0] + dist;\n    }\n  }\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var labelLineLen = labelLineModel.get('length');\n    var labelLineLen2 = labelLineModel.get('length2');\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n        textX = x3 + (dx < 0 ? -5 : 5);\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : dx > 0 ? 'left' : 'right';\n    }\n\n    var font = labelModel.getFont();\n    var labelRotate = labelModel.get('rotate') ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerVisual(zrUtil.curry(visualSymbol, 'scatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'scatter'));","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // normal: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    //     }\n    // },\n    itemStyle: {\n      normal: {\n        opacity: 0.8 // color: 各异\n\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\necharts.extendChartView({\n  type: 'scatter',\n  init: function () {\n    this._normalSymbolDraw = new SymbolDraw();\n    this._largeSymbolDraw = new LargeSymbolDraw();\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var largeSymbolDraw = this._largeSymbolDraw;\n    var normalSymbolDraw = this._normalSymbolDraw;\n    var group = this.group;\n    var symbolDraw = seriesModel.get('large') && data.count() > seriesModel.get('largeThreshold') ? largeSymbolDraw : normalSymbolDraw;\n    this._symbolDraw = symbolDraw;\n    symbolDraw.updateData(data);\n    group.add(symbolDraw.group);\n    group.remove(symbolDraw === largeSymbolDraw ? normalSymbolDraw.group : largeSymbolDraw.group);\n  },\n  updateLayout: function (seriesModel) {\n    this._symbolDraw.updateLayout(seriesModel);\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api, true);\n  },\n  dispose: function () {}\n});","var graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n// TODO Batch by color\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null,\n    sizes: null\n  },\n  symbolProxy: null,\n  buildPath: function (path, shape) {\n    var points = shape.points;\n    var sizes = shape.sizes;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (isNaN(pt[0]) || isNaN(pt[1])) {\n        continue;\n      }\n\n      var size = sizes[i];\n\n      if (size[0] < 4) {\n        // Optimize for small symbol\n        path.rect(pt[0] - size[0] / 2, pt[1] - size[1] / 2, size[0], size[1]);\n      } else {\n        symbolProxyShape.x = pt[0] - size[0] / 2;\n        symbolProxyShape.y = pt[1] - size[1] / 2;\n        symbolProxyShape.width = size[0];\n        symbolProxyShape.height = size[1];\n        symbolProxy.buildPath(path, symbolProxyShape, true);\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var points = shape.points;\n    var sizes = shape.sizes; // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var i = points.length - 1; i >= 0; i--) {\n      var pt = points[i];\n      var size = sizes[i];\n      var x0 = pt[0] - size[0] / 2;\n      var y0 = pt[1] - size[1] / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + size[0] && y <= y0 + size[1]) {\n        // i is dataIndex\n        return i;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n  this._symbolEl = new LargeSymbolPath({// rectHover: true,\n    // cursor: 'default'\n  });\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeSymbolProto.updateData = function (data) {\n  this.group.removeAll();\n  var symbolEl = this._symbolEl;\n  var seriesModel = data.hostModel;\n  symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout),\n    sizes: data.mapArray(function (idx) {\n      var size = data.getItemVisual(idx, 'symbolSize');\n\n      if (!(size instanceof Array)) {\n        size = [size, size];\n      }\n\n      return size;\n    })\n  }); // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  symbolEl.useStyle(seriesModel.getModel('itemStyle.normal').getItemStyle(['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  } // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n\n  symbolEl.seriesIndex = seriesModel.seriesIndex;\n  symbolEl.on('mousemove', function (e) {\n    symbolEl.dataIndex = null;\n    var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex >= 0) {\n      // Provide dataIndex for tooltip\n      symbolEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(symbolEl);\n};\n\nlargeSymbolProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._symbolEl.setShape({\n    points: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeSymbolProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n\n// Must use radar component\necharts.registerVisual(zrUtil.curry(dataColor, 'radar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'radar', 'circle', null));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'radar'));\necharts.registerPreprocessor(backwardCompat);","require(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// TODO clockwise\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coodToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180;\n  this.r = numberUtil.parsePercent(radarModel.get('radius'), viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, indicatorAxis.dim);\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // PENDING\n\n\n      var center = Math.round((rawExtent[0] + rawExtent[1]) / 2 / interval) * interval;\n      var halfSplitNumber = Math.round(splitNumber / 2);\n      scale.setExtent(numberUtil.round(center - halfSplitNumber * interval), numberUtil.round(center + (splitNumber - halfSplitNumber) * interval));\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisLabel: axisLabel,\n        // Competitable with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i]\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i],\n              r: ticksRadius[i + 1]\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","var SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function (option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n  getInitialData: function (option, ecModel) {\n    var data = option.data || [];\n    var dimensions = completeDimensions([], data, {\n      extraPrefix: 'indicator_',\n      extraFromZero: true\n    });\n    var list = new List(dimensions, this);\n    list.initData(data);\n    return list;\n  },\n  formatTooltip: function (dataIndex) {\n    var value = this.getRawValue(dataIndex);\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      return encodeHTML(axis.name + ' : ' + value[idx]);\n    }).join('<br />');\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      normal: {\n        width: 2,\n        type: 'solid'\n      }\n    },\n    label: {\n      normal: {\n        position: 'top'\n      }\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle.normal').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('lineStyle.emphasis').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle.normal');\n      var hoverAreaStyleModel = itemModel.getModel('areaStyle.emphasis');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: data.get(data.dimensions[symbolPath.__dimIdx], idx),\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      function onEmphasis() {\n        polygon.attr('ignore', hoverPolygonIgnore);\n      }\n\n      function onNormal() {\n        polygon.attr('ignore', polygonIgnore);\n      }\n\n      itemGroup.off('mouseover').off('mouseout').off('normal').off('emphasis');\n      itemGroup.on('emphasis', onEmphasis).on('mouseover', onEmphasis).on('normal', onNormal).on('mouseout', onNormal);\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","function _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    function pointsConverter(val, idx) {\n      points[idx] = points[idx] || [];\n      points[idx][i] = coordSys.dataToPoint(val, i);\n    }\n\n    for (var i = 0; i < coordSys.getIndicatorAxes().length; i++) {\n      var dim = data.dimensions[i];\n      data.each(dim, pointsConverter);\n    }\n\n    data.each(function (idx) {\n      // Close polygon\n      points[idx][0] && points[idx].push(points[idx][0].slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// Backward compat for radar chart in 2\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"../../coord/geo/geoCreator\");\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  init: function (option) {\n    this._fillOption(option, this.getMapType()); // this.option = option;\n\n\n    MapSeries.superApply(this, 'init', arguments);\n    this.updateSelectedMap(option.data);\n  },\n  getInitialData: function (option) {\n    var dimensions = completeDimensions(['value'], option.data || []);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  mergeOption: function (newOption) {\n    this._fillOption(newOption, this.getMapType());\n\n    MapSeries.superApply(this, 'mergeOption', arguments);\n    this.updateSelectedMap(this.option.data);\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function () {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function () {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  _fillOption: function (option, mapName) {\n    // Shallow clone\n    // option = zrUtil.extend({}, option);\n    option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap); // return option;\n  },\n  getRawValue: function (dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    return this.getData().get('value', dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n\n      if (!isNaN(seriesGroup[i].originalData.get('value', otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function (dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        areaColor: '#eee'\n      },\n      // 也是选中样式\n      emphasis: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    }\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar View = require(\"../View\");\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n\n// Geo fix functions\nvar geoFixFuncs = [fixNanhai, fixTextCoord, fixGeoCoord, fixDiaoyuIsland];\n/**\n * [Geo description]\n * @param {string} name Geo name\n * @param {string} map Map type\n * @param {Object} geoJson\n * @param {Object} [specialAreas]\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n */\n\nfunction Geo(name, map, geoJson, specialAreas, nameMap) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  this._nameCoordMap = zrUtil.createHashMap();\n  this.loadGeoJson(geoJson, specialAreas, nameMap);\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param {Object} geoJson\n   * @param {Object} [specialAreas]\n   *        Specify the positioned areas by left, top, width, height\n   * @param {Object.<string, string>} [nameMap]\n   *        Specify name alias\n   */\n  loadGeoJson: function (geoJson, specialAreas, nameMap) {\n    // https://jsperf.com/try-catch-performance-overhead\n    try {\n      this.regions = geoJson ? parseGeoJson(geoJson) : [];\n    } catch (e) {\n      throw 'Invalid geoJson format\\n' + e.message;\n    }\n\n    specialAreas = specialAreas || {};\n    nameMap = nameMap || {};\n    var regions = this.regions;\n    var regionsMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionName = regions[i].name; // Try use the alias in nameMap\n\n      regionName = nameMap.hasOwnProperty(regionName) ? nameMap[regionName] : regionName;\n      regions[i].name = regionName;\n      regionsMap.set(regionName, regions[i]); // Add geoJson\n\n      this.addGeoCoord(regionName, regions[i].center); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        regions[i].transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    }\n\n    this._regionsMap = regionsMap;\n    this._rect = null;\n    zrUtil.each(geoFixFuncs, function (fixFunc) {\n      fixFunc(this);\n    }, this);\n  },\n  // Overwrite\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    rect = rect.clone(); // Longitute is inverted\n\n    rect.y = -rect.y - rect.height;\n    var viewTransform = this._viewTransform;\n    viewTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    viewTransform.decomposeTransform();\n    var scale = viewTransform.scale;\n    scale[1] = -scale[1];\n    viewTransform.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function (name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function (coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function (name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function (name) {\n    return this._nameCoordMap.get(name);\n  },\n  // Overwrite\n  getBoundingRect: function () {\n    if (this._rect) {\n      return this._rect;\n    }\n\n    var rect;\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      var regionRect = regions[i].getBoundingRect();\n      rect = rect || regionRect.clone();\n      rect.union(regionRect);\n    } // FIXME Always return new ?\n\n\n    return this._rect = rect || new BoundingRect(0, 0, 0, 0);\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data);\n    }\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n\n// Fix for 南海诸岛\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    geo.regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(geo) {\n  zrUtil.each(geo.regions, function (region) {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  });\n}\n\nmodule.exports = _default;","// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(geo) {\n  if (geo.map === 'china') {\n    for (var i = 0, len = geo.regions.length; i < len; ++i) {\n      if (geo.regions[i].name === '台湾') {\n        geo.regions[i].geometries.push({\n          type: 'polygon',\n          exterior: points[0]\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function (mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function (mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each('value', function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(idx);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: !offset ? 10 : 8\n      }); // First data on the same region\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(idx);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(idx);\n        var labelModel = itemModel.getModel('label.normal');\n        var hoverLabelModel = itemModel.getModel('label.emphasis');\n        var polygonGroups = fullData.getItemGraphicEl(fullIndex);\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(idx, 'emphasis'), normalText);\n\n        var onEmphasis = function () {\n          var hoverStyle = graphic.setTextStyle({}, hoverLabelModel, {\n            text: hoverLabelModel.get('show') ? emphasisText : null\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          }, true);\n          circle.style.extendFrom(hoverStyle); // Make label upper than others if overlaps.\n\n          circle.__mapOriginalZ2 = circle.z2;\n          circle.z2 += 1;\n        };\n\n        var onNormal = function () {\n          graphic.setTextStyle(circle.style, labelModel, {\n            text: labelModel.get('show') ? normalText : null,\n            textPosition: labelModel.getShallow('position') || 'bottom'\n          }, {\n            isRectText: true,\n            useInsideStyle: false\n          });\n\n          if (circle.__mapOriginalZ2 != null) {\n            circle.z2 = circle.__mapOriginalZ2;\n            circle.__mapOriginalZ2 = null;\n          }\n        };\n\n        polygonGroups.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        onNormal();\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each('value', function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  var dims = ['value'];\n  zrUtil.each(datas, function (data) {\n    data.each(dims, function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(dims, function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar orthogonalLayout = require(\"./tree/orthogonalLayout\");\n\nvar radialLayout = require(\"./tree/radialLayout\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'tree', 'circle', null));\necharts.registerLayout(orthogonalLayout);\necharts.registerLayout(radialLayout);","var SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Create data struct and define tree view's series model\n */\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var treeOption = {};\n    treeOption.leaves = leaves;\n    var tree = Tree.createTree(root, this, treeOption);\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex);\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function (dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // the orient of orthoginal layout, can be setted to 'horizontal' or 'vertical'\n    orient: 'horizontal',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      normal: {\n        color: '#ccc',\n        width: 1.5,\n        curveness: 0.5\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: 'lightsteelblue',\n        borderColor: '#c23531',\n        borderWidth: 1.5\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        color: '#555'\n      }\n    },\n    leaves: {\n      label: {\n        normal: {\n          show: true\n        }\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  This file used to draw tree view\n */\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    this.group.add(this._mainGroup);\n  },\n  render: function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      orient: seriesModel.get('orient'),\n      curvature: seriesModel.get('lineStyle.normal.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // update  node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n      removeNode(data, oldIdx, symbolEl, group, seriesModel, seriesScope);\n    }).execute();\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  dispose: function () {},\n  remove: function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle.normal').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle.normal').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label.normal');\n  seriesScope.hoverLabelModel = itemModel.getModel('label.emphasis');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    symbolPath.setStyle({\n      textPosition: textPosition,\n      textRotation: -rad,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  if (node.parentNode && node.parentNode !== virtualRoot) {\n    var edge = symbolEl.__edge;\n\n    if (!edge) {\n      edge = symbolEl.__edge = new graphic.BezierCurve({\n        shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n        style: zrUtil.defaults({\n          opacity: 0\n        }, seriesScope.lineStyle)\n      });\n    }\n\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n      style: {\n        opacity: 1\n      }\n    }, seriesModel);\n    group.add(edge);\n  }\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var edge = symbolEl.__edge;\n\n  if (edge) {\n    graphic.updateProps(edge, {\n      shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n      style: {\n        opacity: 0\n      }\n    }, seriesModel, function () {\n      group.remove(edge);\n    });\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n\n  if (seriesScope.layout === 'radial') {\n    var x1 = sourceLayout.rawX;\n    var y1 = sourceLayout.rawY;\n    var x2 = targetLayout.rawX;\n    var y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    var x1 = sourceLayout.x;\n    var y1 = sourceLayout.y;\n    var x2 = targetLayout.x;\n    var y2 = targetLayout.y;\n\n    if (orient === 'horizontal') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'vertical') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n\n    return {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      cpx1: cpx1,\n      cpy1: cpy1,\n      cpx2: cpx2,\n      cpy2: cpy2\n    };\n  }\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","var commonLayout = require(\"./commonLayout\");\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    hoverLayerThreshold: Infinity,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        normal: {\n          color: 'rgba(0,0,0,0.7)',\n          //'#5793f3',\n          borderColor: 'rgba(255,255,255,0.7)',\n          borderWidth: 1,\n          shadowColor: 'rgba(150,150,150,1)',\n          shadowBlur: 3,\n          shadowOffsetX: 0,\n          shadowOffsetY: 0,\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        emphasis: {\n          textStyle: {}\n        }\n      }\n    },\n    label: {\n      normal: {\n        show: true,\n        // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n        distance: 0,\n        padding: 5,\n        position: 'inside',\n        // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true // align\n        // verticalAlign\n\n      }\n    },\n    upperLabel: {\n      // Label when node is parent.\n      normal: {\n        show: false,\n        position: [0, '50%'],\n        height: 20,\n        // formatter: null,\n        color: '#fff',\n        ellipsis: true,\n        // align: null,\n        verticalAlign: 'middle'\n      },\n      emphasis: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: null,\n        // Can be 'none' if not necessary.\n        colorAlpha: null,\n        // Can be 'none' if not necessary.\n        colorSaturation: null,\n        // Can be 'none' if not necessary.\n        borderWidth: 0,\n        gapWidth: 0,\n        borderColor: '#fff',\n        borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n        // border color is evaluated by color of current node and\n        // borderColorSaturation.\n\n      },\n      emphasis: {}\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function (option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function () {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function (dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function (layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function (id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function () {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function (viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.normal.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"./helper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label', 'normal'];\nvar PATH_LABEL_EMPHASIS = ['label', 'emphasis'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel', 'normal'];\nvar PATH_UPPERLABEL_EMPHASIS = ['upperLabel', 'emphasis'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function (model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function (o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function (layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function (containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function (containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function (api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function () {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (dx, dy) {\n    if (this._state !== 'animating' && (Math.abs(dx) > DRAG_THRESHOLD || Math.abs(dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + dx,\n          y: rootLayout.y + dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (scale, mouseX, mouseY) {\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [scale, scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function (containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && window.open(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function (seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function () {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function (targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function (x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle.normal');\n  var itemStyleEmphasisModel = thisNode.getModel('itemStyle.emphasis'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  } // Background\n\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperHeight); // No children, render content.\n\n  if (!isParent) {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n    var visualBorderColor = thisNode.getVisual('borderColor', true);\n    var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n    updateStyle(bg, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setHoverStyle(bg, emphasisStyle);\n    });\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n    var visualColor = thisNode.getVisual('color', true);\n    updateStyle(content, function () {\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setHoverStyle(content, emphasisStyle);\n    });\n    group.add(content);\n  }\n\n  function updateStyle(element, cb) {\n    if (!thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      cb();\n\n      if (!element.__tmWillVisible) {\n        element.invisible = false;\n      }\n    } else {\n      // Delay invisible setting utill animation finished,\n      // avoid element vanish suddenly before animation.\n      !element.invisible && willInvisibleEls.push(element);\n    }\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var nodeModel = thisNode.getModel();\n    var text = zrUtil.retrieve(seriesModel.getFormattedLabel(thisNode.dataIndex, 'normal', null, null, upperLabelRect ? 'upperLabel' : 'label'), nodeModel.get('name'));\n\n    if (!upperLabelRect && thisLayout.isLeafRoot) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      text = iconChar ? iconChar + ' ' + text : text;\n    }\n\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? text : null,\n      autoColor: visualColor,\n      isRectText: true\n    });\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _helper = require(\"./helper\");\n\nvar wrapTreePathInfo = _helper.wrapTreePathInfo;\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function (seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle.normal'); // var emphasisStyleModel = model.getModel('itemStyle.emphasis');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function (targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function (seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function (el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function (callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function () {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;","var echarts = require(\"../../echarts\");\n\nvar helper = require(\"./helper\");\n\n/**\n * @file Treemap action\n */\nvar noop = function () {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle.normal';\n\nfunction _default(ecModel, api, payload) {\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  });\n}\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'normal', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'normal', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'normal', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'normal', 'height'];\n/**\n * @public\n */\n\nfunction _default(ecModel, api, payload) {\n  // Layout result in each node:\n  // {x, y, width, height, area, borderWidth}\n  var condition = {\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  };\n  ecModel.eachComponent(condition, function (seriesModel) {\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var targetInfo = helper.retrieveTargetInfo(payload, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  });\n}\n/**\n * Layout treemap with squarify algorithm.\n * @see https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf\n * @see https://github.com/mbostock/d3/blob/master/src/layout/treemap.js\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./graph/GraphSeries\");\n\nrequire(\"./graph/GraphView\");\n\nrequire(\"./graph/graphAction\");\n\nvar categoryFilter = require(\"./graph/categoryFilter\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar categoryVisual = require(\"./graph/categoryVisual\");\n\nvar edgeVisual = require(\"./graph/edgeVisual\");\n\nvar simpleLayout = require(\"./graph/simpleLayout\");\n\nvar circularLayout = require(\"./graph/circularLayout\");\n\nvar forceLayout = require(\"./graph/forceLayout\");\n\nvar createView = require(\"./graph/createView\");\n\necharts.registerProcessor(categoryFilter);\necharts.registerVisual(zrUtil.curry(visualSymbol, 'graph', 'circle', null));\necharts.registerVisual(categoryVisual);\necharts.registerVisual(edgeVisual);\necharts.registerLayout(simpleLayout);\necharts.registerLayout(circularLayout);\necharts.registerLayout(forceLayout); // Graph view coordinate system\n\necharts.registerCoordinateSystem('graphView', {\n  create: createView\n});","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar GraphSeries = echarts.extendSeriesModel({\n  type: 'series.graph',\n  init: function (option) {\n    GraphSeries.superApply(this, 'init', arguments); // Provide data for legend select\n\n    this.legendDataProvider = function () {\n      return this._categoriesData;\n    };\n\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeOption: function (option) {\n    GraphSeries.superApply(this, 'mergeOption', arguments);\n    this.fillDataTextStyle(option.edges || option.links);\n\n    this._updateCategoriesData();\n  },\n  mergeDefaultAndTheme: function (option) {\n    GraphSeries.superApply(this, 'mergeDefaultAndTheme', arguments);\n    defaultEmphasis(option.edgeLabel, ['show']);\n  },\n  getInitialData: function (option, ecModel) {\n    var edges = option.edges || option.links || [];\n    var nodes = option.data || option.nodes || [];\n    var self = this;\n\n    if (nodes && edges) {\n      return createGraphFromNodeEdge(nodes, edges, this, true, beforeLink).data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      // Overwrite nodeData.getItemModel to\n      nodeData.wrapMethod('getItemModel', function (model) {\n        var categoriesModels = self._categoriesModels;\n        var categoryIdx = model.getShallow('category');\n        var categoryModel = categoriesModels[categoryIdx];\n\n        if (categoryModel) {\n          categoryModel.parentModel = model.parentModel;\n          model.parentModel = categoryModel;\n        }\n\n        return model;\n      });\n      var edgeLabelModel = self.getModel('edgeLabel'); // For option `edgeLabel` can be found by label.xxx.xxx on item mode.\n\n      var fakeSeriesModel = new Model({\n        label: edgeLabelModel.option\n      }, edgeLabelModel.parentModel, ecModel);\n      edgeData.wrapMethod('getItemModel', function (model) {\n        model.customizeGetParent(edgeGetParent);\n        return model;\n      });\n\n      function edgeGetParent(path) {\n        path = this.parsePath(path);\n        return path && path[0] === 'label' ? fakeSeriesModel : this.parentModel;\n      }\n    }\n  },\n\n  /**\n   * @return {module:echarts/data/Graph}\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @return {module:echarts/data/List}\n   */\n  getCategoriesData: function () {\n    return this._categoriesData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    if (dataType === 'edge') {\n      var nodeData = this.getData();\n      var params = this.getDataParams(dataIndex, dataType);\n      var edge = nodeData.graph.getEdgeByIndex(dataIndex);\n      var sourceName = nodeData.getName(edge.node1.dataIndex);\n      var targetName = nodeData.getName(edge.node2.dataIndex);\n      var html = [];\n      sourceName != null && html.push(sourceName);\n      targetName != null && html.push(targetName);\n      html = encodeHTML(html.join(' > '));\n\n      if (params.value) {\n        html += ' : ' + encodeHTML(params.value);\n      }\n\n      return html;\n    } else {\n      // dataType === 'node' or empty\n      return GraphSeries.superApply(this, 'formatTooltip', arguments);\n    }\n  },\n  _updateCategoriesData: function () {\n    var categories = zrUtil.map(this.option.categories || [], function (category) {\n      // Data must has value\n      return category.value != null ? category : zrUtil.extend({\n        value: 0\n      }, category);\n    });\n    var categoriesData = new List(['value'], this);\n    categoriesData.initData(categories);\n    this._categoriesData = categoriesData;\n    this._categoriesModels = categoriesData.mapArray(function (idx) {\n      return categoriesData.getItemModel(idx, true);\n    });\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  },\n  isAnimationEnabled: function () {\n    return GraphSeries.superCall(this, 'isAnimationEnabled') // Not enable animation when do force layout\n    && !(this.get('layout') === 'force' && this.get('force.layoutAnimation'));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // Default option for all coordinate systems\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // geoIndex: 0,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    layout: null,\n    focusNodeAdjacency: false,\n    // Configuration of circular layout\n    circular: {\n      rotateLabel: false\n    },\n    // Configuration of force directed layout\n    force: {\n      initLayout: null,\n      // Node repulsion. Can be an array to represent range.\n      repulsion: [0, 50],\n      gravity: 0.1,\n      // Edge length. Can be an array to represent range.\n      edgeLength: 30,\n      layoutAnimation: true\n    },\n    left: 'center',\n    top: 'center',\n    // right: null,\n    // bottom: null,\n    // width: '80%',\n    // height: '80%',\n    symbol: 'circle',\n    symbolSize: 10,\n    edgeSymbol: ['none', 'none'],\n    edgeSymbolSize: 10,\n    edgeLabel: {\n      normal: {\n        position: 'middle'\n      },\n      emphasis: {}\n    },\n    draggable: false,\n    roam: false,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.6,\n    // cursor: null,\n    // categories: [],\n    // data: []\n    // Or\n    // nodes: []\n    //\n    // links: []\n    // Or\n    // edges: []\n    label: {\n      normal: {\n        show: false,\n        formatter: '{b}'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    lineStyle: {\n      normal: {\n        color: '#aaa',\n        width: 1,\n        curveness: 0,\n        opacity: 0.5\n      },\n      emphasis: {}\n    }\n  }\n});\nvar _default = GraphSeries;\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * Graph data structure\n *\n * @module echarts/data/Graph\n * @author Yi Shen(https://www.github.com/pissang)\n */\n// id may be function name of Object, add a prefix to avoid this problem.\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function (directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id || '' + dataIndex;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!(n1 instanceof Node)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!(n2 instanceof Node)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (n1 instanceof Node) {\n    n1 = n1.id;\n  }\n\n  if (n2 instanceof Node) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!(startNode instanceof Node)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function () {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function () {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function () {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function (hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function (dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function (key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function (key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function (layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function () {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function () {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function () {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nvar _default = Graph;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar adjustEdge = require(\"./adjustEdge\");\n\nvar nodeOpacityPath = ['itemStyle', 'normal', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.highlight && el.highlight();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nvar _default = echarts.extendChartView({\n  type: 'graph',\n  init: function (ecModel, api) {\n    var symbolDraw = new SymbolDraw();\n    var lineDraw = new LineDraw();\n    var group = this.group;\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: group\n    };\n    group.add(symbolDraw.group);\n    group.add(lineDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineDraw = lineDraw;\n    this._firstRender = true;\n  },\n  render: function (seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    this._model = seriesModel;\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n    var symbolDraw = this._symbolDraw;\n    var lineDraw = this._lineDraw;\n    var group = this.group;\n\n    if (coordSys.type === 'view') {\n      var groupNewProp = {\n        position: coordSys.position,\n        scale: coordSys.scale\n      };\n\n      if (this._firstRender) {\n        group.attr(groupNewProp);\n      } else {\n        graphic.updateProps(group, groupNewProp, seriesModel);\n      }\n    } // Fix edge contact point with node\n\n\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n    var data = seriesModel.getData();\n    symbolDraw.updateData(data);\n    var edgeData = seriesModel.getEdgeData();\n    lineDraw.updateData(edgeData);\n\n    this._updateNodeAndLinkScale();\n\n    this._updateController(seriesModel, ecModel, api);\n\n    clearTimeout(this._layoutTimeout);\n    var forceLayout = seriesModel.forceLayout;\n    var layoutAnimation = seriesModel.get('force.layoutAnimation');\n\n    if (forceLayout) {\n      this._startForceLayoutIteration(forceLayout, layoutAnimation);\n    }\n\n    data.eachItemGraphicEl(function (el, idx) {\n      var itemModel = data.getItemModel(idx); // Update draggable\n\n      el.off('drag').off('dragend');\n      var draggable = data.getItemModel(idx).get('draggable');\n\n      if (draggable) {\n        el.on('drag', function () {\n          if (forceLayout) {\n            forceLayout.warmUp();\n            !this._layouting && this._startForceLayoutIteration(forceLayout, layoutAnimation);\n            forceLayout.setFixed(idx); // Write position back to layout\n\n            data.setItemLayout(idx, el.position);\n          }\n        }, this).on('dragend', function () {\n          if (forceLayout) {\n            forceLayout.setUnfixed(idx);\n          }\n        }, this);\n      }\n\n      el.setDraggable(draggable && forceLayout);\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            dataIndex: el.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    }, this);\n    data.graph.eachEdge(function (edge) {\n      var el = edge.getGraphicEl();\n      el.off('mouseover', el.__focusNodeAdjacency);\n      el.off('mouseout', el.__unfocusNodeAdjacency);\n\n      if (edge.getModel().get('focusNodeAdjacency')) {\n        el.on('mouseover', el.__focusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'focusNodeAdjacency',\n            seriesId: seriesModel.id,\n            edgeDataIndex: edge.dataIndex\n          });\n        });\n        el.on('mouseout', el.__unfocusNodeAdjacency = function () {\n          api.dispatchAction({\n            type: 'unfocusNodeAdjacency',\n            seriesId: seriesModel.id\n          });\n        });\n      }\n    });\n    var circularRotateLabel = seriesModel.get('layout') === 'circular' && seriesModel.get('circular.rotateLabel');\n    var cx = data.getLayout('cx');\n    var cy = data.getLayout('cy');\n    data.eachItemGraphicEl(function (el, idx) {\n      var symbolPath = el.getSymbolPath();\n\n      if (circularRotateLabel) {\n        var pos = data.getItemLayout(idx);\n        var rad = Math.atan2(pos[1] - cy, pos[0] - cx);\n\n        if (rad < 0) {\n          rad = Math.PI * 2 + rad;\n        }\n\n        var isLeft = pos[0] < cx;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n\n        var textPosition = isLeft ? 'left' : 'right';\n        symbolPath.setStyle({\n          textRotation: -rad,\n          textPosition: textPosition,\n          textOrigin: 'center'\n        });\n        symbolPath.hoverStyle && (symbolPath.hoverStyle.textPosition = textPosition);\n      } else {\n        symbolPath.setStyle({\n          textRotation: 0\n        });\n      }\n    });\n    this._firstRender = false;\n  },\n  dispose: function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  focusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var data = this._model.getData();\n\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var edgeDataIndex = payload.edgeDataIndex;\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n\n    if (!node && !edge) {\n      return;\n    }\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, nodeOpacityPath);\n      zrUtil.each(node.edges, function (adjacentEdge) {\n        if (adjacentEdge.dataIndex < 0) {\n          return;\n        }\n\n        fadeInItem(adjacentEdge, lineOpacityPath);\n        fadeInItem(adjacentEdge.node1, nodeOpacityPath);\n        fadeInItem(adjacentEdge.node2, nodeOpacityPath);\n      });\n    }\n\n    if (edge) {\n      fadeInItem(edge, lineOpacityPath);\n      fadeInItem(edge.node1, nodeOpacityPath);\n      fadeInItem(edge.node2, nodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function (seriesModel, ecModel, api, payload) {\n    var graph = this._model.getData().graph;\n\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  },\n  _startForceLayoutIteration: function (forceLayout, layoutAnimation) {\n    var self = this;\n\n    (function step() {\n      forceLayout.step(function (stopped) {\n        self.updateLayout(self._model);\n        (self._layouting = !stopped) && (layoutAnimation ? self._layoutTimeout = setTimeout(step, 16) : step());\n      });\n    })();\n  },\n  _updateController: function (seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n\n    if (seriesModel.coordinateSystem.type !== 'view') {\n      controller.disable();\n      return;\n    }\n\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (dx, dy) {\n      roamHelper.updateViewOnPan(controllerHost, dx, dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        dx: dx,\n        dy: dy\n      });\n    }).on('zoom', function (zoom, mouseX, mouseY) {\n      roamHelper.updateViewOnZoom(controllerHost, zoom, mouseX, mouseY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'graphRoam',\n        zoom: zoom,\n        originX: mouseX,\n        originY: mouseY\n      });\n\n      this._updateNodeAndLinkScale();\n\n      adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n      this._lineDraw.updateLayout();\n    }, this);\n  },\n  _updateNodeAndLinkScale: function () {\n    var seriesModel = this._model;\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  updateLayout: function (seriesModel) {\n    adjustEdge(seriesModel.getGraph(), this._getNodeGlobalScale(seriesModel));\n\n    this._symbolDraw.updateLayout();\n\n    this._lineDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove();\n    this._lineDraw && this._lineDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Line path for bezier and straight line draw\n */\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function (ctx, shape) {\n    (isLine(shape) ? straightLineProto : bezierCurveProto).buildPath(ctx, shape);\n  },\n  pointAt: function (t) {\n    return isLine(this.shape) ? straightLineProto.pointAt.call(this, t) : bezierCurveProto.pointAt.call(this, t);\n  },\n  tangentAt: function (t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : bezierCurveProto.tangentAt.call(this, t);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;","var curveTool = require(\"zrender/lib/core/curve\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar v1 = [];\nvar v2 = [];\nvar v3 = [];\nvar quadraticAt = curveTool.quadraticAt;\nvar v2DistSquare = vec2.distSquare;\nvar mathAbs = Math.abs;\n\nfunction intersectCurveCircle(curvePoints, center, radius) {\n  var p0 = curvePoints[0];\n  var p1 = curvePoints[1];\n  var p2 = curvePoints[2];\n  var d = Infinity;\n  var t;\n  var radiusSquare = radius * radius;\n  var interval = 0.1;\n\n  for (var _t = 0.1; _t <= 0.9; _t += 0.1) {\n    v1[0] = quadraticAt(p0[0], p1[0], p2[0], _t);\n    v1[1] = quadraticAt(p0[1], p1[1], p2[1], _t);\n    var diff = mathAbs(v2DistSquare(v1, center) - radiusSquare);\n\n    if (diff < d) {\n      d = diff;\n      t = _t;\n    }\n  } // Assume the segment is monotone，Find root through Bisection method\n  // At most 32 iteration\n\n\n  for (var i = 0; i < 32; i++) {\n    // var prev = t - interval;\n    var next = t + interval; // v1[0] = quadraticAt(p0[0], p1[0], p2[0], prev);\n    // v1[1] = quadraticAt(p0[1], p1[1], p2[1], prev);\n\n    v2[0] = quadraticAt(p0[0], p1[0], p2[0], t);\n    v2[1] = quadraticAt(p0[1], p1[1], p2[1], t);\n    v3[0] = quadraticAt(p0[0], p1[0], p2[0], next);\n    v3[1] = quadraticAt(p0[1], p1[1], p2[1], next);\n    var diff = v2DistSquare(v2, center) - radiusSquare;\n\n    if (mathAbs(diff) < 1e-2) {\n      break;\n    } // var prevDiff = v2DistSquare(v1, center) - radiusSquare;\n\n\n    var nextDiff = v2DistSquare(v3, center) - radiusSquare;\n    interval /= 2;\n\n    if (diff < 0) {\n      if (nextDiff >= 0) {\n        t = t + interval;\n      } else {\n        t = t - interval;\n      }\n    } else {\n      if (nextDiff >= 0) {\n        t = t - interval;\n      } else {\n        t = t + interval;\n      }\n    }\n  }\n\n  return t;\n} // Adjust edge to avoid\n\n\nfunction _default(graph, scale) {\n  var tmp0 = [];\n  var quadraticSubdivide = curveTool.quadraticSubdivide;\n  var pts = [[], [], []];\n  var pts2 = [[], []];\n  var v = [];\n  scale /= 2;\n\n  function getSymbolSize(node) {\n    var symbolSize = node.getVisual('symbolSize');\n\n    if (symbolSize instanceof Array) {\n      symbolSize = (symbolSize[0] + symbolSize[1]) / 2;\n    }\n\n    return symbolSize;\n  }\n\n  graph.eachEdge(function (edge, idx) {\n    var linePoints = edge.getLayout();\n    var fromSymbol = edge.getVisual('fromSymbol');\n    var toSymbol = edge.getVisual('toSymbol');\n\n    if (!linePoints.__original) {\n      linePoints.__original = [vec2.clone(linePoints[0]), vec2.clone(linePoints[1])];\n\n      if (linePoints[2]) {\n        linePoints.__original.push(vec2.clone(linePoints[2]));\n      }\n    }\n\n    var originalPoints = linePoints.__original; // Quadratic curve\n\n    if (linePoints[2] != null) {\n      vec2.copy(pts[0], originalPoints[0]);\n      vec2.copy(pts[1], originalPoints[2]);\n      vec2.copy(pts[2], originalPoints[1]);\n\n      if (fromSymbol && fromSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node1);\n        var t = intersectCurveCircle(pts, originalPoints[0], symbolSize * scale); // Subdivide and get the second\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[0][0] = tmp0[3];\n        pts[1][0] = tmp0[4];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[0][1] = tmp0[3];\n        pts[1][1] = tmp0[4];\n      }\n\n      if (toSymbol && toSymbol != 'none') {\n        var symbolSize = getSymbolSize(edge.node2);\n        var t = intersectCurveCircle(pts, originalPoints[1], symbolSize * scale); // Subdivide and get the first\n\n        quadraticSubdivide(pts[0][0], pts[1][0], pts[2][0], t, tmp0);\n        pts[1][0] = tmp0[1];\n        pts[2][0] = tmp0[2];\n        quadraticSubdivide(pts[0][1], pts[1][1], pts[2][1], t, tmp0);\n        pts[1][1] = tmp0[1];\n        pts[2][1] = tmp0[2];\n      } // Copy back to layout\n\n\n      vec2.copy(linePoints[0], pts[0]);\n      vec2.copy(linePoints[1], pts[2]);\n      vec2.copy(linePoints[2], pts[1]);\n    } // Line\n    else {\n        vec2.copy(pts2[0], originalPoints[0]);\n        vec2.copy(pts2[1], originalPoints[1]);\n        vec2.sub(v, pts2[1], pts2[0]);\n        vec2.normalize(v, v);\n\n        if (fromSymbol && fromSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node1);\n          vec2.scaleAndAdd(pts2[0], pts2[0], v, symbolSize * scale);\n        }\n\n        if (toSymbol && toSymbol != 'none') {\n          var symbolSize = getSymbolSize(edge.node2);\n          vec2.scaleAndAdd(pts2[1], pts2[1], v, -symbolSize * scale);\n        }\n\n        vec2.copy(linePoints[0], pts2[0]);\n        vec2.copy(linePoints[1], pts2[1]);\n      }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\nvar actionInfo = {\n  type: 'graphRoam',\n  event: 'graphRoam',\n  update: 'none'\n};\n/**\n * @payload\n * @property {string} name Series name\n * @property {number} [dx]\n * @property {number} [dy]\n * @property {number} [zoom]\n * @property {number} [originX]\n * @property {number} [originY]\n */\n\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series.graph:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series.graph:unfocusNodeAdjacency'\n}, function () {});","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (!legendModels || !legendModels.length) {\n    return;\n  }\n\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var categoriesData = graphSeries.getCategoriesData();\n    var graph = graphSeries.getGraph();\n    var data = graph.data;\n    var categoryNames = categoriesData.mapArray(categoriesData.getName);\n    data.filterSelf(function (idx) {\n      var model = data.getItemModel(idx);\n      var category = model.getShallow('category');\n\n      if (category != null) {\n        if (typeof category === 'number') {\n          category = categoryNames[category];\n        } // If in any legend component the status is not selected.\n\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(category)) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    });\n  }, this);\n}\n\nmodule.exports = _default;","function _default(ecModel) {\n  var paletteScope = {};\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var categoriesData = seriesModel.getCategoriesData();\n    var data = seriesModel.getData();\n    var categoryNameIdxMap = {};\n    categoriesData.each(function (idx) {\n      var name = categoriesData.getName(idx); // Add prefix to avoid conflict with Object.prototype.\n\n      categoryNameIdxMap['ec-' + name] = idx;\n      var itemModel = categoriesData.getItemModel(idx);\n      var color = itemModel.get('itemStyle.normal.color') || seriesModel.getColorFromPalette(name, paletteScope);\n      categoriesData.setItemVisual(idx, 'color', color);\n    }); // Assign category color to visual\n\n    if (categoriesData.count()) {\n      data.each(function (idx) {\n        var model = data.getItemModel(idx);\n        var category = model.getShallow('category');\n\n        if (category != null) {\n          if (typeof category === 'string') {\n            category = categoryNameIdxMap['ec-' + category];\n          }\n\n          if (!data.getItemVisual(idx, 'color', true)) {\n            data.setItemVisual(idx, 'color', categoriesData.getItemVisual(category, 'color'));\n          }\n        }\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    var colorQuery = 'lineStyle.normal.color'.split('.');\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('color', seriesModel.get(colorQuery));\n    edgeData.setVisual('opacity', seriesModel.get(opacityQuery));\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true)); // Edge visual must after node visual\n\n      var color = itemModel.get(colorQuery);\n      var opacity = itemModel.get(opacityQuery);\n\n      switch (color) {\n        case 'source':\n          color = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          color = edge.node2.getVisual('color');\n          break;\n      }\n\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n      edge.setVisual('color', color);\n      edge.setVisual('opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","var _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\nvar simpleLayoutEdge = _simpleLayoutHelper.simpleLayoutEdge;\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var layout = seriesModel.get('layout');\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      var data = seriesModel.getData();\n      var dimensions = coordSys.dimensions;\n      data.each(dimensions, function () {\n        var hasValue;\n        var args = arguments;\n        var value = [];\n\n        for (var i = 0; i < dimensions.length; i++) {\n          if (!isNaN(args[i])) {\n            hasValue = true;\n          }\n\n          value.push(args[i]);\n        }\n\n        var idx = args[args.length - 1];\n\n        if (hasValue) {\n          data.setItemLayout(idx, coordSys.dataToPoint(value));\n        } else {\n          // Also {Array.<number>}, not undefined to avoid if...else... statement\n          data.setItemLayout(idx, [NaN, NaN]);\n        }\n      });\n      simpleLayoutEdge(data.graph);\n    } else if (!layout || layout === 'none') {\n      simpleLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    if (seriesModel.get('layout') === 'circular') {\n      circularLayout(seriesModel);\n    }\n  });\n}\n\nmodule.exports = _default;","var _forceHelper = require(\"./forceHelper\");\n\nvar forceLayout = _forceHelper.forceLayout;\n\nvar _simpleLayoutHelper = require(\"./simpleLayoutHelper\");\n\nvar simpleLayout = _simpleLayoutHelper.simpleLayout;\n\nvar _circularLayoutHelper = require(\"./circularLayoutHelper\");\n\nvar circularLayout = _circularLayoutHelper.circularLayout;\n\nvar _number = require(\"../../util/number\");\n\nvar linearMap = _number.linearMap;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('graph', function (graphSeries) {\n    var coordSys = graphSeries.coordinateSystem;\n\n    if (coordSys && coordSys.type !== 'view') {\n      return;\n    }\n\n    if (graphSeries.get('layout') === 'force') {\n      var preservedPoints = graphSeries.preservedPoints || {};\n      var graph = graphSeries.getGraph();\n      var nodeData = graph.data;\n      var edgeData = graph.edgeData;\n      var forceModel = graphSeries.getModel('force');\n      var initLayout = forceModel.get('initLayout');\n\n      if (graphSeries.preservedPoints) {\n        nodeData.each(function (idx) {\n          var id = nodeData.getId(idx);\n          nodeData.setItemLayout(idx, preservedPoints[id] || [NaN, NaN]);\n        });\n      } else if (!initLayout || initLayout === 'none') {\n        simpleLayout(graphSeries);\n      } else if (initLayout === 'circular') {\n        circularLayout(graphSeries);\n      }\n\n      var nodeDataExtent = nodeData.getDataExtent('value');\n      var edgeDataExtent = edgeData.getDataExtent('value'); // var edgeDataExtent = edgeData.getDataExtent('value');\n\n      var repulsion = forceModel.get('repulsion');\n      var edgeLength = forceModel.get('edgeLength');\n\n      if (!zrUtil.isArray(repulsion)) {\n        repulsion = [repulsion, repulsion];\n      }\n\n      if (!zrUtil.isArray(edgeLength)) {\n        edgeLength = [edgeLength, edgeLength];\n      } // Larger value has smaller length\n\n\n      edgeLength = [edgeLength[1], edgeLength[0]];\n      var nodes = nodeData.mapArray('value', function (value, idx) {\n        var point = nodeData.getItemLayout(idx);\n        var rep = linearMap(value, nodeDataExtent, repulsion);\n\n        if (isNaN(rep)) {\n          rep = (repulsion[0] + repulsion[1]) / 2;\n        }\n\n        return {\n          w: rep,\n          rep: rep,\n          fixed: nodeData.getItemModel(idx).get('fixed'),\n          p: !point || isNaN(point[0]) || isNaN(point[1]) ? null : point\n        };\n      });\n      var edges = edgeData.mapArray('value', function (value, idx) {\n        var edge = graph.getEdgeByIndex(idx);\n        var d = linearMap(value, edgeDataExtent, edgeLength);\n\n        if (isNaN(d)) {\n          d = (edgeLength[0] + edgeLength[1]) / 2;\n        }\n\n        return {\n          n1: nodes[edge.node1.dataIndex],\n          n2: nodes[edge.node2.dataIndex],\n          d: d,\n          curveness: edge.getModel().get('lineStyle.normal.curveness') || 0\n        };\n      });\n      var coordSys = graphSeries.coordinateSystem;\n      var rect = coordSys.getBoundingRect();\n      var forceInstance = forceLayout(nodes, edges, {\n        rect: rect,\n        gravity: forceModel.get('gravity')\n      });\n      var oldStep = forceInstance.step;\n\n      forceInstance.step = function (cb) {\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          if (nodes[i].fixed) {\n            // Write back to layout instance\n            vec2.copy(nodes[i].p, graph.getNodeByIndex(i).getLayout());\n          }\n        }\n\n        oldStep(function (nodes, edges, stopped) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            if (!nodes[i].fixed) {\n              graph.getNodeByIndex(i).setLayout(nodes[i].p);\n            }\n\n            preservedPoints[nodeData.getId(i)] = nodes[i].p;\n          }\n\n          for (var i = 0, l = edges.length; i < l; i++) {\n            var e = edges[i];\n            var edge = graph.getEdgeByIndex(i);\n            var p1 = e.n1.p;\n            var p2 = e.n2.p;\n            var points = edge.getLayout();\n            points = points ? points.slice() : [];\n            points[0] = points[0] || [];\n            points[1] = points[1] || [];\n            vec2.copy(points[0], p1);\n            vec2.copy(points[1], p2);\n\n            if (+e.curveness) {\n              points[2] = [(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * e.curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * e.curveness];\n            }\n\n            edge.setLayout(points);\n          } // Update layout\n\n\n          cb && cb(stopped);\n        });\n      };\n\n      graphSeries.forceLayout = forceInstance;\n      graphSeries.preservedPoints = preservedPoints; // Step to get the layout\n\n      forceInstance.step();\n    } else {\n      // Remove prev injected forceLayout instance\n      graphSeries.forceLayout = null;\n    }\n  });\n}\n\nmodule.exports = _default;","var vec2 = require(\"zrender/lib/core/vector\");\n\nvar scaleAndAdd = vec2.scaleAndAdd; // function adjacentNode(n, e) {\n//     return e.n1 === n ? e.n2 : e.n1;\n// }\n\nfunction forceLayout(nodes, edges, opts) {\n  var rect = opts.rect;\n  var width = rect.width;\n  var height = rect.height;\n  var center = [rect.x + width / 2, rect.y + height / 2]; // var scale = opts.scale || 1;\n\n  var gravity = opts.gravity == null ? 0.1 : opts.gravity; // for (var i = 0; i < edges.length; i++) {\n  //     var e = edges[i];\n  //     var n1 = e.n1;\n  //     var n2 = e.n2;\n  //     n1.edges = n1.edges || [];\n  //     n2.edges = n2.edges || [];\n  //     n1.edges.push(e);\n  //     n2.edges.push(e);\n  // }\n  // Init position\n\n  for (var i = 0; i < nodes.length; i++) {\n    var n = nodes[i];\n\n    if (!n.p) {\n      // Use the position from first adjecent node with defined position\n      // Or use a random position\n      // From d3\n      // if (n.edges) {\n      //     var j = -1;\n      //     while (++j < n.edges.length) {\n      //         var e = n.edges[j];\n      //         var other = adjacentNode(n, e);\n      //         if (other.p) {\n      //             n.p = vec2.clone(other.p);\n      //             break;\n      //         }\n      //     }\n      // }\n      // if (!n.p) {\n      n.p = vec2.create(width * (Math.random() - 0.5) + center[0], height * (Math.random() - 0.5) + center[1]); // }\n    }\n\n    n.pp = vec2.clone(n.p);\n    n.edges = null;\n  } // Formula in 'Graph Drawing by Force-directed Placement'\n  // var k = scale * Math.sqrt(width * height / nodes.length);\n  // var k2 = k * k;\n\n\n  var friction = 0.6;\n  return {\n    warmUp: function () {\n      friction = 0.5;\n    },\n    setFixed: function (idx) {\n      nodes[idx].fixed = true;\n    },\n    setUnfixed: function (idx) {\n      nodes[idx].fixed = false;\n    },\n    step: function (cb) {\n      var v12 = [];\n      var nLen = nodes.length;\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var n1 = e.n1;\n        var n2 = e.n2;\n        vec2.sub(v12, n2.p, n1.p);\n        var d = vec2.len(v12) - e.d;\n        var w = n2.w / (n1.w + n2.w);\n\n        if (isNaN(w)) {\n          w = 0;\n        }\n\n        vec2.normalize(v12, v12);\n        !n1.fixed && scaleAndAdd(n1.p, n1.p, v12, w * d * friction);\n        !n2.fixed && scaleAndAdd(n2.p, n2.p, v12, -(1 - w) * d * friction);\n      } // Gravity\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v12, center, n.p); // var d = vec2.len(v12);\n          // vec2.scale(v12, v12, 1 / d);\n          // var gravityFactor = gravity;\n\n          scaleAndAdd(n.p, n.p, v12, gravity * friction);\n        }\n      } // Repulsive\n      // PENDING\n\n\n      for (var i = 0; i < nLen; i++) {\n        var n1 = nodes[i];\n\n        for (var j = i + 1; j < nLen; j++) {\n          var n2 = nodes[j];\n          vec2.sub(v12, n2.p, n1.p);\n          var d = vec2.len(v12);\n\n          if (d === 0) {\n            // Random repulse\n            vec2.set(v12, Math.random() - 0.5, Math.random() - 0.5);\n            d = 1;\n          }\n\n          var repFact = (n1.rep + n2.rep) / d / d;\n          !n1.fixed && scaleAndAdd(n1.pp, n1.pp, v12, repFact);\n          !n2.fixed && scaleAndAdd(n2.pp, n2.pp, v12, -repFact);\n        }\n      }\n\n      var v = [];\n\n      for (var i = 0; i < nLen; i++) {\n        var n = nodes[i];\n\n        if (!n.fixed) {\n          vec2.sub(v, n.p, n.pp);\n          scaleAndAdd(n.p, n.p, v, friction);\n          vec2.copy(n.pp, n.p);\n        }\n      }\n\n      friction = friction * 0.992;\n      cb && cb(nodes, edges, friction < 0.01);\n    }\n  };\n}\n\nexports.forceLayout = forceLayout;","var View = require(\"../../coord/View\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\n// FIXME Where to create the simple view coordinate system\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = seriesModel.getBoxLayoutParams();\n  option.aspect = aspect;\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data = seriesModel.getData();\n      var positions = data.mapArray(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}\n\nmodule.exports = _default;","require(\"./gauge/GaugeSeries\");\n\nrequire(\"./gauge/GaugeView\");","var List = require(\"../../data/List\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar GaugeSeries = SeriesModel.extend({\n  type: 'series.gauge',\n  getInitialData: function (option, ecModel) {\n    var list = new List(['value'], this);\n    var dataOpt = option.data || [];\n\n    if (!zrUtil.isArray(dataOpt)) {\n      dataOpt = [dataOpt];\n    } // Only use the first data item\n\n\n    list.initData(dataOpt);\n    return list;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      lineStyle: {\n        // 属性lineStyle控制线条样式\n        color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n        width: 30\n      }\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 30,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 2,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 8,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#eee',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 5,\n      // formatter: null,\n      color: 'auto'\n    },\n    pointer: {\n      show: true,\n      length: '80%',\n      width: 8\n    },\n    itemStyle: {\n      normal: {\n        color: 'auto'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '-40%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#333',\n      fontSize: 15\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      // self-adaption\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: 'auto',\n      fontSize: 30\n    }\n  }\n});\nvar _default = GaugeSeries;\nmodule.exports = _default;","var PointerPath = require(\"./PointerPath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar round = _number.round;\nvar linearMap = _number.linearMap;\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(label, labelFormatter) {\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label != null ? label : '');\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(label);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\nvar GaugeView = ChartView.extend({\n  type: 'gauge',\n  render: function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get('axisLine.lineStyle.color');\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n  },\n  dispose: function () {},\n  _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var angleRangeSpan = (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n    var axisLineWidth = lineStyleModel.get('width');\n\n    for (var i = 0; i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      var endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new graphic.Sector({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'borderWidth', 'borderColor']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      for (var i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise);\n\n    this._renderTitle(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderDetail(seriesModel, ecModel, api, getColor, posInfo);\n  },\n  _renderTicks: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n\n    for (var i = 0; i <= splitNumber; i++) {\n      var unitX = Math.cos(angle);\n      var unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * r + cx,\n            y1: unitY * r + cy,\n            x2: unitX * (r - splitLineLen) + cx,\n            y2: unitY * (r - splitLineLen) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var distance = labelModel.get('distance');\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: graphic.setTextStyle({}, labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            textVerticalAlign: unitY < -0.4 ? 'top' : unitY > 0.4 ? 'bottom' : 'middle',\n            textAlign: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            autoColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        for (var j = 0; j <= subSplitNumber; j++) {\n          var unitX = Math.cos(angle);\n          var unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * r + cx,\n              y1: unitY * r + cy,\n              x2: unitX * (r - tickLen) + cx,\n              y2: unitY * (r - tickLen) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  },\n  _renderPointer: function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise) {\n    var group = this.group;\n    var oldData = this._data;\n\n    if (!seriesModel.get('pointer.show')) {\n      // Remove old element\n      oldData && oldData.eachItemGraphicEl(function (el) {\n        group.remove(el);\n      });\n      return;\n    }\n\n    var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n    var angleExtent = [startAngle, endAngle];\n    var data = seriesModel.getData();\n    data.diff(oldData).add(function (idx) {\n      var pointer = new PointerPath({\n        shape: {\n          angle: startAngle\n        }\n      });\n      graphic.initProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(idx, pointer);\n    }).update(function (newIdx, oldIdx) {\n      var pointer = oldData.getItemGraphicEl(oldIdx);\n      graphic.updateProps(pointer, {\n        shape: {\n          angle: linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n        }\n      }, seriesModel);\n      group.add(pointer);\n      data.setItemGraphicEl(newIdx, pointer);\n    }).remove(function (idx) {\n      var pointer = oldData.getItemGraphicEl(idx);\n      group.remove(pointer);\n    }).execute();\n    data.eachItemGraphicEl(function (pointer, idx) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      pointer.setShape({\n        x: posInfo.cx,\n        y: posInfo.cy,\n        width: parsePercent(pointerModel.get('width'), posInfo.r),\n        r: parsePercent(pointerModel.get('length'), posInfo.r)\n      });\n      pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n      if (pointer.style.fill === 'auto') {\n        pointer.setStyle('fill', getColor(linearMap(data.get('value', idx), valueExtent, [0, 1], true)));\n      }\n\n      graphic.setHoverStyle(pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle());\n    });\n    this._data = data;\n  },\n  _renderTitle: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var titleModel = seriesModel.getModel('title');\n\n    if (titleModel.get('show')) {\n      var offsetCenter = titleModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var minVal = +seriesModel.get('min');\n      var maxVal = +seriesModel.get('max');\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, titleModel, {\n          x: x,\n          y: y,\n          // FIXME First data name ?\n          text: seriesModel.getData().getName(0),\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  },\n  _renderDetail: function (seriesModel, ecModel, api, getColor, posInfo) {\n    var detailModel = seriesModel.getModel('detail');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n\n    if (detailModel.get('show')) {\n      var offsetCenter = detailModel.get('offsetCenter');\n      var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n      var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n      var width = parsePercent(detailModel.get('width'), posInfo.r);\n      var height = parsePercent(detailModel.get('height'), posInfo.r);\n      var value = seriesModel.getData().get('value', 0);\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      this.group.add(new graphic.Text({\n        silent: true,\n        style: graphic.setTextStyle({}, detailModel, {\n          x: x,\n          y: y,\n          text: formatLabel( // FIXME First data name ?\n          value, detailModel.get('formatter')),\n          textWidth: isNaN(width) ? null : width,\n          textHeight: isNaN(height) ? null : height,\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        }, {\n          autoColor: autoColor,\n          forceRich: true\n        })\n      }));\n    }\n  }\n});\nvar _default = GaugeView;\nmodule.exports = _default;","var Path = require(\"zrender/lib/graphic/Path\");\n\nvar _default = Path.extend({\n  type: 'echartsGaugePointer',\n  shape: {\n    angle: 0,\n    width: 10,\n    r: 10,\n    x: 0,\n    y: 0\n  },\n  buildPath: function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n    return;\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./funnel/FunnelSeries\");\n\nrequire(\"./funnel/FunnelView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar funnelLayout = require(\"./funnel/funnelLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerVisual(zrUtil.curry(dataColor, 'funnel'));\necharts.registerLayout(funnelLayout);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'funnel'));","var echarts = require(\"../../echarts\");\n\nvar List = require(\"../../data/List\");\n\nvar _model = require(\"../../util/model\");\n\nvar defaultEmphasis = _model.defaultEmphasis;\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar FunnelSeries = echarts.extendSeriesModel({\n  type: 'series.funnel',\n  init: function (option) {\n    FunnelSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    }; // Extend labelLine emphasis\n\n\n    this._defaultLabelLine(option);\n  },\n  getInitialData: function (option, ecModel) {\n    var dimensions = completeDimensions(['value'], option.data);\n    var list = new List(dimensions, this);\n    list.initData(option.data);\n    return list;\n  },\n  _defaultLabelLine: function (option) {\n    // Extend labelLine emphasis\n    defaultEmphasis(option.labelLine, ['show']);\n    var labelLineNormalOpt = option.labelLine.normal;\n    var labelLineEmphasisOpt = option.labelLine.emphasis; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.normal.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.label.emphasis.show;\n  },\n  // Overwrite\n  getDataParams: function (dataIndex) {\n    var data = this.getData();\n    var params = FunnelSeries.superCall(this, 'getDataParams', dataIndex);\n    var sum = data.getSum('value'); // Percent is 0 if sum is 0\n\n    params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n    params.$vars.push('percent');\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    legendHoverLink: true,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    // 默认取数据最小最大值\n    // min: 0,\n    // max: 100,\n    minSize: '0%',\n    maxSize: '100%',\n    sort: 'descending',\n    // 'ascending', 'descending'\n    gap: 0,\n    funnelAlign: 'center',\n    label: {\n      normal: {\n        show: true,\n        position: 'outer' // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    labelLine: {\n      normal: {\n        show: true,\n        length: 20,\n        lineStyle: {\n          // color: 各异,\n          width: 1,\n          type: 'solid'\n        }\n      },\n      emphasis: {}\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {// color: 各异,\n      }\n    }\n  }\n});\nvar _default = FunnelSeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\nfunction FunnelPiece(data, idx) {\n  graphic.Group.call(this);\n  var polygon = new graphic.Polygon();\n  var labelLine = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(polygon);\n  this.add(labelLine);\n  this.add(text);\n  this.updateData(data, idx, true); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    labelLine.ignore = labelLine.hoverIgnore;\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    labelLine.ignore = labelLine.normalIgnore;\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar funnelPieceProto = FunnelPiece.prototype;\nvar opacityAccessPath = ['itemStyle', 'normal', 'opacity'];\n\nfunnelPieceProto.updateData = function (data, idx, firstCreate) {\n  var polygon = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var opacity = data.getItemModel(idx).get(opacityAccessPath);\n  opacity = opacity == null ? 1 : opacity; // Reset style\n\n  polygon.useStyle({});\n\n  if (firstCreate) {\n    polygon.setShape({\n      points: layout.points\n    });\n    polygon.setStyle({\n      opacity: 0\n    });\n    graphic.initProps(polygon, {\n      style: {\n        opacity: opacity\n      }\n    }, seriesModel, idx);\n  } else {\n    graphic.updateProps(polygon, {\n      style: {\n        opacity: opacity\n      },\n      shape: {\n        points: layout.points\n      }\n    }, seriesModel, idx);\n  } // Update common style\n\n\n  var itemStyleModel = itemModel.getModel('itemStyle');\n  var visualColor = data.getItemVisual(idx, 'color');\n  polygon.setStyle(zrUtil.defaults({\n    lineJoin: 'round',\n    fill: visualColor\n  }, itemStyleModel.getModel('normal').getItemStyle(['opacity'])));\n  polygon.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n  this._updateLabel(data, idx);\n\n  graphic.setHoverStyle(this);\n};\n\nfunnelPieceProto._updateLabel = function (data, idx) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.updateProps(labelLine, {\n    shape: {\n      points: labelLayout.linePoints || labelLayout.linePoints\n    }\n  }, seriesModel, idx);\n  graphic.updateProps(labelText, {\n    style: {\n      x: labelLayout.x,\n      y: labelLayout.y\n    }\n  }, seriesModel, idx);\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label.normal');\n  var labelHoverModel = itemModel.getModel('label.emphasis');\n  var labelLineModel = itemModel.getModel('labelLine.normal');\n  var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: data.getName(idx),\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n};\n\nzrUtil.inherits(FunnelPiece, graphic.Group);\nvar FunnelView = ChartView.extend({\n  type: 'funnel',\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    data.diff(oldData).add(function (idx) {\n      var funnelPiece = new FunnelPiece(data, idx);\n      data.setItemGraphicEl(idx, funnelPiece);\n      group.add(funnelPiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n      piePiece.updateData(data, newIdx);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n    this._data = data;\n  },\n  remove: function () {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function () {}\n});\nvar _default = FunnelView;\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction getSortedIndices(data, sort) {\n  var valueArr = data.mapArray('value', function (val) {\n    return val;\n  });\n  var indices = [];\n  var isAscending = sort === 'ascending';\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    indices[i] = i;\n  } // Add custom sortable function & none sortable opetion by \"options.sort\"\n\n\n  if (typeof sort === 'function') {\n    indices.sort(sort);\n  } else if (sort !== 'none') {\n    indices.sort(function (a, b) {\n      return isAscending ? valueArr[a] - valueArr[b] : valueArr[b] - valueArr[a];\n    });\n  }\n\n  return indices;\n}\n\nfunction labelLayout(data) {\n  data.each(function (idx) {\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label.normal');\n    var labelPosition = labelModel.get('position');\n    var labelLineModel = itemModel.getModel('labelLine.normal');\n    var layout = data.getItemLayout(idx);\n    var points = layout.points;\n    var isLabelInside = labelPosition === 'inner' || labelPosition === 'inside' || labelPosition === 'center';\n    var textAlign;\n    var textX;\n    var textY;\n    var linePoints;\n\n    if (isLabelInside) {\n      textX = (points[0][0] + points[1][0] + points[2][0] + points[3][0]) / 4;\n      textY = (points[0][1] + points[1][1] + points[2][1] + points[3][1]) / 4;\n      textAlign = 'center';\n      linePoints = [[textX, textY], [textX, textY]];\n    } else {\n      var x1;\n      var y1;\n      var x2;\n      var labelLineLen = labelLineModel.get('length');\n\n      if (labelPosition === 'left') {\n        // Left side\n        x1 = (points[3][0] + points[0][0]) / 2;\n        y1 = (points[3][1] + points[0][1]) / 2;\n        x2 = x1 - labelLineLen;\n        textX = x2 - 5;\n        textAlign = 'right';\n      } else {\n        // Right side\n        x1 = (points[1][0] + points[2][0]) / 2;\n        y1 = (points[1][1] + points[2][1]) / 2;\n        x2 = x1 + labelLineLen;\n        textX = x2 + 5;\n        textAlign = 'left';\n      }\n\n      var y2 = y1;\n      linePoints = [[x1, y1], [x2, y2]];\n      textY = y2;\n    }\n\n    layout.label = {\n      linePoints: linePoints,\n      x: textX,\n      y: textY,\n      verticalAlign: 'middle',\n      textAlign: textAlign,\n      inside: isLabelInside\n    };\n  });\n}\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('funnel', function (seriesModel) {\n    var data = seriesModel.getData();\n    var sort = seriesModel.get('sort');\n    var viewRect = getViewRect(seriesModel, api);\n    var indices = getSortedIndices(data, sort);\n    var sizeExtent = [parsePercent(seriesModel.get('minSize'), viewRect.width), parsePercent(seriesModel.get('maxSize'), viewRect.width)];\n    var dataExtent = data.getDataExtent('value');\n    var min = seriesModel.get('min');\n    var max = seriesModel.get('max');\n\n    if (min == null) {\n      min = Math.min(dataExtent[0], 0);\n    }\n\n    if (max == null) {\n      max = dataExtent[1];\n    }\n\n    var funnelAlign = seriesModel.get('funnelAlign');\n    var gap = seriesModel.get('gap');\n    var itemHeight = (viewRect.height - gap * (data.count() - 1)) / data.count();\n    var y = viewRect.y;\n\n    var getLinePoints = function (idx, offY) {\n      // End point index is data.count() and we assign it 0\n      var val = data.get('value', idx) || 0;\n      var itemWidth = linearMap(val, [min, max], sizeExtent, true);\n      var x0;\n\n      switch (funnelAlign) {\n        case 'left':\n          x0 = viewRect.x;\n          break;\n\n        case 'center':\n          x0 = viewRect.x + (viewRect.width - itemWidth) / 2;\n          break;\n\n        case 'right':\n          x0 = viewRect.x + viewRect.width - itemWidth;\n          break;\n      }\n\n      return [[x0, offY], [x0 + itemWidth, offY]];\n    };\n\n    if (sort === 'ascending') {\n      // From bottom to top\n      itemHeight = -itemHeight;\n      gap = -gap;\n      y += viewRect.height;\n      indices = indices.reverse();\n    }\n\n    for (var i = 0; i < indices.length; i++) {\n      var idx = indices[i];\n      var nextIdx = indices[i + 1];\n      var start = getLinePoints(idx, y);\n      var end = getLinePoints(nextIdx, y + itemHeight);\n      y += itemHeight + gap;\n      data.setItemLayout(idx, {\n        points: start.concat(end.slice().reverse())\n      });\n    }\n\n    labelLayout(data);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n\necharts.registerVisual(parallelVisual);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function (parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function () {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function (parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, dim);\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function (parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function () {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function () {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1,\n        labelInterval: axes.get(dim).getLabelInterval()\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function (dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function (value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {Object} context\n   */\n  eachActiveState: function (data, callback, context) {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var values = data.getValues(dimensions, i);\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var dimName = dimensions[j];\n          var state = axesMap.get(dimName).model.getActiveState(values[j], j);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback.call(context, activeState, i);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function () {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function (coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function (dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function (point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\nvar ParallelAxis = function (dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function () {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function () {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function (model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function (opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function () {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function () {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function (intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function (value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null) {\n      return 'inactive';\n    }\n\n    for (var i = 0, len = activeIntervals.length; i < len; i++) {\n      if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n        return 'active';\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","require(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","var echarts = require(\"../../echarts\");\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected',\n  update: 'updateVisual'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function (axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n\n  /**\n   * @override\n   */\n  updateVisual: function (axisModel, ecModel, api, payload) {\n    this._brushController && this._brushController.updateCovers(getCoverInfoList(axisModel));\n  },\n  _refreshBrushController: function (builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function (coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","var List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  getInitialData: function (option, ecModel) {\n    var parallelModel = ecModel.getComponent('parallel', this.get('parallelIndex'));\n    var parallelAxisIndices = parallelModel.parallelAxisIndex;\n    var rawData = option.data;\n    var modelDims = parallelModel.dimensions;\n    var dataDims = generateDataDims(modelDims, rawData);\n    var dataDimsInfo = zrUtil.map(dataDims, function (dim, dimIndex) {\n      var modelDimsIndex = zrUtil.indexOf(modelDims, dim);\n      var axisModel = modelDimsIndex >= 0 && ecModel.getComponent('parallelAxis', parallelAxisIndices[modelDimsIndex]);\n\n      if (axisModel && axisModel.get('type') === 'category') {\n        translateCategoryValue(axisModel, dim, rawData);\n        return {\n          name: dim,\n          type: 'ordinal'\n        };\n      } else if (modelDimsIndex < 0) {\n        return completeDimensions.guessOrdinal(rawData, dimIndex) ? {\n          name: dim,\n          type: 'ordinal'\n        } : dim;\n      } else {\n        return dim;\n      }\n    });\n    var list = new List(dataDimsInfo, this);\n    list.initData(rawData); // Anication is forbiden in progressive data mode.\n\n    if (this.option.progressive) {\n      this.option.animation = false;\n    }\n\n    return list;\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function (activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      normal: {\n        show: false\n      },\n      emphasis: {\n        show: false\n      }\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      normal: {\n        width: 1,\n        opacity: 0.45,\n        type: 'solid'\n      }\n    },\n    progressive: false,\n    // 100\n    smooth: false,\n    animationEasing: 'linear'\n  }\n});\n\nfunction translateCategoryValue(axisModel, dim, rawData) {\n  var axisData = axisModel.get('data');\n  var numberDim = convertDimNameToNumber(dim);\n\n  if (axisData && axisData.length) {\n    zrUtil.each(rawData, function (dataItem) {\n      if (!dataItem) {\n        return;\n      } // FIXME\n      // time consuming, should use hash?\n\n\n      var index = zrUtil.indexOf(axisData, dataItem[numberDim]);\n      dataItem[numberDim] = index >= 0 ? index : NaN;\n    });\n  } // FIXME\n  // 如果没有设置axis data, 应自动算出，或者提示。\n\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nfunction generateDataDims(modelDims, rawData) {\n  // parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  // We detect max dim by parallelModel.dimensions and fist\n  // item in rawData arbitrarily.\n  var maxDimNum = 0;\n  zrUtil.each(modelDims, function (dimName) {\n    var numberDim = convertDimNameToNumber(dimName);\n    numberDim > maxDimNum && (maxDimNum = numberDim);\n  });\n  var firstItem = rawData[0];\n\n  if (firstItem && firstItem.length - 1 > maxDimNum) {\n    maxDimNum = firstItem.length - 1;\n  }\n\n  var dataDims = [];\n\n  for (var i = 0; i <= maxDimNum; i++) {\n    dataDims.push('dim' + i);\n  }\n\n  return dataDims;\n}\n\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function () {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n  },\n\n  /**\n   * @override\n   */\n  render: function (seriesModel, ecModel, api, payload) {\n    this._renderForNormal(seriesModel, payload); // this[\n    //     seriesModel.option.progressive\n    //         ? '_renderForProgressive'\n    //         : '_renderForNormal'\n    // ](seriesModel);\n\n  },\n  dispose: function () {},\n\n  /**\n   * @private\n   */\n  _renderForNormal: function (seriesModel, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var option = seriesModel.option;\n    var smooth = option.smooth ? SMOOTH : null; // Consider switch between progressive and not.\n    // oldData && oldData.__plProgressive && dataGroup.removeAll();\n\n    data.diff(oldData).add(add).update(update).remove(remove).execute(); // Update style\n\n    updateElCommon(data, smooth); // First create\n\n    if (!this._data) {\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n\n    function add(newDataIndex) {\n      addEl(data, dataGroup, newDataIndex, dimensions, coordSys, null, smooth);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    }\n  },\n\n  /**\n   * @private\n   */\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(dimName, dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n}\n\nfunction updateElCommon(data, smooth) {\n  var seriesStyleModel = data.hostModel.getModel('lineStyle.normal');\n  var lineStyle = seriesStyleModel.getLineStyle();\n  data.eachItemGraphicEl(function (line, dataIndex) {\n    if (data.hasItemOption) {\n      var itemModel = data.getItemModel(dataIndex);\n      var lineStyleModel = itemModel.getModel('lineStyle.normal', seriesStyleModel);\n      lineStyle = lineStyleModel.getLineStyle(['color', 'stroke']);\n    }\n\n    line.useStyle(zrUtil.extend(lineStyle, {\n      fill: null,\n      // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n      stroke: data.getItemVisual(dataIndex, 'color'),\n      // lineStyle.opacity have been set to itemVisual in parallelVisual.\n      opacity: data.getItemVisual(dataIndex, 'opacity')\n    }));\n    line.shape.smooth = smooth;\n  });\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","var opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('parallel', function (seriesModel) {\n    var itemStyleModel = seriesModel.getModel('itemStyle.normal');\n    var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle.normal').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    coordSys.eachActiveState(data, function (activeState, dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var opacity = opacityMap[activeState];\n\n      if (activeState === 'normal') {\n        var itemOpacity = itemModel.get(opacityAccessPath, true);\n        itemOpacity != null && (opacity = itemOpacity);\n      }\n\n      data.setItemVisual(dataIndex, 'opacity', opacity);\n    });\n    data.setVisual('color', color);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","var SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\n/**\n * @file Get initial data and define sankey view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function (option) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true);\n      return graph.data;\n    }\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function () {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function () {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function (dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // the position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // the dx of the node\n    nodeWidth: 20,\n    // the vertical distance between two nodes\n    nodeGap: 8,\n    // the number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      normal: {\n        show: true,\n        position: 'right',\n        color: '#000',\n        fontSize: 12\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 1,\n        borderColor: '#333'\n      }\n    },\n    lineStyle: {\n      normal: {\n        color: '#314656',\n        opacity: 0.2,\n        curveness: 0.5\n      },\n      emphasis: {\n        opacity: 0.6\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\n/**\n * @file  The file used to draw sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0\n  },\n  buildPath: function (ctx, shape) {\n    var halfExtent = shape.extent / 2;\n    ctx.moveTo(shape.x1, shape.y1 - halfExtent);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1 - halfExtent, shape.cpx2, shape.cpy2 - halfExtent, shape.x2, shape.y2 - halfExtent);\n    ctx.lineTo(shape.x2, shape.y2 + halfExtent);\n    ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + halfExtent, shape.cpx1, shape.cpy1 + halfExtent, shape.x1, shape.y1 + halfExtent);\n    ctx.closePath();\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n  render: function (seriesModel, ecModel, api) {\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle.normal');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var n2Layout = edge.node2.getLayout();\n      var edgeLayout = edge.getLayout();\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      var x1 = n1Layout.x + n1Layout.dx;\n      var y1 = n1Layout.y + edgeLayout.sy + edgeLayout.dy / 2;\n      var x2 = n2Layout.x;\n      var y2 = n2Layout.y + edgeLayout.ty + edgeLayout.dy / 2;\n      var cpx1 = x1 * (1 - curvature) + x2 * curvature;\n      var cpy1 = y1;\n      var cpx2 = x1 * curvature + x2 * (1 - curvature);\n      var cpy2 = y2;\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('lineStyle.emphasis').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // generate a rect  for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: layout.x,\n          y: layout.y,\n          width: node.getLayout().dx,\n          height: node.getLayout().dy\n        },\n        style: itemModel.getModel('itemStyle.normal').getItemStyle()\n      });\n      var hoverStyle = node.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var layout = require(\"../../util/layout\");\n\nvar nest = require(\"../../util/array/nest\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file The layout algorithm of sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations) {\n  computeNodeBreadths(nodes, nodeWidth, width);\n  computeNodeDepths(nodes, edges, height, nodeGap, iterations);\n  computeEdgeDepths(nodes);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var value = Math.max(value1, value2);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, nodeWidth, width) {\n  var remainNodes = nodes;\n  var nextNode = null;\n  var x = 0;\n  var kx = 0;\n\n  while (remainNodes.length) {\n    nextNode = [];\n\n    for (var i = 0, len = remainNodes.length; i < len; i++) {\n      var node = remainNodes[i];\n      node.setLayout({\n        x: x\n      }, true);\n      node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var j = 0, lenj = node.outEdges.length; j < lenj; j++) {\n        nextNode.push(node.outEdges[j].node2);\n      }\n    }\n\n    remainNodes = nextNode;\n    ++x;\n  }\n\n  moveSinksRight(nodes, x);\n  kx = (width - nodeWidth) / (x - 1);\n  scaleNodeBreadths(nodes, kx);\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} x  value (x-1) use to assign to node without outEdges\n *     as x-position\n */\n\n\nfunction moveSinksRight(nodes, x) {\n  zrUtil.each(nodes, function (node) {\n    if (!node.outEdges.length) {\n      node.setLayout({\n        x: x - 1\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx) {\n  zrUtil.each(nodes, function (node) {\n    var nodeX = node.getLayout().x * kx;\n    node.setLayout({\n      x: nodeX\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, nodeGap, iterations) {\n  var nodesByBreadth = nest().key(function (d) {\n    return d.getLayout().x;\n  }).sortKeys(ascending).entries(nodes).map(function (d) {\n    return d.values;\n  });\n  initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap);\n  resolveCollisions(nodesByBreadth, nodeGap, height);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n    relaxLeftToRight(nodesByBreadth, alpha);\n    resolveCollisions(nodesByBreadth, nodeGap, height);\n  }\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodes, nodesByBreadth, edges, height, nodeGap) {\n  var kyArray = [];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = (height - (n - 1) * nodeGap) / sum;\n    kyArray.push(ky);\n  });\n  kyArray.sort(function (a, b) {\n    return a - b;\n  });\n  var ky0 = kyArray[0];\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      node.setLayout({\n        y: i\n      }, true);\n      var nodeDy = node.getLayout().value * ky0;\n      node.setLayout({\n        dy: nodeDy\n      }, true);\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * ky0;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var i;\n    nodes.sort(ascendingDepth);\n\n    for (i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout().y;\n\n      if (dy > 0) {\n        var nodeY = node.getLayout().y + dy;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n\n      y0 = node.getLayout().y + node.getLayout().dy + nodeGap;\n    } // if the bottommost node goes outside the bounds, push it back up\n\n\n    dy = y0 - nodeGap - height;\n\n    if (dy > 0) {\n      var nodeY = node.getLayout().y - dy;\n      node.setLayout({\n        y: nodeY\n      }, true);\n      y0 = node.getLayout().y;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout().y + node.getLayout().dy + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeY = node.getLayout().y - dy;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n\n        y0 = node.getLayout().y;\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget) / sum(node.outEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge) {\n  return center(edge.node2) * edge.getValue();\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource) / sum(node.inEdges, getEdgeValue);\n        var nodeY = node.getLayout().y + (y - center(node)) * alpha;\n        node.setLayout({\n          y: nodeY\n        }, true);\n      }\n    });\n  });\n}\n\nfunction weightedSource(edge) {\n  return center(edge.node1) * edge.getValue();\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes) {\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(ascendingTargetDepth);\n    node.inEdges.sort(ascendingSourceDepth);\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nfunction ascendingTargetDepth(a, b) {\n  return a.node2.getLayout().y - b.node2.getLayout().y;\n}\n\nfunction ascendingSourceDepth(a, b) {\n  return a.node1.getLayout().y - b.node1.getLayout().y;\n}\n\nfunction sum(array, f) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +f.call(array, array[i], i);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n\nfunction center(node) {\n  return node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction ascendingDepth(a, b) {\n  return a.getLayout().y - b.getLayout().y;\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a === b ? 0 : NaN;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nmodule.exports = _default;","var VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file Visual encoding for sankey view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    nodes.sort(function (a, b) {\n      return a.getLayout().value - b.getLayout().value;\n    });\n    var minValue = nodes[0].getLayout().value;\n    var maxValue = nodes[nodes.length - 1].getLayout().value;\n    zrUtil.each(nodes, function (node) {\n      var mapping = new VisualMapping({\n        type: 'color',\n        mappingMethod: 'linear',\n        dataExtent: [minValue, maxValue],\n        visual: seriesModel.get('color')\n      });\n      var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n      node.setVisual('color', mapValueToColor); // If set itemStyle.normal.color\n\n      var itemModel = node.getModel();\n      var customColor = itemModel.get('itemStyle.normal.color');\n\n      if (customColor != null) {\n        node.setVisual('color', customColor);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./boxplot/BoxplotSeries\");\n\nrequire(\"./boxplot/BoxplotView\");\n\nvar boxplotVisual = require(\"./boxplot/boxplotVisual\");\n\nvar boxplotLayout = require(\"./boxplot/boxplotLayout\");\n\necharts.registerVisual(boxplotVisual);\necharts.registerLayout(boxplotLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar BoxplotSeries = SeriesModel.extend({\n  type: 'series.boxplot',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n  // TODO\n  // box width represents group size, so dimension should have 'size'.\n\n  /**\n   * @see <https://en.wikipedia.org/wiki/Box_plot>\n   * The meanings of 'min' and 'max' depend on user,\n   * and echarts do not need to know it.\n   * @readOnly\n   */\n  defaultValueDimensions: ['min', 'Q1', 'median', 'Q3', 'max'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    boxWidth: [7, 50],\n    // [min, max] can be percent of band width.\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1\n      },\n      emphasis: {\n        borderWidth: 2,\n        shadowBlur: 5,\n        shadowOffsetX: 2,\n        shadowOffsetY: 2,\n        shadowColor: 'rgba(0,0,0,0.4)'\n      }\n    },\n    animationEasing: 'elasticOut',\n    animationDuration: 800\n  }\n});\nzrUtil.mixin(BoxplotSeries, seriesModelMixin, true);\nvar _default = BoxplotSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\n/**\n * @module echarts/chart/helper/Symbol\n */\nvar WhiskerPath = Path.extend({\n  type: 'whiskerInBox',\n  shape: {},\n  buildPath: function (ctx, shape) {\n    for (var i in shape) {\n      if (shape.hasOwnProperty(i) && i.indexOf('ends') === 0) {\n        var pts = shape[i];\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n      }\n    }\n  }\n});\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/WhiskerBox}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Function} styleUpdater\n * @param {boolean} isInit\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction WhiskerBox(data, idx, styleUpdater, isInit) {\n  graphic.Group.call(this);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.bodyIndex;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.whiskerIndex;\n  /**\n   * @type {Function}\n   */\n\n  this.styleUpdater = styleUpdater;\n\n  this._createContent(data, idx, isInit);\n\n  this.updateData(data, idx, isInit);\n  /**\n   * Last series model.\n   * @type {module:echarts/model/Series}\n   */\n\n  this._seriesModel;\n}\n\nvar whiskerBoxProto = WhiskerBox.prototype;\n\nwhiskerBoxProto._createContent = function (data, idx, isInit) {\n  var itemLayout = data.getItemLayout(idx);\n  var constDim = itemLayout.chartLayout === 'horizontal' ? 1 : 0;\n  var count = 0; // Whisker element.\n\n  this.add(new graphic.Polygon({\n    shape: {\n      points: isInit ? transInit(itemLayout.bodyEnds, constDim, itemLayout) : itemLayout.bodyEnds\n    },\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.bodyIndex = count++; // Box element.\n\n  var whiskerEnds = zrUtil.map(itemLayout.whiskerEnds, function (ends) {\n    return isInit ? transInit(ends, constDim, itemLayout) : ends;\n  });\n  this.add(new WhiskerPath({\n    shape: makeWhiskerEndsShape(whiskerEnds),\n    style: {\n      strokeNoScale: true\n    },\n    z2: 100\n  }));\n  this.whiskerIndex = count++;\n};\n\nfunction transInit(points, dim, itemLayout) {\n  return zrUtil.map(points, function (point) {\n    point = point.slice();\n    point[dim] = itemLayout.initBaseline;\n    return point;\n  });\n}\n\nfunction makeWhiskerEndsShape(whiskerEnds) {\n  // zr animation only support 2-dim array.\n  var shape = {};\n  zrUtil.each(whiskerEnds, function (ends, i) {\n    shape['ends' + i] = ends;\n  });\n  return shape;\n}\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\nwhiskerBoxProto.updateData = function (data, idx, isInit) {\n  var seriesModel = this._seriesModel = data.hostModel;\n  var itemLayout = data.getItemLayout(idx);\n  var updateMethod = graphic[isInit ? 'initProps' : 'updateProps']; // this.childAt(this.bodyIndex).stopAnimation(true);\n  // this.childAt(this.whiskerIndex).stopAnimation(true);\n\n  updateMethod(this.childAt(this.bodyIndex), {\n    shape: {\n      points: itemLayout.bodyEnds\n    }\n  }, seriesModel, idx);\n  updateMethod(this.childAt(this.whiskerIndex), {\n    shape: makeWhiskerEndsShape(itemLayout.whiskerEnds)\n  }, seriesModel, idx);\n  this.styleUpdater.call(null, this, data, idx);\n};\n\nzrUtil.inherits(WhiskerBox, graphic.Group);\n/**\n * @constructor\n * @alias module:echarts/chart/helper/WhiskerBoxDraw\n */\n\nfunction WhiskerBoxDraw(styleUpdater) {\n  this.group = new graphic.Group();\n  this.styleUpdater = styleUpdater;\n}\n\nvar whiskerBoxDrawProto = WhiskerBoxDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nwhiskerBoxDrawProto.updateData = function (data) {\n  var group = this.group;\n  var oldData = this._data;\n  var styleUpdater = this.styleUpdater;\n  data.diff(oldData).add(function (newIdx) {\n    if (data.hasValue(newIdx)) {\n      var symbolEl = new WhiskerBox(data, newIdx, styleUpdater, true);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx); // Empty data\n\n    if (!data.hasValue(newIdx)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new WhiskerBox(data, newIdx, styleUpdater);\n    } else {\n      symbolEl.updateData(data, newIdx);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && group.remove(el);\n  }).execute();\n  this._data = data;\n};\n/**\n * Remove symbols.\n * @param {module:echarts/data/List} data\n */\n\n\nwhiskerBoxDrawProto.remove = function () {\n  var group = this.group;\n  var data = this._data;\n  this._data = null;\n  data && data.eachItemGraphicEl(function (el) {\n    el && group.remove(el);\n  });\n};\n\nvar _default = WhiskerBoxDraw;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar BoxplotView = ChartView.extend({\n  type: 'boxplot',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(BoxplotView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var borderColor = data.getItemVisual(idx, 'color'); // Exclude borderColor.\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['borderColor']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.style.set(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  whiskerEl.dirty();\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.style.set(itemStyle);\n  bodyEl.style.stroke = borderColor;\n  bodyEl.dirty();\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = BoxplotView;\nmodule.exports = _default;","var borderColorQuery = ['itemStyle', 'normal', 'borderColor'];\n\nfunction _default(ecModel, api) {\n  var globalColors = ecModel.get('color');\n  ecModel.eachRawSeriesByType('boxplot', function (seriesModel) {\n    var defaulColor = globalColors[seriesModel.seriesIndex % globalColors.length];\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect',\n      // Use name 'color' but not 'borderColor' for legend usage and\n      // visual coding from other component like dataRange.\n      color: seriesModel.get(borderColorQuery) || defaulColor\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        data.setItemVisual(idx, {\n          color: itemModel.get(borderColorQuery, true)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar each = zrUtil.each;\n\nfunction _default(ecModel) {\n  var groupResult = groupSeriesByAxis(ecModel);\n  each(groupResult, function (groupItem) {\n    var seriesModels = groupItem.seriesModels;\n\n    if (!seriesModels.length) {\n      return;\n    }\n\n    calculateBase(groupItem);\n    each(seriesModels, function (seriesModel, idx) {\n      layoutSingleSeries(seriesModel, groupItem.boxOffsetList[idx], groupItem.boxWidthList[idx]);\n    });\n  });\n}\n/**\n * Group series by axis.\n */\n\n\nfunction groupSeriesByAxis(ecModel) {\n  var result = [];\n  var axisList = [];\n  ecModel.eachSeriesByType('boxplot', function (seriesModel) {\n    var baseAxis = seriesModel.getBaseAxis();\n    var idx = zrUtil.indexOf(axisList, baseAxis);\n\n    if (idx < 0) {\n      idx = axisList.length;\n      axisList[idx] = baseAxis;\n      result[idx] = {\n        axis: baseAxis,\n        seriesModels: []\n      };\n    }\n\n    result[idx].seriesModels.push(seriesModel);\n  });\n  return result;\n}\n/**\n * Calculate offset and box width for each series.\n */\n\n\nfunction calculateBase(groupItem) {\n  var extent;\n  var baseAxis = groupItem.axis;\n  var seriesModels = groupItem.seriesModels;\n  var seriesCount = seriesModels.length;\n  var boxWidthList = groupItem.boxWidthList = [];\n  var boxOffsetList = groupItem.boxOffsetList = [];\n  var boundList = [];\n  var bandWidth;\n\n  if (baseAxis.type === 'category') {\n    bandWidth = baseAxis.getBandWidth();\n  } else {\n    var maxDataCount = 0;\n    each(seriesModels, function (seriesModel) {\n      maxDataCount = Math.max(maxDataCount, seriesModel.getData().count());\n    });\n    extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / maxDataCount;\n  }\n\n  each(seriesModels, function (seriesModel) {\n    var boxWidthBound = seriesModel.get('boxWidth');\n\n    if (!zrUtil.isArray(boxWidthBound)) {\n      boxWidthBound = [boxWidthBound, boxWidthBound];\n    }\n\n    boundList.push([parsePercent(boxWidthBound[0], bandWidth) || 0, parsePercent(boxWidthBound[1], bandWidth) || 0]);\n  });\n  var availableWidth = bandWidth * 0.8 - 2;\n  var boxGap = availableWidth / seriesCount * 0.3;\n  var boxWidth = (availableWidth - boxGap * (seriesCount - 1)) / seriesCount;\n  var base = boxWidth / 2 - availableWidth / 2;\n  each(seriesModels, function (seriesModel, idx) {\n    boxOffsetList.push(base);\n    base += boxGap + boxWidth;\n    boxWidthList.push(Math.min(Math.max(boxWidth, boundList[idx][0]), boundList[idx][1]));\n  });\n}\n/**\n * Calculate points location for each series.\n */\n\n\nfunction layoutSingleSeries(seriesModel, offset, boxWidth) {\n  var coordSys = seriesModel.coordinateSystem;\n  var data = seriesModel.getData();\n  var halfWidth = boxWidth / 2;\n  var chartLayout = seriesModel.get('layout');\n  var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n  var constDim = 1 - variableDim;\n  var coordDims = ['x', 'y'];\n  var vDims = [];\n  var cDim;\n  zrUtil.each(data.dimensions, function (dimName) {\n    var dimInfo = data.getDimensionInfo(dimName);\n    var coordDim = dimInfo.coordDim;\n\n    if (coordDim === coordDims[constDim]) {\n      vDims.push(dimName);\n    } else if (coordDim === coordDims[variableDim]) {\n      cDim = dimName;\n    }\n  });\n\n  if (cDim == null || vDims.length < 5) {\n    return;\n  }\n\n  data.each([cDim].concat(vDims), function () {\n    var args = arguments;\n    var axisDimVal = args[0];\n    var idx = args[vDims.length + 1];\n    var median = getPoint(args[3]);\n    var end1 = getPoint(args[1]);\n    var end5 = getPoint(args[5]);\n    var whiskerEnds = [[end1, getPoint(args[2])], [end5, getPoint(args[4])]];\n    layEndLine(end1);\n    layEndLine(end5);\n    layEndLine(median);\n    var bodyEnds = [];\n    addBodyEnd(whiskerEnds[0][1], 0);\n    addBodyEnd(whiskerEnds[1][1], 1);\n    data.setItemLayout(idx, {\n      chartLayout: chartLayout,\n      initBaseline: median[constDim],\n      median: median,\n      bodyEnds: bodyEnds,\n      whiskerEnds: whiskerEnds\n    });\n\n    function getPoint(val) {\n      var p = [];\n      p[variableDim] = axisDimVal;\n      p[constDim] = val;\n      var point;\n\n      if (isNaN(axisDimVal) || isNaN(val)) {\n        point = [NaN, NaN];\n      } else {\n        point = coordSys.dataToPoint(p);\n        point[variableDim] += offset;\n      }\n\n      return point;\n    }\n\n    function addBodyEnd(point, start) {\n      var point1 = point.slice();\n      var point2 = point.slice();\n      point1[variableDim] += halfWidth;\n      point2[variableDim] -= halfWidth;\n      start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n    }\n\n    function layEndLine(endCenter) {\n      var line = [endCenter.slice(), endCenter.slice()];\n      line[0][variableDim] -= halfWidth;\n      line[1][variableDim] += halfWidth;\n      whiskerEnds.push(line);\n    }\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./candlestick/CandlestickSeries\");\n\nrequire(\"./candlestick/CandlestickView\");\n\nvar preprocessor = require(\"./candlestick/preprocessor\");\n\nvar candlestickVisual = require(\"./candlestick/candlestickVisual\");\n\nvar candlestickLayout = require(\"./candlestick/candlestickLayout\");\n\necharts.registerPreprocessor(preprocessor);\necharts.registerVisual(candlestickVisual);\necharts.registerLayout(candlestickLayout);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar seriesModelMixin = _whiskerBoxCommon.seriesModelMixin;\nvar CandlestickSeries = SeriesModel.extend({\n  type: 'series.candlestick',\n  dependencies: ['xAxis', 'yAxis', 'grid'],\n\n  /**\n   * @readOnly\n   */\n  defaultValueDimensions: ['open', 'close', 'lowest', 'highest'],\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * @override\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    layout: null,\n    // 'horizontal' or 'vertical'\n    itemStyle: {\n      normal: {\n        color: '#c23531',\n        // 阳线 positive\n        color0: '#314656',\n        // 阴线 negative     '#c23531', '#314656'\n        borderWidth: 1,\n        // FIXME\n        // ec2中使用的是lineStyle.color 和 lineStyle.color0\n        borderColor: '#c23531',\n        borderColor0: '#314656'\n      },\n      emphasis: {\n        borderWidth: 2\n      }\n    },\n    barMaxWidth: null,\n    barMinWidth: null,\n    barWidth: null,\n    animationUpdate: false,\n    animationEasing: 'linear',\n    animationDuration: 300\n  },\n\n  /**\n   * Get dimension for shadow in dataZoom\n   * @return {string} dimension name\n   */\n  getShadowDim: function () {\n    return 'open';\n  },\n  brushSelector: function (dataIndex, data, selectors) {\n    var itemLayout = data.getItemLayout(dataIndex);\n    return selectors.rect(itemLayout.brushRect);\n  }\n});\nzrUtil.mixin(CandlestickSeries, seriesModelMixin, true);\nvar _default = CandlestickSeries;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _whiskerBoxCommon = require(\"../helper/whiskerBoxCommon\");\n\nvar viewMixin = _whiskerBoxCommon.viewMixin;\nvar CandlestickView = ChartView.extend({\n  type: 'candlestick',\n  getStyleUpdater: function () {\n    return updateStyle;\n  },\n  dispose: zrUtil.noop\n});\nzrUtil.mixin(CandlestickView, viewMixin, true); // Update common properties\n\nvar normalStyleAccessPath = ['itemStyle', 'normal'];\nvar emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n\nfunction updateStyle(itemGroup, data, idx) {\n  var itemModel = data.getItemModel(idx);\n  var normalItemStyleModel = itemModel.getModel(normalStyleAccessPath);\n  var color = data.getItemVisual(idx, 'color');\n  var borderColor = data.getItemVisual(idx, 'borderColor') || color; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var itemStyle = normalItemStyleModel.getItemStyle(['color', 'color0', 'borderColor', 'borderColor0']);\n  var whiskerEl = itemGroup.childAt(itemGroup.whiskerIndex);\n  whiskerEl.useStyle(itemStyle);\n  whiskerEl.style.stroke = borderColor;\n  var bodyEl = itemGroup.childAt(itemGroup.bodyIndex);\n  bodyEl.useStyle(itemStyle);\n  bodyEl.style.fill = color;\n  bodyEl.style.stroke = borderColor;\n  var hoverStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n  graphic.setHoverStyle(itemGroup, hoverStyle);\n}\n\nvar _default = CandlestickView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  if (!option || !zrUtil.isArray(option.series)) {\n    return;\n  } // Translate 'k' to 'candlestick'.\n\n\n  zrUtil.each(option.series, function (seriesItem) {\n    if (zrUtil.isObject(seriesItem) && seriesItem.type === 'k') {\n      seriesItem.type = 'candlestick';\n    }\n  });\n}\n\nmodule.exports = _default;","var positiveBorderColorQuery = ['itemStyle', 'normal', 'borderColor'];\nvar negativeBorderColorQuery = ['itemStyle', 'normal', 'borderColor0'];\nvar positiveColorQuery = ['itemStyle', 'normal', 'color'];\nvar negativeColorQuery = ['itemStyle', 'normal', 'color0'];\n\nfunction _default(ecModel, api) {\n  ecModel.eachRawSeriesByType('candlestick', function (seriesModel) {\n    var data = seriesModel.getData();\n    data.setVisual({\n      legendSymbol: 'roundRect'\n    }); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var sign = data.getItemLayout(idx).sign;\n        data.setItemVisual(idx, {\n          color: itemModel.get(sign > 0 ? positiveColorQuery : negativeColorQuery),\n          borderColor: itemModel.get(sign > 0 ? positiveBorderColorQuery : negativeBorderColorQuery)\n        });\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar subPixelOptimize = _graphic.subPixelOptimize;\nvar retrieve2 = zrUtil.retrieve2;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('candlestick', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var candleWidth = calculateCandleWidth(seriesModel, data);\n    var chartLayout = seriesModel.get('layout');\n    var variableDim = chartLayout === 'horizontal' ? 0 : 1;\n    var constDim = 1 - variableDim;\n    var coordDims = ['x', 'y'];\n    var vDims = [];\n    var cDim;\n    zrUtil.each(data.dimensions, function (dimName) {\n      var dimInfo = data.getDimensionInfo(dimName);\n      var coordDim = dimInfo.coordDim;\n\n      if (coordDim === coordDims[constDim]) {\n        vDims.push(dimName);\n      } else if (coordDim === coordDims[variableDim]) {\n        cDim = dimName;\n      }\n    });\n\n    if (cDim == null || vDims.length < 4) {\n      return;\n    }\n\n    var dataIndex = 0;\n    data.each([cDim].concat(vDims), function () {\n      var args = arguments;\n      var axisDimVal = args[0];\n      var idx = args[vDims.length + 1];\n      var openVal = args[1];\n      var closeVal = args[2];\n      var lowestVal = args[3];\n      var highestVal = args[4];\n      var ocLow = Math.min(openVal, closeVal);\n      var ocHigh = Math.max(openVal, closeVal);\n      var ocLowPoint = getPoint(ocLow);\n      var ocHighPoint = getPoint(ocHigh);\n      var lowestPoint = getPoint(lowestVal);\n      var highestPoint = getPoint(highestVal);\n      var whiskerEnds = [[subPixelOptimizePoint(highestPoint), subPixelOptimizePoint(ocHighPoint)], [subPixelOptimizePoint(lowestPoint), subPixelOptimizePoint(ocLowPoint)]];\n      var bodyEnds = [];\n      addBodyEnd(ocHighPoint, 0);\n      addBodyEnd(ocLowPoint, 1);\n      var sign;\n\n      if (openVal > closeVal) {\n        sign = -1;\n      } else if (openVal < closeVal) {\n        sign = 1;\n      } else {\n        // If close === open, compare with close of last record\n        if (dataIndex > 0) {\n          sign = data.getItemModel(dataIndex - 1).get()[2] <= closeVal ? 1 : -1;\n        } else {\n          // No record of previous, set to be positive\n          sign = 1;\n        }\n      }\n\n      data.setItemLayout(idx, {\n        chartLayout: chartLayout,\n        sign: sign,\n        initBaseline: openVal > closeVal ? ocHighPoint[constDim] : ocLowPoint[constDim],\n        // open point.\n        bodyEnds: bodyEnds,\n        whiskerEnds: whiskerEnds,\n        brushRect: makeBrushRect()\n      });\n      ++dataIndex;\n\n      function getPoint(val) {\n        var p = [];\n        p[variableDim] = axisDimVal;\n        p[constDim] = val;\n        return isNaN(axisDimVal) || isNaN(val) ? [NaN, NaN] : coordSys.dataToPoint(p);\n      }\n\n      function addBodyEnd(point, start) {\n        var point1 = point.slice();\n        var point2 = point.slice();\n        point1[variableDim] = subPixelOptimize(point1[variableDim] + candleWidth / 2, 1, false);\n        point2[variableDim] = subPixelOptimize(point2[variableDim] - candleWidth / 2, 1, true);\n        start ? bodyEnds.push(point1, point2) : bodyEnds.push(point2, point1);\n      }\n\n      function makeBrushRect() {\n        var pmin = getPoint(Math.min(openVal, closeVal, lowestVal, highestVal));\n        var pmax = getPoint(Math.max(openVal, closeVal, lowestVal, highestVal));\n        pmin[variableDim] -= candleWidth / 2;\n        pmax[variableDim] -= candleWidth / 2;\n        return {\n          x: pmin[0],\n          y: pmin[1],\n          width: constDim ? candleWidth : pmax[0] - pmin[0],\n          height: constDim ? pmax[1] - pmin[1] : candleWidth\n        };\n      }\n\n      function subPixelOptimizePoint(point) {\n        point[variableDim] = subPixelOptimize(point[variableDim], 1);\n        return point;\n      }\n    }, true);\n  });\n}\n\nfunction calculateCandleWidth(seriesModel, data) {\n  var baseAxis = seriesModel.getBaseAxis();\n  var extent;\n  var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : (extent = baseAxis.getExtent(), Math.abs(extent[1] - extent[0]) / data.count());\n  var barMaxWidth = parsePercent(retrieve2(seriesModel.get('barMaxWidth'), bandWidth), bandWidth);\n  var barMinWidth = parsePercent(retrieve2(seriesModel.get('barMinWidth'), 1), bandWidth);\n  var barWidth = seriesModel.get('barWidth');\n  return barWidth != null ? parsePercent(barWidth, bandWidth) // Put max outer to ensure bar visible in spite of overlap.\n  : Math.max(Math.min(bandWidth / 2, barMaxWidth), barMinWidth);\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./effectScatter/EffectScatterSeries\");\n\nrequire(\"./effectScatter/EffectScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\necharts.registerVisual(zrUtil.curry(visualSymbol, 'effectScatter', 'circle', null));\necharts.registerLayout(zrUtil.curry(layoutPoints, 'effectScatter'));","var createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.effectScatter',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function (option, ecModel) {\n    var list = createListFromArray(option.data, this, ecModel);\n    return list;\n  },\n  brushSelector: 'point',\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    effectType: 'ripple',\n    progressive: 0,\n    // When to show the effect, option: 'render'|'emphasis'\n    showEffectOn: 'render',\n    // Ripple effect config\n    rippleEffect: {\n      period: 4,\n      // Scale of ripple\n      scale: 2.5,\n      // Brush type can be fill or stroke\n      brushType: 'fill'\n    },\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10 // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    // large: false,\n    // Available when large is true\n    // largeThreshold: 2000,\n    // itemStyle: {\n    //     normal: {\n    //         opacity: 1\n    //     }\n    // }\n\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar EffectSymbol = require(\"../helper/EffectSymbol\");\n\nvar _default = echarts.extendChartView({\n  type: 'effectScatter',\n  init: function () {\n    this._symbolDraw = new SymbolDraw(EffectSymbol);\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var effectSymbolDraw = this._symbolDraw;\n    effectSymbolDraw.updateData(data);\n    this.group.add(effectSymbolDraw.group);\n  },\n  updateLayout: function () {\n    this._symbolDraw.updateLayout();\n  },\n  remove: function (ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(api);\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? effectCfg.color : null,\n        fill: effectCfg.brushType === 'fill' ? effectCfg.color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // var ripplePath = createSymbol(\n    //     symbolType, -0.5, -0.5, 1, 1, color\n    // );\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  rippleGroup.rotation = (itemModel.getShallow('symbolRotate') || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function () {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function () {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// Convert [ [{coord: []}, {coord: []}] ]\n// to [ { coords: [[]] } ]\nfunction preprocessOption(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = zrUtil.map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return zrUtil.mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.normal.color',\n  init: function (option) {\n    // Not using preprocessor because mergeOption may not have series.type\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function (option) {\n    preprocessOption(option);\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  getInitialData: function (option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.normal.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    label: {\n      normal: {\n        show: false,\n        position: 'end' // distance: 5,\n        // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n      }\n    },\n    lineStyle: {\n      normal: {\n        opacity: 0.5\n      }\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function () {},\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var lineDraw = this._lineDraw;\n    var hasEffect = seriesModel.get('effect.show');\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.get('large') && data.count() >= seriesModel.get('largeThreshold');\n\n    if (hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLarge !== this._isLarge) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLarge ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLarge = isLarge;\n    }\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (hasEffect && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    this.group.add(lineDraw.group);\n    lineDraw.updateData(data);\n    this._lastZlevel = zlevel;\n  },\n  updateLayout: function (seriesModel, ecModel, api) {\n    this._lineDraw.updateLayout(seriesModel); // Not use motion when dragging or zooming\n\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function (ecModel, api) {\n    this._lineDraw && this._lineDraw.remove(api, true); // Clear motion when lineDraw is removed\n\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  dispose: function () {}\n});\n\nmodule.exports = _default;","var Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n\n// TODO Batch by color\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    segs: []\n  },\n  buildPath: function (path, shape) {\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        for (var j = 1; j < seg.length; j++) {\n          path.lineTo(seg[j][0], seg[j][1]);\n        }\n      } else {\n        path.moveTo(seg[0][0], seg[0][1]);\n\n        if (seg.length > 2) {\n          path.quadraticCurveTo(seg[2][0], seg[2][1], seg[1][0], seg[1][1]);\n        } else {\n          path.lineTo(seg[1][0], seg[1][1]);\n        }\n      }\n    }\n  },\n  findDataIndex: function (x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var isPolyline = shape.polyline;\n    var lineWidth = Math.max(this.style.lineWidth, 1); // Not consider transform\n\n    for (var i = 0; i < segs.length; i++) {\n      var seg = segs[i];\n\n      if (isPolyline) {\n        for (var j = 1; j < seg.length; j++) {\n          if (lineContain.containStroke(seg[j - 1][0], seg[j - 1][1], seg[j][0], seg[j][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      } else {\n        if (seg.length > 2) {\n          if (quadraticContain.containStroke(seg[0][0], seg[0][1], seg[2][0], seg[2][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        } else {\n          if (lineContain.containStroke(seg[0][0], seg[0][1], seg[1][0], seg[1][1], lineWidth, x, y)) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n  this._lineEl = new LargeLineShape();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = this._lineEl;\n  var seriesModel = data.hostModel;\n  lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout),\n    polyline: seriesModel.get('polyline')\n  });\n  lineEl.useStyle(seriesModel.getModel('lineStyle.normal').getLineStyle());\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill'); // Enable tooltip\n  // PENDING May have performance issue when path is extremely large\n\n  lineEl.seriesIndex = seriesModel.seriesIndex;\n  lineEl.on('mousemove', function (e) {\n    lineEl.dataIndex = null;\n    var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n    if (dataIndex > 0) {\n      // Provide dataIndex for tooltip\n      lineEl.dataIndex = dataIndex;\n    }\n  }); // Add back\n\n  this.group.add(lineEl);\n};\n\nlargeLineProto.updateLayout = function (seriesModel) {\n  var data = seriesModel.getData();\n\n  this._lineEl.setShape({\n    segs: data.mapArray(data.getItemLayout)\n  });\n};\n\nlargeLineProto.remove = function () {\n  this.group.removeAll();\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var lineData = seriesModel.getData(); // FIXME Use data dimensions ?\n\n    lineData.each(function (idx) {\n      var itemModel = lineData.getItemModel(idx);\n      var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.get('coords');\n      var pts = [];\n\n      if (seriesModel.get('polyline')) {\n        for (var i = 0; i < coords.length; i++) {\n          pts.push(coordSys.dataToPoint(coords[i]));\n        }\n      } else {\n        pts[0] = coordSys.dataToPoint(coords[0]);\n        pts[1] = coordSys.dataToPoint(coords[1]);\n        var curveness = itemModel.get('lineStyle.normal.curveness');\n\n        if (+curveness) {\n          pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n        }\n      }\n\n      lineData.setItemLayout(idx, pts);\n    });\n  });\n}\n\nmodule.exports = _default;","function normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('lines', function (seriesModel) {\n    var data = seriesModel.getData();\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var opacityQuery = 'lineStyle.normal.opacity'.split('.');\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    });\n  });\n}\n\nmodule.exports = _default;","require(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","var SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function (seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(coordSys, seriesModel, api);\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  dispose: function () {},\n  _renderOnCartesianAndCalendar: function (coordSys, seriesModel, api) {\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var width = xAxis.getBandWidth();\n      var height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle.normal';\n    var hoverItemStyleQuery = 'itemStyle.emphasis';\n    var labelQuery = 'label.normal';\n    var hoverLabelQuery = 'label.emphasis';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel('label.normal');\n    var hoverLabelModel = seriesModel.getModel('label.emphasis');\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [seriesModel.coordDimToDataDim('x')[0], seriesModel.coordDimToDataDim('y')[0], seriesModel.coordDimToDataDim('value')[0]] : [seriesModel.coordDimToDataDim('time')[0], seriesModel.coordDimToDataDim('value')[0]];\n    data.each(function (idx) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          return;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: point[0] - width / 2,\n            y: point[1] - height / 2,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          return;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    });\n  },\n  _renderOnGeo: function (geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform().transform;\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var points = data.mapArray(['lng', 'lat', 'value'], function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\n/**\n * @file defines echarts Heatmap Chart\n * @author Ovilia (me@zhangwenli.com)\n * Inspired by https://github.com/mourner/simpleheat\n *\n * @module\n */\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function (data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function () {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function (data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar barLayoutGrid = require(\"../layout/barGrid\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n\n// In case developer forget to include grid component\necharts.registerLayout(zrUtil.curry(barLayoutGrid, 'pictorialBar'));\necharts.registerVisual(zrUtil.curry(visualSymbol, 'pictorialBar', 'roundRect', null));","var BaseBarSeries = require(\"./BaseBarSeries\");\n\nvar PictorialBarSeries = BaseBarSeries.extend({\n  type: 'series.pictorialBar',\n  dependencies: ['grid'],\n  defaultOption: {\n    symbol: 'circle',\n    // Customized bar shape\n    symbolSize: null,\n    // Can be ['100%', '100%'], null means auto.\n    symbolRotate: null,\n    symbolPosition: null,\n    // 'start' or 'end' or 'center', null means auto.\n    symbolOffset: null,\n    symbolMargin: null,\n    // start margin and end margin. Can be a number or a percent string.\n    // Auto margin by defualt.\n    symbolRepeat: false,\n    // false/null/undefined, means no repeat.\n    // Can be true, means auto calculate repeat times and cut by data.\n    // Can be a number, specifies repeat times, and do not cut by data.\n    // Can be 'fixed', means auto calculate repeat times but do not cut by data.\n    symbolRepeatDirection: 'end',\n    // 'end' means from 'start' to 'end'.\n    symbolClip: false,\n    symbolBoundingData: null,\n    // Can be 60 or -40 or [-40, 60]\n    symbolPatternSize: 400,\n    // 400 * 400 px\n    barGap: '-100%',\n    // In most case, overlap is needed.\n    // z can be set in data item, which is z2 actually.\n    // Disable progressive\n    progressive: 0,\n    hoverAnimation: false // Open only when needed.\n\n  },\n  getInitialData: function (option) {\n    // Disable stack.\n    option.stack = null;\n    return PictorialBarSeries.superApply(this, 'getInitialData', arguments);\n  }\n});\nvar _default = PictorialBarSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar isNumeric = _number.isNumeric;\n\nvar _helper = require(\"./helper\");\n\nvar setLabel = _helper.setLabel;\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'normal', 'borderWidth']; // index: +isHorizontal\n\nvar LAYOUT_ATTRS = [{\n  xy: 'x',\n  wh: 'width',\n  index: 0,\n  posDesc: ['left', 'right']\n}, {\n  xy: 'y',\n  wh: 'height',\n  index: 1,\n  posDesc: ['top', 'bottom']\n}];\nvar pathForLineWidth = new graphic.Circle();\nvar BarView = echarts.extendChartView({\n  type: 'pictorialBar',\n  render: function (seriesModel, ecModel, api) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = !!baseAxis.isHorizontal();\n    var coordSysRect = cartesian.grid.getRect();\n    var opt = {\n      ecSize: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      seriesModel: seriesModel,\n      coordSys: cartesian,\n      coordSysExtent: [[coordSysRect.x, coordSysRect.x + coordSysRect.width], [coordSysRect.y, coordSysRect.y + coordSysRect.height]],\n      isHorizontal: isHorizontal,\n      valueDim: LAYOUT_ATTRS[+isHorizontal],\n      categoryDim: LAYOUT_ATTRS[1 - isHorizontal]\n    };\n    data.diff(oldData).add(function (dataIndex) {\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var itemModel = getItemModel(data, dataIndex);\n      var symbolMeta = getSymbolMeta(data, dataIndex, itemModel, opt);\n      var bar = createBar(data, opt, symbolMeta);\n      data.setItemGraphicEl(dataIndex, bar);\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).update(function (newIndex, oldIndex) {\n      var bar = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(bar);\n        return;\n      }\n\n      var itemModel = getItemModel(data, newIndex);\n      var symbolMeta = getSymbolMeta(data, newIndex, itemModel, opt);\n      var pictorialShapeStr = getShapeStr(data, symbolMeta);\n\n      if (bar && pictorialShapeStr !== bar.__pictorialShapeStr) {\n        group.remove(bar);\n        data.setItemGraphicEl(newIndex, null);\n        bar = null;\n      }\n\n      if (bar) {\n        updateBar(bar, opt, symbolMeta);\n      } else {\n        bar = createBar(data, opt, symbolMeta, true);\n      }\n\n      data.setItemGraphicEl(newIndex, bar);\n      bar.__pictorialSymbolMeta = symbolMeta; // Add back\n\n      group.add(bar);\n      updateCommon(bar, opt, symbolMeta);\n    }).remove(function (dataIndex) {\n      var bar = oldData.getItemGraphicEl(dataIndex);\n      bar && removeBar(oldData, dataIndex, bar.__pictorialSymbolMeta.animationModel, bar);\n    }).execute();\n    this._data = data;\n    return this.group;\n  },\n  dispose: zrUtil.noop,\n  remove: function (ecModel, api) {\n    var group = this.group;\n    var data = this._data;\n\n    if (ecModel.get('animation')) {\n      if (data) {\n        data.eachItemGraphicEl(function (bar) {\n          removeBar(data, bar.dataIndex, ecModel, bar);\n        });\n      }\n    } else {\n      group.removeAll();\n    }\n  }\n}); // Set or calculate default value about symbol, and calculate layout info.\n\nfunction getSymbolMeta(data, dataIndex, itemModel, opt) {\n  var layout = data.getItemLayout(dataIndex);\n  var symbolRepeat = itemModel.get('symbolRepeat');\n  var symbolClip = itemModel.get('symbolClip');\n  var symbolPosition = itemModel.get('symbolPosition') || 'start';\n  var symbolRotate = itemModel.get('symbolRotate');\n  var rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var symbolPatternSize = itemModel.get('symbolPatternSize') || 2;\n  var isAnimationEnabled = itemModel.isAnimationEnabled();\n  var symbolMeta = {\n    dataIndex: dataIndex,\n    layout: layout,\n    itemModel: itemModel,\n    symbolType: data.getItemVisual(dataIndex, 'symbol') || 'circle',\n    color: data.getItemVisual(dataIndex, 'color'),\n    symbolClip: symbolClip,\n    symbolRepeat: symbolRepeat,\n    symbolRepeatDirection: itemModel.get('symbolRepeatDirection'),\n    symbolPatternSize: symbolPatternSize,\n    rotation: rotation,\n    animationModel: isAnimationEnabled ? itemModel : null,\n    hoverAnimation: isAnimationEnabled && itemModel.get('hoverAnimation'),\n    z2: itemModel.getShallow('z', true) || 0\n  };\n  prepareBarLength(itemModel, symbolRepeat, layout, opt, symbolMeta);\n  prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, symbolMeta.boundingLength, symbolMeta.pxSign, symbolPatternSize, opt, symbolMeta);\n  prepareLineWidth(itemModel, symbolMeta.symbolScale, rotation, opt, symbolMeta);\n  var symbolSize = symbolMeta.symbolSize;\n  var symbolOffset = itemModel.get('symbolOffset');\n\n  if (zrUtil.isArray(symbolOffset)) {\n    symbolOffset = [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])];\n  }\n\n  prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, symbolMeta.valueLineWidth, symbolMeta.boundingLength, symbolMeta.repeatCutLength, opt, symbolMeta);\n  return symbolMeta;\n} // bar length can be negative.\n\n\nfunction prepareBarLength(itemModel, symbolRepeat, layout, opt, output) {\n  var valueDim = opt.valueDim;\n  var symbolBoundingData = itemModel.get('symbolBoundingData');\n  var valueAxis = opt.coordSys.getOtherAxis(opt.coordSys.getBaseAxis());\n  var zeroPx = valueAxis.toGlobalCoord(valueAxis.dataToCoord(0));\n  var pxSignIdx = 1 - +(layout[valueDim.wh] <= 0);\n  var boundingLength;\n\n  if (zrUtil.isArray(symbolBoundingData)) {\n    var symbolBoundingExtent = [convertToCoordOnAxis(valueAxis, symbolBoundingData[0]) - zeroPx, convertToCoordOnAxis(valueAxis, symbolBoundingData[1]) - zeroPx];\n    symbolBoundingExtent[1] < symbolBoundingExtent[0] && symbolBoundingExtent.reverse();\n    boundingLength = symbolBoundingExtent[pxSignIdx];\n  } else if (symbolBoundingData != null) {\n    boundingLength = convertToCoordOnAxis(valueAxis, symbolBoundingData) - zeroPx;\n  } else if (symbolRepeat) {\n    boundingLength = opt.coordSysExtent[valueDim.index][pxSignIdx] - zeroPx;\n  } else {\n    boundingLength = layout[valueDim.wh];\n  }\n\n  output.boundingLength = boundingLength;\n\n  if (symbolRepeat) {\n    output.repeatCutLength = layout[valueDim.wh];\n  }\n\n  output.pxSign = boundingLength > 0 ? 1 : boundingLength < 0 ? -1 : 0;\n}\n\nfunction convertToCoordOnAxis(axis, value) {\n  return axis.toGlobalCoord(axis.dataToCoord(axis.scale.parse(value)));\n} // Support ['100%', '100%']\n\n\nfunction prepareSymbolSize(data, dataIndex, layout, symbolRepeat, symbolClip, boundingLength, pxSign, symbolPatternSize, opt, output) {\n  var valueDim = opt.valueDim;\n  var categoryDim = opt.categoryDim;\n  var categorySize = Math.abs(layout[categoryDim.wh]);\n  var symbolSize = data.getItemVisual(dataIndex, 'symbolSize');\n\n  if (zrUtil.isArray(symbolSize)) {\n    symbolSize = symbolSize.slice();\n  } else {\n    if (symbolSize == null) {\n      symbolSize = '100%';\n    }\n\n    symbolSize = [symbolSize, symbolSize];\n  } // Note: percentage symbolSize (like '100%') do not consider lineWidth, because it is\n  // to complicated to calculate real percent value if considering scaled lineWidth.\n  // So the actual size will bigger than layout size if lineWidth is bigger than zero,\n  // which can be tolerated in pictorial chart.\n\n\n  symbolSize[categoryDim.index] = parsePercent(symbolSize[categoryDim.index], categorySize);\n  symbolSize[valueDim.index] = parsePercent(symbolSize[valueDim.index], symbolRepeat ? categorySize : Math.abs(boundingLength));\n  output.symbolSize = symbolSize; // If x or y is less than zero, show reversed shape.\n\n  var symbolScale = output.symbolScale = [symbolSize[0] / symbolPatternSize, symbolSize[1] / symbolPatternSize]; // Follow convention, 'right' and 'top' is the normal scale.\n\n  symbolScale[valueDim.index] *= (opt.isHorizontal ? -1 : 1) * pxSign;\n}\n\nfunction prepareLineWidth(itemModel, symbolScale, rotation, opt, output) {\n  // In symbols are drawn with scale, so do not need to care about the case that width\n  // or height are too small. But symbol use strokeNoScale, where acture lineWidth should\n  // be calculated.\n  var valueLineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0;\n\n  if (valueLineWidth) {\n    pathForLineWidth.attr({\n      scale: symbolScale.slice(),\n      rotation: rotation\n    });\n    pathForLineWidth.updateTransform();\n    valueLineWidth /= pathForLineWidth.getLineScale();\n    valueLineWidth *= symbolScale[opt.valueDim.index];\n  }\n\n  output.valueLineWidth = valueLineWidth;\n}\n\nfunction prepareLayoutInfo(itemModel, symbolSize, layout, symbolRepeat, symbolClip, symbolOffset, symbolPosition, valueLineWidth, boundingLength, repeatCutLength, opt, output) {\n  var categoryDim = opt.categoryDim;\n  var valueDim = opt.valueDim;\n  var pxSign = output.pxSign;\n  var unitLength = Math.max(symbolSize[valueDim.index] + valueLineWidth, 0);\n  var pathLen = unitLength; // Note: rotation will not effect the layout of symbols, because user may\n  // want symbols to rotate on its center, which should not be translated\n  // when rotating.\n\n  if (symbolRepeat) {\n    var absBoundingLength = Math.abs(boundingLength);\n    var symbolMargin = zrUtil.retrieve(itemModel.get('symbolMargin'), '15%') + '';\n    var hasEndGap = false;\n\n    if (symbolMargin.lastIndexOf('!') === symbolMargin.length - 1) {\n      hasEndGap = true;\n      symbolMargin = symbolMargin.slice(0, symbolMargin.length - 1);\n    }\n\n    symbolMargin = parsePercent(symbolMargin, symbolSize[valueDim.index]);\n    var uLenWithMargin = Math.max(unitLength + symbolMargin * 2, 0); // When symbol margin is less than 0, margin at both ends will be subtracted\n    // to ensure that all of the symbols will not be overflow the given area.\n\n    var endFix = hasEndGap ? 0 : symbolMargin * 2; // Both final repeatTimes and final symbolMargin area calculated based on\n    // boundingLength.\n\n    var repeatSpecified = isNumeric(symbolRepeat);\n    var repeatTimes = repeatSpecified ? symbolRepeat : toIntTimes((absBoundingLength + endFix) / uLenWithMargin); // Adjust calculate margin, to ensure each symbol is displayed\n    // entirely in the given layout area.\n\n    var mDiff = absBoundingLength - repeatTimes * unitLength;\n    symbolMargin = mDiff / 2 / (hasEndGap ? repeatTimes : repeatTimes - 1);\n    uLenWithMargin = unitLength + symbolMargin * 2;\n    endFix = hasEndGap ? 0 : symbolMargin * 2; // Update repeatTimes when not all symbol will be shown.\n\n    if (!repeatSpecified && symbolRepeat !== 'fixed') {\n      repeatTimes = repeatCutLength ? toIntTimes((Math.abs(repeatCutLength) + endFix) / uLenWithMargin) : 0;\n    }\n\n    pathLen = repeatTimes * uLenWithMargin - endFix;\n    output.repeatTimes = repeatTimes;\n    output.symbolMargin = symbolMargin;\n  }\n\n  var sizeFix = pxSign * (pathLen / 2);\n  var pathPosition = output.pathPosition = [];\n  pathPosition[categoryDim.index] = layout[categoryDim.wh] / 2;\n  pathPosition[valueDim.index] = symbolPosition === 'start' ? sizeFix : symbolPosition === 'end' ? boundingLength - sizeFix : boundingLength / 2; // 'center'\n\n  if (symbolOffset) {\n    pathPosition[0] += symbolOffset[0];\n    pathPosition[1] += symbolOffset[1];\n  }\n\n  var bundlePosition = output.bundlePosition = [];\n  bundlePosition[categoryDim.index] = layout[categoryDim.xy];\n  bundlePosition[valueDim.index] = layout[valueDim.xy];\n  var barRectShape = output.barRectShape = zrUtil.extend({}, layout);\n  barRectShape[valueDim.wh] = pxSign * Math.max(Math.abs(layout[valueDim.wh]), Math.abs(pathPosition[valueDim.index] + sizeFix));\n  barRectShape[categoryDim.wh] = layout[categoryDim.wh];\n  var clipShape = output.clipShape = {}; // Consider that symbol may be overflow layout rect.\n\n  clipShape[categoryDim.xy] = -layout[categoryDim.xy];\n  clipShape[categoryDim.wh] = opt.ecSize[categoryDim.wh];\n  clipShape[valueDim.xy] = 0;\n  clipShape[valueDim.wh] = layout[valueDim.wh];\n}\n\nfunction createPath(symbolMeta) {\n  var symbolPatternSize = symbolMeta.symbolPatternSize;\n  var path = createSymbol( // Consider texture img, make a big size.\n  symbolMeta.symbolType, -symbolPatternSize / 2, -symbolPatternSize / 2, symbolPatternSize, symbolPatternSize, symbolMeta.color);\n  path.attr({\n    culling: true\n  });\n  path.type !== 'image' && path.setStyle({\n    strokeNoScale: true\n  });\n  return path;\n}\n\nfunction createOrUpdateRepeatSymbols(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var symbolSize = symbolMeta.symbolSize;\n  var valueLineWidth = symbolMeta.valueLineWidth;\n  var pathPosition = symbolMeta.pathPosition;\n  var valueDim = opt.valueDim;\n  var repeatTimes = symbolMeta.repeatTimes || 0;\n  var index = 0;\n  var unit = symbolSize[opt.valueDim.index] + valueLineWidth + symbolMeta.symbolMargin * 2;\n  eachPath(bar, function (path) {\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n\n    if (index < repeatTimes) {\n      updateAttr(path, null, makeTarget(index), symbolMeta, isUpdate);\n    } else {\n      updateAttr(path, null, {\n        scale: [0, 0]\n      }, symbolMeta, isUpdate, function () {\n        bundle.remove(path);\n      });\n    }\n\n    updateHoverAnimation(path, symbolMeta);\n    index++;\n  });\n\n  for (; index < repeatTimes; index++) {\n    var path = createPath(symbolMeta);\n    path.__pictorialAnimationIndex = index;\n    path.__pictorialRepeatTimes = repeatTimes;\n    bundle.add(path);\n    var target = makeTarget(index);\n    updateAttr(path, {\n      position: target.position,\n      scale: [0, 0]\n    }, {\n      scale: target.scale,\n      rotation: target.rotation\n    }, symbolMeta, isUpdate); // FIXME\n    // If all emphasis/normal through action.\n\n    path.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n    updateHoverAnimation(path, symbolMeta);\n  }\n\n  function makeTarget(index) {\n    var position = pathPosition.slice(); // (start && pxSign > 0) || (end && pxSign < 0): i = repeatTimes - index\n    // Otherwise: i = index;\n\n    var pxSign = symbolMeta.pxSign;\n    var i = index;\n\n    if (symbolMeta.symbolRepeatDirection === 'start' ? pxSign > 0 : pxSign < 0) {\n      i = repeatTimes - 1 - index;\n    }\n\n    position[valueDim.index] = unit * (i - repeatTimes / 2 + 0.5) + pathPosition[valueDim.index];\n    return {\n      position: position,\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    };\n  }\n\n  function onMouseOver() {\n    eachPath(bar, function (path) {\n      path.trigger('emphasis');\n    });\n  }\n\n  function onMouseOut() {\n    eachPath(bar, function (path) {\n      path.trigger('normal');\n    });\n  }\n}\n\nfunction createOrUpdateSingleSymbol(bar, opt, symbolMeta, isUpdate) {\n  var bundle = bar.__pictorialBundle;\n  var mainPath = bar.__pictorialMainPath;\n\n  if (!mainPath) {\n    mainPath = bar.__pictorialMainPath = createPath(symbolMeta);\n    bundle.add(mainPath);\n    updateAttr(mainPath, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: [0, 0],\n      rotation: symbolMeta.rotation\n    }, {\n      scale: symbolMeta.symbolScale.slice()\n    }, symbolMeta, isUpdate);\n    mainPath.on('mouseover', onMouseOver).on('mouseout', onMouseOut);\n  } else {\n    updateAttr(mainPath, null, {\n      position: symbolMeta.pathPosition.slice(),\n      scale: symbolMeta.symbolScale.slice(),\n      rotation: symbolMeta.rotation\n    }, symbolMeta, isUpdate);\n  }\n\n  updateHoverAnimation(mainPath, symbolMeta);\n\n  function onMouseOver() {\n    this.trigger('emphasis');\n  }\n\n  function onMouseOut() {\n    this.trigger('normal');\n  }\n} // bar rect is used for label.\n\n\nfunction createOrUpdateBarRect(bar, symbolMeta, isUpdate) {\n  var rectShape = zrUtil.extend({}, symbolMeta.barRectShape);\n  var barRect = bar.__pictorialBarRect;\n\n  if (!barRect) {\n    barRect = bar.__pictorialBarRect = new graphic.Rect({\n      z2: 2,\n      shape: rectShape,\n      silent: true,\n      style: {\n        stroke: 'transparent',\n        fill: 'transparent',\n        lineWidth: 0\n      }\n    });\n    bar.add(barRect);\n  } else {\n    updateAttr(barRect, null, {\n      shape: rectShape\n    }, symbolMeta, isUpdate);\n  }\n}\n\nfunction createOrUpdateClip(bar, opt, symbolMeta, isUpdate) {\n  // If not clip, symbol will be remove and rebuilt.\n  if (symbolMeta.symbolClip) {\n    var clipPath = bar.__pictorialClipPath;\n    var clipShape = zrUtil.extend({}, symbolMeta.clipShape);\n    var valueDim = opt.valueDim;\n    var animationModel = symbolMeta.animationModel;\n    var dataIndex = symbolMeta.dataIndex;\n\n    if (clipPath) {\n      graphic.updateProps(clipPath, {\n        shape: clipShape\n      }, animationModel, dataIndex);\n    } else {\n      clipShape[valueDim.wh] = 0;\n      clipPath = new graphic.Rect({\n        shape: clipShape\n      });\n\n      bar.__pictorialBundle.setClipPath(clipPath);\n\n      bar.__pictorialClipPath = clipPath;\n      var target = {};\n      target[valueDim.wh] = symbolMeta.clipShape[valueDim.wh];\n      graphic[isUpdate ? 'updateProps' : 'initProps'](clipPath, {\n        shape: target\n      }, animationModel, dataIndex);\n    }\n  }\n}\n\nfunction getItemModel(data, dataIndex) {\n  var itemModel = data.getItemModel(dataIndex);\n  itemModel.getAnimationDelayParams = getAnimationDelayParams;\n  itemModel.isAnimationEnabled = isAnimationEnabled;\n  return itemModel;\n}\n\nfunction getAnimationDelayParams(path) {\n  // The order is the same as the z-order, see `symbolRepeatDiretion`.\n  return {\n    index: path.__pictorialAnimationIndex,\n    count: path.__pictorialRepeatTimes\n  };\n}\n\nfunction isAnimationEnabled() {\n  // `animation` prop can be set on itemModel in pictorial bar chart.\n  return this.parentModel.isAnimationEnabled() && !!this.getShallow('animation');\n}\n\nfunction updateHoverAnimation(path, symbolMeta) {\n  path.off('emphasis').off('normal');\n  var scale = symbolMeta.symbolScale.slice();\n  symbolMeta.hoverAnimation && path.on('emphasis', function () {\n    this.animateTo({\n      scale: [scale[0] * 1.1, scale[1] * 1.1]\n    }, 400, 'elasticOut');\n  }).on('normal', function () {\n    this.animateTo({\n      scale: scale.slice()\n    }, 400, 'elasticOut');\n  });\n}\n\nfunction createBar(data, opt, symbolMeta, isUpdate) {\n  // bar is the main element for each data.\n  var bar = new graphic.Group(); // bundle is used for location and clip.\n\n  var bundle = new graphic.Group();\n  bar.add(bundle);\n  bar.__pictorialBundle = bundle;\n  bundle.attr('position', symbolMeta.bundlePosition.slice());\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, isUpdate);\n  createOrUpdateClip(bar, opt, symbolMeta, isUpdate);\n  bar.__pictorialShapeStr = getShapeStr(data, symbolMeta);\n  bar.__pictorialSymbolMeta = symbolMeta;\n  return bar;\n}\n\nfunction updateBar(bar, opt, symbolMeta) {\n  var animationModel = symbolMeta.animationModel;\n  var dataIndex = symbolMeta.dataIndex;\n  var bundle = bar.__pictorialBundle;\n  graphic.updateProps(bundle, {\n    position: symbolMeta.bundlePosition.slice()\n  }, animationModel, dataIndex);\n\n  if (symbolMeta.symbolRepeat) {\n    createOrUpdateRepeatSymbols(bar, opt, symbolMeta, true);\n  } else {\n    createOrUpdateSingleSymbol(bar, opt, symbolMeta, true);\n  }\n\n  createOrUpdateBarRect(bar, symbolMeta, true);\n  createOrUpdateClip(bar, opt, symbolMeta, true);\n}\n\nfunction removeBar(data, dataIndex, animationModel, bar) {\n  // Not show text when animating\n  var labelRect = bar.__pictorialBarRect;\n  labelRect && (labelRect.style.text = null);\n  var pathes = [];\n  eachPath(bar, function (path) {\n    pathes.push(path);\n  });\n  bar.__pictorialMainPath && pathes.push(bar.__pictorialMainPath); // I do not find proper remove animation for clip yet.\n\n  bar.__pictorialClipPath && (animationModel = null);\n  zrUtil.each(pathes, function (path) {\n    graphic.updateProps(path, {\n      scale: [0, 0]\n    }, animationModel, dataIndex, function () {\n      bar.parent && bar.parent.remove(bar);\n    });\n  });\n  data.setItemGraphicEl(dataIndex, null);\n}\n\nfunction getShapeStr(data, symbolMeta) {\n  return [data.getItemVisual(symbolMeta.dataIndex, 'symbol') || 'none', !!symbolMeta.symbolRepeat, !!symbolMeta.symbolClip].join(':');\n}\n\nfunction eachPath(bar, cb, context) {\n  // Do not use Group#eachChild, because it do not support remove.\n  zrUtil.each(bar.__pictorialBundle.children(), function (el) {\n    el !== bar.__pictorialBarRect && cb.call(context, el);\n  });\n}\n\nfunction updateAttr(el, immediateAttrs, animationAttrs, symbolMeta, isUpdate, cb) {\n  immediateAttrs && el.attr(immediateAttrs); // when symbolCip used, only clip path has init animation, otherwise it would be weird effect.\n\n  if (symbolMeta.symbolClip && !isUpdate) {\n    animationAttrs && el.attr(animationAttrs);\n  } else {\n    animationAttrs && graphic[isUpdate ? 'updateProps' : 'initProps'](el, animationAttrs, symbolMeta.animationModel, symbolMeta.dataIndex, cb);\n  }\n}\n\nfunction updateCommon(bar, opt, symbolMeta) {\n  var color = symbolMeta.color;\n  var dataIndex = symbolMeta.dataIndex;\n  var itemModel = symbolMeta.itemModel; // Color must be excluded.\n  // Because symbol provide setColor individually to set fill and stroke\n\n  var normalStyle = itemModel.getModel('itemStyle.normal').getItemStyle(['color']);\n  var hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  eachPath(bar, function (path) {\n    // PENDING setColor should be before setStyle!!!\n    path.setColor(color);\n    path.setStyle(zrUtil.defaults({\n      fill: color,\n      opacity: symbolMeta.opacity\n    }, normalStyle));\n    graphic.setHoverStyle(path, hoverStyle);\n    cursorStyle && (path.cursor = cursorStyle);\n    path.z2 = symbolMeta.z2;\n  });\n  var barRectHoverStyle = {};\n  var barPositionOutside = opt.valueDim.posDesc[+(symbolMeta.boundingLength > 0)];\n  var barRect = bar.__pictorialBarRect;\n  setLabel(barRect.style, barRectHoverStyle, itemModel, color, opt.seriesModel, dataIndex, barPositionOutside);\n  graphic.setHoverStyle(barRect, barRectHoverStyle);\n}\n\nfunction toIntTimes(times) {\n  var roundedTimes = Math.round(times); // Escapse accurate error\n\n  return Math.abs(times - roundedTimes) < 1e-4 ? roundedTimes : Math.ceil(times);\n}\n\nvar _default = BarView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(zrUtil.curry(dataFilter, 'themeRiver'));","var Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","var SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function (axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function (ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        var dim = this.dimension;\n\n        this._axis.scale.unionExtentFromData(data, seriesModel.coordDimToDataDim(dim));\n\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function (axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function () {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function () {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function (axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function () {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function () {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function (point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar SingleAxis = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n  /**\n   * @type {number}\n   */\n\n  this._labelInterval = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"./singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar getInterval = AxisBuilder.getInterval;\nvar ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttr = 'splitLine';\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function (axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(axisBuilder.getGroup());\n\n    if (axisModel.get(selfBuilderAttr + '.show')) {\n      this['_' + selfBuilderAttr](axisModel, layout.labelInterval);\n    }\n\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  _splitLine: function (axisModel, labelInterval) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    var lineInterval = getInterval(splitLineModel, labelInterval);\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords();\n    var p1 = [];\n    var p2 = [];\n    var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n    var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      if (ifIgnoreOnTick(axis, i, lineInterval, ticksCoords.length, showMinLabel, showMaxLabel)) {\n        continue;\n      }\n\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line(graphic.subPixelOptimizeLine({\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      })));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 2\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar get = modelUtil.makeGetter();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.coordDimToDataDim(dim);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      false, axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = get(zr)[highDownKey] || {};\n  var newHighlights = get(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function (globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function (ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function (ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","var graphic = require(\"../../util/graphic\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../axis/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function (value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function (axis, pixelValue, otherExtent, elStyle) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    graphic.subPixelOptimizeLine({\n      shape: targetShape,\n      style: elStyle\n    });\n    return {\n      type: 'Line',\n      shape: targetShape\n    };\n  },\n  shadow: function (axis, pixelValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;","var completeDimensions = require(\"../../data/helper/completeDimensions\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar nest = require(\"../../util/array/nest\");\n\n/**\n * @file  Define the themeRiver view's series model\n * @author Deqing Li(annong035@gmail.com)\n */\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function (option) {\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendDataProvider = function () {\n      return this.getRawData();\n    };\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function (data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var dataByName = nest().key(function (dataItem) {\n      return dataItem[2];\n    }).entries(data); // data group in each layer\n\n    var layData = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        dataList: d.values\n      };\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function (option, ecModel) {\n    var dimensions = [];\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type');\n    dimensions = [{\n      name: 'time',\n      // FIXME common?\n      type: axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float'\n    }, {\n      name: 'value',\n      type: 'float'\n    }, {\n      name: 'name',\n      type: 'ordinal'\n    }]; // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    });\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    dimensions = completeDimensions(dimensions, data);\n    var list = new List(dimensions, this);\n    list.initData(data, nameList);\n    return list;\n  },\n\n  /**\n   * Used by single coordinate\n   *\n   * @param {string} axisDim  the dimension for single coordinate\n   * @return {Array.<string> } specified dimensions on the axis.\n   */\n  coordDimToDataDim: function (axisDim) {\n    return ['time'];\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function () {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    } // data group by name\n\n\n    var dataByName = nest().key(function (index) {\n      return data.get('name', index);\n    }).entries(indexArr);\n    var layerSeries = zrUtil.map(dataByName, function (d) {\n      return {\n        name: d.key,\n        indices: d.values\n      };\n    });\n\n    for (var j = 0; j < layerSeries.length; ++j) {\n      layerSeries[j].indices.sort(comparer);\n    }\n\n    function comparer(index1, index2) {\n      return data.get('time', index1) - data.get('time', index2);\n    }\n\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n   *\n   * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function (dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function (dataIndex) {\n    var data = this.getData();\n    var htmlName = data.get('name', dataIndex);\n    var htmlValue = data.get('value', dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      normal: {\n        margin: 4,\n        textAlign: 'right',\n        show: true,\n        position: 'left',\n        color: '#000',\n        fontSize: 11\n      },\n      emphasis: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\n/**\n * @file  The file used to draw themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function () {\n    this._layers = [];\n  },\n  render: function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label.normal');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function () {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\n/**\n * @file  Using layout algorithm transform the raw data to layout information.\n * @author Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get('time', idx));\n      pt[1] = data.get('value', idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","var _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n\n/**\n * @file Visual encoding for themeRiver view\n * @author  Deqing Li(annong035@gmail.com)\n */\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _labelHelper = require(\"./helper/labelHelper\");\n\nvar findLabelValueDim = _labelHelper.findLabelValueDim;\n\nvar createListFromArray = require(\"./helper/createListFromArray\");\n\nvar barGrid = require(\"../layout/barGrid\");\n\nvar DataDiffer = require(\"../data/DataDiffer\");\n\nvar prepareCartesian2d = require(\"../coord/cartesian/prepareCustom\");\n\nvar prepareGeo = require(\"../coord/geo/prepareCustom\");\n\nvar prepareSingleAxis = require(\"../coord/single/prepareCustom\");\n\nvar preparePolar = require(\"../coord/polar/prepareCustom\");\n\nvar prepareCalendar = require(\"../coord/calendar/prepareCustom\");\n\nvar ITEM_STYLE_NORMAL_PATH = ['itemStyle', 'normal'];\nvar ITEM_STYLE_EMPHASIS_PATH = ['itemStyle', 'emphasis'];\nvar LABEL_NORMAL = ['label', 'normal'];\nvar LABEL_EMPHASIS = ['label', 'emphasis']; // Use prefix to avoid index to be the same as el.name,\n// which will cause weird udpate animation.\n\nvar GROUP_DIFF_PREFIX = 'e\\0\\0';\n/**\n * To reduce total package size of each coordinate systems, the modules `prepareCustom`\n * of each coordinate systems are not required by each coordinate systems directly, but\n * required by the module `custom`.\n *\n * prepareInfoForCustomSeries {Function}: optional\n *     @return {Object} {coordSys: {...}, api: {\n *         coord: function (data, clamp) {}, // return point in global.\n *         size: function (dataSize, dataItem) {} // return size of each axis in coordSys.\n *     }}\n */\n\nvar prepareCustoms = {\n  cartesian2d: prepareCartesian2d,\n  geo: prepareGeo,\n  singleAxis: prepareSingleAxis,\n  polar: preparePolar,\n  calendar: prepareCalendar\n}; // ------\n// Model\n// ------\n\necharts.extendSeriesModel({\n  type: 'series.custom',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    // Can be set as 'none'\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // label: {}\n    // itemStyle: {}\n\n  },\n  getInitialData: function (option, ecModel) {\n    return createListFromArray(option.data, this, ecModel);\n  }\n}); // -----\n// View\n// -----\n\necharts.extendChartView({\n  type: 'custom',\n\n  /**\n   * @private\n   * @type {module:echarts/data/List}\n   */\n  _data: null,\n\n  /**\n   * @override\n   */\n  render: function (customSeries, ecModel, api) {\n    var oldData = this._data;\n    var data = customSeries.getData();\n    var group = this.group;\n    var renderItem = makeRenderItem(customSeries, data, ecModel, api);\n    data.diff(oldData).add(function (newIdx) {\n      data.hasValue(newIdx) && createOrUpdate(null, newIdx, renderItem(newIdx), customSeries, group, data);\n    }).update(function (newIdx, oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      data.hasValue(newIdx) ? createOrUpdate(el, newIdx, renderItem(newIdx), customSeries, group, data) : el && group.remove(el);\n    }).remove(function (oldIdx) {\n      var el = oldData.getItemGraphicEl(oldIdx);\n      el && group.remove(el);\n    }).execute();\n    this._data = data;\n  },\n\n  /**\n   * @override\n   */\n  dispose: zrUtil.noop\n});\n\nfunction createEl(elOption) {\n  var graphicType = elOption.type;\n  var el;\n\n  if (graphicType === 'path') {\n    var shape = elOption.shape;\n    el = graphicUtil.makePath(shape.pathData, null, {\n      x: shape.x || 0,\n      y: shape.y || 0,\n      width: shape.width || 0,\n      height: shape.height || 0\n    }, 'center');\n    el.__customPathData = elOption.pathData;\n  } else if (graphicType === 'image') {\n    el = new graphicUtil.Image({});\n    el.__customImagePath = elOption.style.image;\n  } else if (graphicType === 'text') {\n    el = new graphicUtil.Text({});\n    el.__customText = elOption.style.text;\n  } else {\n    var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n    el = new Clz();\n  }\n\n  el.__customGraphicType = graphicType;\n  el.name = elOption.name;\n  return el;\n}\n\nfunction updateEl(el, dataIndex, elOption, animatableModel, data, isInit) {\n  var targetProps = {};\n  var elOptionStyle = elOption.style || {};\n  elOption.shape && (targetProps.shape = zrUtil.clone(elOption.shape));\n  elOption.position && (targetProps.position = elOption.position.slice());\n  elOption.scale && (targetProps.scale = elOption.scale.slice());\n  elOption.origin && (targetProps.origin = elOption.origin.slice());\n  elOption.rotation && (targetProps.rotation = elOption.rotation);\n\n  if (el.type === 'image' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y', 'width', 'height'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    });\n  }\n\n  if (el.type === 'text' && elOption.style) {\n    var targetStyle = targetProps.style = {};\n    zrUtil.each(['x', 'y'], function (prop) {\n      prepareStyleTransition(prop, targetStyle, elOptionStyle, el.style, isInit);\n    }); // Compatible with previous: both support\n    // textFill and fill, textStroke and stroke in 'text' element.\n\n    !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n    !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n  }\n\n  if (el.type !== 'group') {\n    el.useStyle(elOptionStyle); // Init animation.\n\n    if (isInit) {\n      el.style.opacity = 0;\n      var targetOpacity = elOptionStyle.opacity;\n      targetOpacity == null && (targetOpacity = 1);\n      graphicUtil.initProps(el, {\n        style: {\n          opacity: targetOpacity\n        }\n      }, animatableModel, dataIndex);\n    }\n  }\n\n  if (isInit) {\n    el.attr(targetProps);\n  } else {\n    graphicUtil.updateProps(el, targetProps, animatableModel, dataIndex);\n  } // z2 must not be null/undefined, otherwise sort error may occur.\n\n\n  el.attr({\n    z2: elOption.z2 || 0,\n    silent: elOption.silent\n  });\n  elOption.styleEmphasis !== false && graphicUtil.setHoverStyle(el, elOption.styleEmphasis);\n}\n\nfunction prepareStyleTransition(prop, targetStyle, elOptionStyle, oldElStyle, isInit) {\n  if (elOptionStyle[prop] != null && !isInit) {\n    targetStyle[prop] = elOptionStyle[prop];\n    elOptionStyle[prop] = oldElStyle[prop];\n  }\n}\n\nfunction makeRenderItem(customSeries, data, ecModel, api) {\n  var renderItem = customSeries.get('renderItem');\n  var coordSys = customSeries.coordinateSystem;\n  var prepareResult = {};\n\n  if (coordSys) {\n    prepareResult = coordSys.prepareCustoms ? coordSys.prepareCustoms() : prepareCustoms[coordSys.type](coordSys);\n  }\n\n  var userAPI = zrUtil.defaults({\n    getWidth: api.getWidth,\n    getHeight: api.getHeight,\n    getZr: api.getZr,\n    getDevicePixelRatio: api.getDevicePixelRatio,\n    value: value,\n    style: style,\n    styleEmphasis: styleEmphasis,\n    visual: visual,\n    barLayout: barLayout,\n    currentSeriesIndices: currentSeriesIndices,\n    font: font\n  }, prepareResult.api || {});\n  var userParams = {\n    context: {},\n    seriesId: customSeries.id,\n    seriesName: customSeries.name,\n    seriesIndex: customSeries.seriesIndex,\n    coordSys: prepareResult.coordSys,\n    dataInsideLength: data.count(),\n    encode: wrapEncodeDef(customSeries.getData())\n  }; // Do not support call `api` asynchronously without dataIndexInside input.\n\n  var currDataIndexInside;\n  var currDirty = true;\n  var currItemModel;\n  var currLabelNormalModel;\n  var currLabelEmphasisModel;\n  var currLabelValueDim;\n  var currVisualColor;\n  return function (dataIndexInside) {\n    currDataIndexInside = dataIndexInside;\n    currDirty = true;\n    return renderItem && renderItem(zrUtil.defaults({\n      dataIndexInside: dataIndexInside,\n      dataIndex: data.getRawIndex(dataIndexInside)\n    }, userParams), userAPI) || {};\n  }; // Do not update cache until api called.\n\n  function updateCache(dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n\n    if (currDirty) {\n      currItemModel = data.getItemModel(dataIndexInside);\n      currLabelNormalModel = currItemModel.getModel(LABEL_NORMAL);\n      currLabelEmphasisModel = currItemModel.getModel(LABEL_EMPHASIS);\n      currLabelValueDim = findLabelValueDim(data);\n      currVisualColor = data.getItemVisual(dataIndexInside, 'color');\n      currDirty = false;\n    }\n  }\n  /**\n   * @public\n   * @param {number|string} dim\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   * @return {number|string} value\n   */\n\n\n  function value(dim, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.get(data.getDimension(dim || 0), dataIndexInside);\n  }\n  /**\n   * By default, `visual` is applied to style (to support visualMap).\n   * `visual.color` is applied at `fill`. If user want apply visual.color on `stroke`,\n   * it can be implemented as:\n   * `api.style({stroke: api.visual('color'), fill: null})`;\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function style(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_NORMAL_PATH).getItemStyle();\n    currVisualColor != null && (itemStyle.fill = currVisualColor);\n    var opacity = data.getItemVisual(dataIndexInside, 'opacity');\n    opacity != null && (itemStyle.opacity = opacity);\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelNormalModel, null, {\n        autoColor: currVisualColor,\n        isRectText: true\n      });\n      itemStyle.text = currLabelNormalModel.getShallow('show') ? zrUtil.retrieve2(customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {Object} [extra]\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function styleEmphasis(extra, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    updateCache(dataIndexInside);\n    var itemStyle = currItemModel.getModel(ITEM_STYLE_EMPHASIS_PATH).getItemStyle();\n\n    if (currLabelValueDim != null) {\n      graphicUtil.setTextStyle(itemStyle, currLabelEmphasisModel, null, {\n        isRectText: true\n      }, true);\n      itemStyle.text = currLabelEmphasisModel.getShallow('show') ? zrUtil.retrieve3(customSeries.getFormattedLabel(dataIndexInside, 'emphasis'), customSeries.getFormattedLabel(dataIndexInside, 'normal'), data.get(currLabelValueDim, dataIndexInside)) : null;\n    }\n\n    extra && zrUtil.extend(itemStyle, extra);\n    return itemStyle;\n  }\n  /**\n   * @public\n   * @param {string} visualType\n   * @param {number} [dataIndexInside=currDataIndexInside]\n   */\n\n\n  function visual(visualType, dataIndexInside) {\n    dataIndexInside == null && (dataIndexInside = currDataIndexInside);\n    return data.getItemVisual(dataIndexInside, visualType);\n  }\n  /**\n   * @public\n   * @param {number} opt.count Positive interger.\n   * @param {number} [opt.barWidth]\n   * @param {number} [opt.barMaxWidth]\n   * @param {number} [opt.barGap]\n   * @param {number} [opt.barCategoryGap]\n   * @return {Object} {width, offset, offsetCenter} is not support, return undefined.\n   */\n\n\n  function barLayout(opt) {\n    if (coordSys.getBaseAxis) {\n      var baseAxis = coordSys.getBaseAxis();\n      return barGrid.getLayoutOnAxis(zrUtil.defaults({\n        axis: baseAxis\n      }, opt), api);\n    }\n  }\n  /**\n   * @public\n   * @return {Array.<number>}\n   */\n\n\n  function currentSeriesIndices() {\n    return ecModel.getCurrentSeriesIndices();\n  }\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {string} [opt.fontStyle]\n   * @param {number} [opt.fontWeight]\n   * @param {number} [opt.fontSize]\n   * @param {string} [opt.fontFamily]\n   * @return {string} font string\n   */\n\n\n  function font(opt) {\n    return graphicUtil.getFont(opt, ecModel);\n  }\n}\n\nfunction wrapEncodeDef(data) {\n  var encodeDef = {};\n  zrUtil.each(data.dimensions, function (dimName, dataDimIndex) {\n    var dimInfo = data.getDimensionInfo(dimName);\n\n    if (!dimInfo.isExtraCoord) {\n      var coordDim = dimInfo.coordDim;\n      var dataDims = encodeDef[coordDim] = encodeDef[coordDim] || [];\n      dataDims[dimInfo.coordDimIndex] = dataDimIndex;\n    }\n  });\n  return encodeDef;\n}\n\nfunction createOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  el = doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data);\n  el && data.setItemGraphicEl(dataIndex, el);\n}\n\nfunction doCreateOrUpdate(el, dataIndex, elOption, animatableModel, group, data) {\n  var elOptionType = elOption.type;\n\n  if (el && elOptionType !== el.__customGraphicType && (elOptionType !== 'path' || elOption.pathData !== el.__customPathData) && (elOptionType !== 'image' || elOption.style.image !== el.__customImagePath) && (elOptionType !== 'text' || elOption.style.text !== el.__customText)) {\n    group.remove(el);\n    el = null;\n  } // `elOption.type` is undefined when `renderItem` returns nothing.\n\n\n  if (elOptionType == null) {\n    return;\n  }\n\n  var isInit = !el;\n  !el && (el = createEl(elOption));\n  updateEl(el, dataIndex, elOption, animatableModel, data, isInit);\n\n  if (elOptionType === 'group') {\n    var oldChildren = el.children() || [];\n    var newChildren = elOption.children || [];\n\n    if (elOption.diffChildrenByName) {\n      // lower performance.\n      diffGroupChildren({\n        oldChildren: oldChildren,\n        newChildren: newChildren,\n        dataIndex: dataIndex,\n        animatableModel: animatableModel,\n        group: el,\n        data: data\n      });\n    } else {\n      // better performance.\n      var index = 0;\n\n      for (; index < newChildren.length; index++) {\n        doCreateOrUpdate(el.childAt(index), dataIndex, newChildren[index], animatableModel, el, data);\n      }\n\n      for (; index < oldChildren.length; index++) {\n        oldChildren[index] && el.remove(oldChildren[index]);\n      }\n    }\n  }\n\n  group.add(el);\n  return el;\n}\n\nfunction diffGroupChildren(context) {\n  new DataDiffer(context.oldChildren, context.newChildren, getKey, getKey, context).add(processAddUpdate).update(processAddUpdate).remove(processRemove).execute();\n}\n\nfunction getKey(item, idx) {\n  var name = item && item.name;\n  return name != null ? name : GROUP_DIFF_PREFIX + idx;\n}\n\nfunction processAddUpdate(newIndex, oldIndex) {\n  var context = this.context;\n  var childOption = newIndex != null ? context.newChildren[newIndex] : null;\n  var child = oldIndex != null ? context.oldChildren[oldIndex] : null;\n  doCreateOrUpdate(child, context.dataIndex, childOption, context.animatableModel, context.group, context.data);\n}\n\nfunction processRemove(oldIndex) {\n  var context = this.context;\n  var child = context.oldChildren[oldIndex];\n  child && context.group.remove(child);\n}","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: zrUtil.bind(coordSys.dataToPoint, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","var _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\n// -------------\n// Preprocessor\n// -------------\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function (optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function () {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function (graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel, api);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _updateElements: function (graphicModel, api) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n\n      if (elOption.type === 'text') {\n        var elOptionStyle = elOption.style; // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidth = elOption.width;\n        el.__ecGraphicHeight = elOption.height;\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function (graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap; // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: api.getWidth(),\n        height: api.getHeight()\n      } : {\n        // Like 'position:absolut' in css, default 0.\n        width: parentEl.__ecGraphicWidth || 0,\n        height: parentEl.__ecGraphicHeight || 0\n      };\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function () {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = graphicUtil[graphicType.charAt(0).toUpperCase() + graphicType.slice(1)];\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}","require(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","require(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","var echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\necharts.registerProcessor(legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","function _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","var LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  },\n  getOrient: function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function () {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function () {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function (itemAlign, legendModel, ecModel, api) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api);\n    var controllerGroup = this._controllerGroup;\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function (legendModel, itemAlign, maxSize) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx]; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n\n    contentPos[orientIdx] = contentGroup.position[orientIdx]; // Layout container group based on 0.\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = this.group.getBoundingRect();\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as place holders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird efffect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no next page.\n   *  pageNextDataIndex: number, null when no previous page.\n   * }\n   */\n  _getPageInfo: function (legendModel) {\n    // Align left or top by the current dataIndex.\n    var currDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var contentRect = contentGroup.getBoundingRect();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var xy = XY[orientIdx];\n    var contentPos = contentGroup.position.slice();\n    var pageIndex;\n    var pagePrevDataIndex;\n    var pageNextDataIndex;\n    var targetItemGroup;\n\n    if (this._showController) {\n      contentGroup.eachChild(function (child) {\n        if (child.__legendDataIndex === currDataIndex) {\n          targetItemGroup = child;\n        }\n      });\n    } else {\n      targetItemGroup = contentGroup.childAt(0);\n    }\n\n    var pageCount = containerRectSize ? Math.ceil(contentRect[wh] / containerRectSize) : 0;\n\n    if (targetItemGroup) {\n      var itemRect = targetItemGroup.getBoundingRect();\n      var itemLoc = targetItemGroup.position[orientIdx] + itemRect[xy];\n      contentPos[orientIdx] = -itemLoc - contentRect[xy];\n      pageIndex = Math.floor(pageCount * (itemLoc + itemRect[xy] + containerRectSize / 2) / contentRect[wh]);\n      pageIndex = contentRect[wh] && pageCount ? Math.max(0, Math.min(pageCount - 1, pageIndex)) : -1;\n      var winRect = {\n        x: 0,\n        y: 0\n      };\n      winRect[wh] = containerRectSize;\n      winRect[hw] = contentRect[hw];\n      winRect[xy] = -contentPos[orientIdx] - contentRect[xy];\n      var startIdx;\n      var children = contentGroup.children();\n      contentGroup.eachChild(function (child, index) {\n        var itemRect = getItemRect(child);\n\n        if (itemRect.intersect(winRect)) {\n          startIdx == null && (startIdx = index); // It is user-friendly that the last item shown in the\n          // current window is shown at the begining of next window.\n\n          pageNextDataIndex = child.__legendDataIndex;\n        } // If the last item is shown entirely, no next page.\n\n\n        if (index === children.length - 1 && itemRect[xy] + itemRect[wh] <= winRect[xy] + winRect[wh]) {\n          pageNextDataIndex = null;\n        }\n      }); // Always align based on the left/top most item, so the left/top most\n      // item in the previous window is needed to be found here.\n\n      if (startIdx != null) {\n        var startItem = children[startIdx];\n        var startRect = getItemRect(startItem);\n        winRect[xy] = startRect[xy] + startRect[wh] - winRect[wh]; // If the first item is shown entirely, no previous page.\n\n        if (startIdx <= 0 && startRect[xy] >= winRect[xy]) {\n          pagePrevDataIndex = null;\n        } else {\n          while (startIdx > 0 && getItemRect(children[startIdx - 1]).intersect(winRect)) {\n            startIdx--;\n          }\n\n          pagePrevDataIndex = children[startIdx].__legendDataIndex;\n        }\n      }\n    }\n\n    return {\n      contentPosition: contentPos,\n      pageIndex: pageIndex,\n      pageCount: pageCount,\n      pagePrevDataIndex: pagePrevDataIndex,\n      pageNextDataIndex: pageNextDataIndex\n    };\n\n    function getItemRect(el) {\n      var itemRect = el.getBoundingRect().clone();\n      itemRect[xy] += el.position[orientIdx];\n      return itemRect;\n    }\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","var echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","var echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 8,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipContent = new TooltipContent(api.getDom(), api);\n    this._tooltipContent = tooltipContent;\n  },\n  render: function (tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function () {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function () {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        event: {},\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el,\n          event: {}\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target,\n        event: {}\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function (e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function (tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function (dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n        singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '') + seriesDefaultHTML.join('<br />'));\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function (e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function (e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function (tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content.el, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content.el, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function (dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function (ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.hide();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (tooltipOpt instanceof Model) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n  var size = getOuterSize(el);\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction getOuterSize(el) {\n  var width = el.clientWidth;\n  var height = el.clientHeight; // Consider browser compatibility.\n  // IE8 does not support getComputedStyle.\n\n  if (document.defaultView && document.defaultView.getComputedStyle) {\n    var stl = document.defaultView.getComputedStyle(el);\n\n    if (stl) {\n      width += parseInt(stl.paddingLeft, 10) + parseInt(stl.paddingRight, 10) + parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n      height += parseInt(stl.paddingTop, 10) + parseInt(stl.paddingBottom, 10) + parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @constructor\n */\n\n\nfunction TooltipContent(container, api) {\n  var el = document.createElement('div');\n  var zr = this._zr = api.getZr();\n  this.el = el;\n  this._x = api.getWidth() / 2;\n  this._y = api.getHeight() / 2;\n  container.appendChild(el);\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      eventUtil.normalizeEvent(container, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function () {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function (tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    + ';left:' + this._x + 'px;top:' + this._y + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none';\n    this._show = true;\n  },\n  setContent: function (content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function (enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function () {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function (x, y) {\n    // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n    var zr = this._zr;\n    var viewportRootOffset;\n\n    if (zr && zr.painter && (viewportRootOffset = zr.painter.getViewportRootOffset())) {\n      x += viewportRootOffset.offsetLeft;\n      y += viewportRootOffset.offsetTop;\n    }\n\n    var style = this.el.style;\n    style.left = x + 'px';\n    style.top = y + 'px';\n    this._x = x;\n    this._y = y;\n  },\n  hide: function () {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function (time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function () {\n    return this._show;\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var angleAxis = polar.getAngleAxis();\n    var baseAxis = polar.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var center = seriesModel.get('center') || ['50%', '50%'];\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    var valueAxisStart = valueAxis.getExtent()[0];\n    var valueMax = valueAxis.model.get('max');\n    var valueMin = valueAxis.model.get('min');\n    var coordDims = [seriesModel.coordDimToDataDim('radius')[0], seriesModel.coordDimToDataDim('angle')[0]];\n    var coords = data.mapArray(coordDims, function (radius, angle) {\n      return polar.dataToPoint([radius, angle]);\n    }, true);\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.each(seriesModel.coordDimToDataDim(valueAxis.dim)[0], function (value, idx) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      if (!lastStackCoords[stackId][idx]) {\n        lastStackCoords[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n        lastStackCoordsOrigin[stackId][idx] = {\n          p: valueAxisStart,\n          // Positive stack\n          n: valueAxisStart // Negative stack\n\n        };\n      }\n\n      var sign = value >= 0 ? 'p' : 'n';\n      var coord = polar.pointToCoord(coords[idx]);\n      var lastCoordOrigin = lastStackCoordsOrigin[stackId][idx][sign];\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle;\n\n      if (valueAxis.dim === 'radius') {\n        // radial sector\n        r0 = lastCoordOrigin;\n        r = coord[0];\n        startAngle = (-coord[1] + columnOffset) * Math.PI / 180;\n        endAngle = startAngle + columnWidth * Math.PI / 180;\n\n        if (Math.abs(r) < barMinHeight) {\n          r = r0 + (r < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = r;\n      } else {\n        // tangential sector\n        r0 = coord[0] + columnOffset;\n        r = r0 + columnWidth; // clamp data if min or max is defined for valueAxis\n\n        if (valueMax != null) {\n          value = Math.min(value, valueMax);\n        }\n\n        if (valueMin != null) {\n          value = Math.max(value, valueMin);\n        }\n\n        var angle = angleAxis.dataToAngle(value);\n\n        if (Math.abs(angle - lastCoordOrigin) < barMinAngle) {\n          angle = lastCoordOrigin - (value < 0 ? -1 : 1) * barMinAngle;\n        }\n\n        startAngle = -lastCoordOrigin * Math.PI / 180;\n        endAngle = -angle * Math.PI / 180; // if the previous stack is at the end of the ring,\n        // add a round to differentiate it from origin\n\n        var extent = angleAxis.getExtent();\n        var stackCoord = angle;\n\n        if (stackCoord === extent[0] && value > 0) {\n          stackCoord = extent[1];\n        } else if (stackCoord === extent[1] && value < 0) {\n          stackCoord = extent[0];\n        }\n\n        lastStackCoordsOrigin[stackId][idx][sign] = stackCoord;\n      }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n    }, true);\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[getAxisKey(baseAxis)] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[getAxisKey(baseAxis)] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","var RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\nvar Polar = function (name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function (dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function () {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function (scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function () {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function () {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function (axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function (dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function (point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function (coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function (axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'splitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n\n    if (angleAxis.type !== 'category') {\n      // Remove the last tick which will overlap the first tick\n      ticksAngles.pop();\n    }\n\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, radiusExtent);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle');\n    var circle = new graphic.Circle({\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: radiusExtent[getRadiusIdx(polar)]\n      },\n      style: lineStyleModel.getLineStyle(),\n      z2: 1,\n      silent: true\n    });\n    circle.style.fill = null;\n    this.group.add(circle);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngle) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngle)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var axis = angleAxisModel.axis;\n    var categoryData = angleAxisModel.get('data');\n    var labelModel = angleAxisModel.getModel('axisLabel');\n    var labels = angleAxisModel.getFormattedLabels();\n    var labelMargin = labelModel.get('margin');\n    var labelsAngles = axis.getLabelsCoords(); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelsAngles[i]]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (categoryData && categoryData[i] && categoryData[i].textStyle) {\n        labelModel = new Model(categoryData[i].textStyle, labelModel, labelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: true\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labels[i],\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i])\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (angleAxisModel, polar, ticksAngles, radiusExtent) {\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0] * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i] * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i] * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","require(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function (radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i]\n        },\n        silent: true\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function (radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0];\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i],\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i];\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","var formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function (axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function (axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = axis.getBandWidth();\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function (option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option.label, ['show']);\n  },\n  optionUpdated: function () {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      normal: {\n        show: false,\n        color: '#000'\n      },\n      emphasis: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color: 各异,\n        borderWidth: 0.5,\n        borderColor: '#444',\n        color: '#eee'\n      },\n      emphasis: {\n        // 也是选中样式\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function (name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function (name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label.' + status + '.formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function (zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function (center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","var MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function (ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function (geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function () {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n\n/**\n * Brush component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n});\n/**\n * Register the visual encoding if this modules required.\n */\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function (area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function (area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}","var polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function (itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function (itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || lineIntersectPolygon(x, y, x + width, y, points) || lineIntersectPolygon(x, y, x, y + height, points) || lineIntersectPolygon(x + width, y, x + width, y + height, points) || lineIntersectPolygon(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function (itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nfunction lineIntersectPolygon(lx, ly, l2x, l2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineIntersect(lx, ly, l2x, l2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n} // Code from <http://blog.csdn.net/rickliuxiao/article/details/6259322> with some fix.\n// See <https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection>\n\n\nfunction lineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  var delta = determinant(a2x - a1x, b1x - b2x, a2y - a1y, b1y - b2y);\n\n  if (nearZero(delta)) {\n    // parallel\n    return false;\n  }\n\n  var namenda = determinant(b1x - a1x, b1x - b2x, b1y - a1y, b1y - b2y) / delta;\n\n  if (namenda < 0 || namenda > 1) {\n    return false;\n  }\n\n  var miu = determinant(a2x - a1x, b1x - a1x, a2y - a1y, b1y - a1y) / delta;\n\n  if (miu < 0 || miu > 1) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n}\n\nfunction determinant(v1, v2, v3, v4) {\n  return v1 * v4 - v2 * v3;\n}\n\nvar _default = selector;\nmodule.exports = _default;","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function (newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function (areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function (brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function (ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function (brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n\n  /**\n   * @override\n   */\n  updateLayout: updateController,\n\n  /**\n   * @override\n   */\n  updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function (areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\necharts.registerAction({\n  type: 'brush',\n  event: 'brush',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype;\n\nproto.render = proto.updateView = proto.updateLayout = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","require(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\n// (24*60*60*1000)\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function () {\n    return [{\n      name: 'time',\n      type: 'time'\n    }];\n  },\n  getRangeInfo: function () {\n    return this._rangeInfo;\n  },\n  getModel: function () {\n    return this._model;\n  },\n  getRect: function () {\n    return this._rect;\n  },\n  getCellWidth: function () {\n    return this._sw;\n  },\n  getCellHeight: function () {\n    return this._sh;\n  },\n  getOrient: function () {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function () {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function (date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function (date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function (ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle.normal').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function (data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time <= range.end.time)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function (point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function (data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function (point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function () {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function (range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    if (date.getDate() !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while (date.getDate() !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(startDateNum + allDay - 1);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function (nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      normal: {\n        color: '#fff',\n        borderWidth: 1,\n        borderColor: '#ccc'\n      }\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function (calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function (calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle.normal').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function (calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function (points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function (points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function (calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function (formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function (textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function (calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function (point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function (calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function (point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function (calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n// Model\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textBaseline: null\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function (titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textBaseline = titleModel.get('textBaseline');\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    textEl.silent = !link;\n    subTextEl.silent = !sublink;\n\n    if (link) {\n      textEl.on('click', function () {\n        window.open(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        window.open(sublink, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textBaseline) {\n      textBaseline = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textBaseline === 'center') {\n        textBaseline = 'middle';\n      }\n\n      if (textBaseline === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textBaseline === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textBaseline = textBaseline || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textBaseline\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      silent: true\n    });\n    graphic.subPixelOptimizeRect(rect);\n    group.add(rect);\n  }\n});","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function (dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function () {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function () {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function () {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function () {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function () {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function () {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function (opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [opt.start, opt.end];\n    var valueWindow = [];\n    each(['startValue', 'endValue'], function (prop) {\n      valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n    }); // Normalize bound.\n\n    each([0, 1], function (idx) {\n      var boundValue = valueWindow[idx];\n      var boundPercent = percentWindow[idx]; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n      // for cases that a dataZoom component controls multiple axes with different\n      // unit or extent, and the latter one is suitable for accurate zoom by pixel\n      // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n      // but it is awkward that `percentProp` can not be obtained from `valueProp`\n      // accurately (because all of values that are overflow the `dataExtent` will\n      // be calculated to percent '100%'). So we have to use\n      // `dataZoom.getRangePropMode()` to mark which prop is used.\n      // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n      // it remains its original value.\n\n      if (rangePropMode[idx] === 'percent') {\n        if (boundPercent == null) {\n          boundPercent = percentExtent[idx];\n        } // Use scale.parse to math round for category or time axis.\n\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent, true));\n      } else {\n        // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent, true);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    return {\n      valueWindow: asc(valueWindow),\n      percentWindow: asc(percentWindow)\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    } // Culculate data window and data extent, and record them.\n\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, this.getTargetSeriesModels());\n    var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow;\n    setMinMaxSpan(this); // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function (dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n\n\n    var otherAxisModel = this.getOtherAxisModel();\n\n    if (dataZoomModel.get('$fromToolbox') && otherAxisModel && otherAxisModel.get('type') === 'category') {\n      filterMode = 'empty';\n    } // Process series data\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesModel.coordDimToDataDim(axisDim);\n\n      if (filterMode === 'weakFilter') {\n        seriesData && seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        seriesData && each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            seriesData.filterSelf(dim, isInWindow);\n          }\n        });\n      }\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n        var seriesExtent = seriesData.getDataExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  each(['min', 'max'], function (minMax) {\n    minMaxSpan[minMax + 'Span'] = dataZoomModel.get(minMax + 'Span'); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n\n    if (valueSpan != null) {\n      minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n      valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan);\n\n      if (valueSpan != null) {\n        var dataExtent = axisProxy._dataExtent;\n        minMaxSpan[minMax + 'Span'] = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n      }\n    }\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function (ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function () {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function () {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function () {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function () {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function () {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect(graphic.subPixelOptimizeRect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    })));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        onmousemove: function (e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   */\n  _updateInterval: function (handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function (nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function (value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function (showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function (handleIndex, dx, dy) {\n    this._dragging = true; // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime);\n\n    if (realtime) {\n      realtime && this._dispatchZoomAction();\n    }\n  },\n  _onDragEnd: function () {\n    this._dragging = false;\n\n    this._showDataInfo(false);\n\n    this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function (e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function () {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function () {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function (ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function (dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Notice: origin this._range should be maintained, and should not be re-fetched\n    // from dataZoomModel when payload.type is 'dataZoom', otherwise 'pan' or 'zoom'\n    // info will be missed because of 'throttle' of this.dispatchAction.\n\n    if (roams.shouldRecordRange(payload, dataZoomModel.id)) {\n      this._range = dataZoomModel.getPercentRange();\n    } // Reset controllers.\n\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var dataZoomOption = dataZoomModel.option;\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function (e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          throttleRate: dataZoomModel.get('throttle', true),\n          panGetRange: bind(this._onPan, this, coordInfo, coordSysName),\n          zoomGetRange: bind(this._onZoom, this, coordInfo, coordSysName),\n          zoomLock: dataZoomOption.zoomLock,\n          disabled: dataZoomOption.disabled,\n          roamControllerOpt: {\n            zoomOnMouseWheel: dataZoomOption.zoomOnMouseWheel,\n            moveOnMouseMove: dataZoomOption.moveOnMouseMove,\n            preventDefaultMouseMove: dataZoomOption.preventDefaultMouseMove\n          }\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function (coordInfo, coordSysName, controller, dx, dy, oldX, oldY, newX, newY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName]([oldX, oldY], [newX, newY], axisModel, controller, coordInfo);\n    var percentDelta = directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    return this._range = range;\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function (coordInfo, coordSysName, controller, scale, mouseX, mouseY) {\n    var range = this._range.slice(); // Calculate transform by the first axis.\n\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [mouseX, mouseY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    scale = Math.max(1 / scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    return this._range = range;\n  }\n});\nvar getDirectionInfo = {\n  grid: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\nvar curry = zrUtil.curry;\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {number} dataZoomInfo.throttleRate\n * @param {Function} dataZoomInfo.panGetRange\n * @param {Function} dataZoomInfo.zoomGetRange\n * @param {boolean} [dataZoomInfo.zoomLock]\n * @param {boolean} [dataZoomInfo.disabled]\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.throttleRate, 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction shouldRecordRange(payload, dataZoomId) {\n  if (payload && payload.type === 'dataZoom' && payload.batch) {\n    for (var i = 0, len = payload.batch.length; i < len; i++) {\n      if (payload.batch[i].dataZoomId === dataZoomId) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  controller.on('pan', curry(onPan, newRecord));\n  controller.on('zoom', curry(onZoom, newRecord));\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n\nfunction onPan(record, dx, dy, oldX, oldY, newX, newY) {\n  wrapAndDispatch(record, function (info) {\n    return info.panGetRange(record.controller, dx, dy, oldX, oldY, newX, newY);\n  });\n}\n\nfunction onZoom(record, scale, mouseX, mouseY) {\n  wrapAndDispatch(record, function (info) {\n    return info.zoomGetRange(record.controller, scale, mouseX, mouseY);\n  });\n}\n\nfunction wrapAndDispatch(record, getRange) {\n  var batch = [];\n  zrUtil.each(record.dataZoomInfos, function (info) {\n    var range = getRange(info);\n    !info.disabled && range && batch.push({\n      dataZoomId: info.dataZoomId,\n      start: range[0],\n      end: range[1]\n    });\n  });\n  record.dispatchAction(batch);\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType;\n  var opt = {};\n  var typePriority = {\n    'true': 2,\n    'move': 1,\n    'false': 0,\n    'undefined': -1\n  };\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var oneType = dataZoomInfo.disabled ? false : dataZoomInfo.zoomLock ? 'move' : true;\n    typePriority[oneType] > typePriority[controlType] && (controlType = oneType); // Do not support that different 'shift'/'ctrl'/'alt' setting used in one coord sys.\n\n    zrUtil.extend(opt, dataZoomInfo.roamControllerOpt);\n  });\n  return {\n    controlType: controlType,\n    opt: opt\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.shouldRecordRange = shouldRecordRange;\nexports.generateCoordId = generateCoordId;","require(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n\n// Constant\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function () {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function () {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function () {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function (value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function (getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function () {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function (visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function () {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function (targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function (barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function (e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function (barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function (handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function () {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function (handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function (forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function (dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function (dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function (handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function (itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function (handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function (cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function () {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function () {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function (cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(resultBatches[0]));\n\n    this._dispatchHighDown('highlight', helper.convertDataIndex(resultBatches[1]));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function (e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var dim = data.getDimension(visualMapModel.getDataDimension(data));\n    var value = data.get(dim, el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function () {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function () {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.convertDataIndex(indices));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function () {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function (vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function (type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function (e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function (newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function () {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function (newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function (piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function () {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function () {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function (selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function (value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function (pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, true, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function (piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function (getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n    var index = 0;\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var curr = dataExtent[0], len = index + splitNumber; index < len; curr += splitStep) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        index: index++,\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        index: index++,\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function () {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function () {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function () {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function (itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.convertDataIndex(visualMapModel.findTargetDataIndices(pieceIndex))\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function () {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function (group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function () {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function (group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function (piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n\n// HINT Markpoint can't be used too much\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'inside'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    itemStyle: {\n      normal: {\n        borderWidth: 2\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  updateLayout: function (markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbolSize = itemModel.getShallow('symbolSize');\n\n      if (typeof symbolSize === 'function') {\n        // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n        symbolSize = symbolSize(mpModel.getRawValue(idx), mpModel.getDataParams(idx));\n      }\n\n      mpData.setItemVisual(idx, {\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color'),\n        symbol: itemModel.getShallow('symbol')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      normal: {\n        show: true,\n        position: 'end'\n      },\n      emphasis: {\n        show: true\n      }\n    },\n    lineStyle: {\n      normal: {\n        type: 'dashed'\n      },\n      emphasis: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar markLineTransform = function (seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var valueDataDim;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueDataDim = item.yAxis != null ? 'y' : 'x';\n      valueAxis = coordSys.getAxis(valueDataDim);\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueDataDim = axisInfo.valueDataDim;\n      valueAxis = axisInfo.valueAxis;\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueDataDim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  updateLayout: function (markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.normal.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.normal.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","var echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","var MarkerModel = require(\"./MarkerModel\");\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      normal: {\n        show: true,\n        position: 'top'\n      },\n      emphasis: {\n        show: true,\n        position: 'top'\n      }\n    },\n    itemStyle: {\n      normal: {\n        // color and borderColor default to use color from series\n        // color: 'auto'\n        // borderColor: 'auto'\n        borderWidth: 0\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n\n// TODO Better on polar\nvar markAreaTransform = function (seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y], true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  updateLayout: function (markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function (seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesName = seriesModel.name;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesName) || areaGroupMap.set(seriesName, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label.normal');\n      var labelHoverModel = itemModel.getModel('label.emphasis');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle.normal').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('itemStyle.emphasis').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.coordDimToDataDim(coordDim)[0]) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      info.name = coordDim;\n      return info;\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","var echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n\n/**\n * DataZoom component entry\n */\necharts.registerPreprocessor(preprocessor);","var zrUtil = require(\"zrender/lib/core/util\");\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","var Component = require(\"../../model/Component\");\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      normal: {\n        show: true,\n        interval: 'auto',\n        rotate: 0,\n        // formatter: null,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#304654'\n      },\n      emphasis: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      }\n    },\n    itemStyle: {\n      normal: {\n        color: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531'\n      }\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      normal: {\n        color: '#304654',\n        borderColor: '#304654',\n        borderWidth: 1\n      },\n      emphasis: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, modelUtil.dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {\n      normal: {},\n      emphasis: {}\n    },\n    label: {\n      normal: {\n        color: '#000'\n      },\n      emphasis: {}\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function (option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function (option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function (currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function () {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function () {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function (state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function () {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function () {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function () {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function () {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function (ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function (timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function () {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function () {\n    this._clearTimer();\n  },\n  _layout: function (timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.normal.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show');\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.normal.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showControl = controlModel.get('show', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.normal.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.normal.verticalAlign') || timelineModel.get('label.normal.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function (layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transfrom to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function (layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType);\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n\n    this._customizeScale(scale, data);\n\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _customizeScale: function (scale, data) {\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    scale.getTicksLabels = function () {\n      return zrUtil.map(this.getTicks(), scale.getLabel, scale);\n    };\n  },\n  _createGroup: function (name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function (layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    each(ticks, function (value, dataIndex) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(dataIndex);\n      var itemStyleModel = itemModel.getModel('itemStyle.normal');\n      var hoverStyleModel = itemModel.getModel('itemStyle.emphasis');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, dataIndex)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = dataIndex;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function (layoutInfo, group, axis, timelineModel) {\n    var labelModel = timelineModel.getModel('label.normal');\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var ticks = axis.scale.getTicks();\n    var labels = axisHelper.getFormattedLabels(axis, labelModel.get('formatter'));\n    var labelInterval = axis.getLabelInterval();\n    each(ticks, function (tick, dataIndex) {\n      if (axis.isLabelIgnored(dataIndex, labelInterval)) {\n        return;\n      }\n\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label.normal');\n      var hoverLabelModel = itemModel.getModel('label.emphasis');\n      var tickCoord = axis.dataToCoord(tick);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labels[dataIndex],\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function (layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle.normal').getItemStyle();\n    var hoverStyle = timelineModel.getModel('controlStyle.emphasis').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function (layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function (pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function (pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function (nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function (dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function (e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function (mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function () {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function (vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function (axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function () {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function (nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","var ComponentView = require(\"../../view/Component\");\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","var zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar TimelineAxis = function (dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._autoLabelInterval;\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getLabelInterval: function () {\n    var timelineModel = this.model;\n    var labelModel = timelineModel.getModel('label.normal');\n    var labelInterval = labelModel.get('interval');\n\n    if (labelInterval != null && labelInterval != 'auto') {\n      return labelInterval;\n    }\n\n    var labelInterval = this._autoLabelInterval;\n\n    if (!labelInterval) {\n      labelInterval = this._autoLabelInterval = axisHelper.getAxisLabelInterval(zrUtil.map(this.scale.getTicks(), this.dataToCoord, this), axisHelper.getFormattedLabels(this, labelModel.get('formatter')), labelModel.getFont(), timelineModel.get('orient') === 'horizontal' ? 0 : 90, labelModel.get('rotate'));\n    }\n\n    return labelInterval;\n  },\n\n  /**\n   * If label is ignored.\n   * Automatically used when axis is category and label can not be all shown\n   * @public\n   * @param  {number} idx\n   * @return {boolean}\n   */\n  isLabelIgnored: function (idx) {\n    if (this.type === 'category') {\n      var labelInterval = this.getLabelInterval();\n      return typeof labelInterval === 'function' && !labelInterval(idx, this.scale.getLabel(idx)) || idx % (labelInterval + 1);\n    }\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","require(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  mergeDefaultAndTheme: function (option) {\n    ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      normal: {\n        borderColor: '#666',\n        color: 'none'\n      },\n      emphasis: {\n        borderColor: '#3E98C5'\n      } // textStyle: {},\n      // feature\n\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","var echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function (toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature;\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getModel('normal').getItemStyle());\n        path.hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n            path.setStyle({\n              text: titles[iconName],\n              textPosition: hoverStyle.textPosition || 'bottom',\n              textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n              textAlign: hoverStyle.textAlign || 'center'\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  updateLayout: function (toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n    });\n  },\n  remove: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function (ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","var env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var $a = document.createElement('a');\n  var type = model.get('type', true) || 'png';\n  $a.download = title + '.' + type;\n  $a.target = '_blank';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  });\n  $a.href = url; // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar magicTypeLang = lang.toolbox.magicType;\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z',\n    // jshint ignore:line\n    tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: '__ec_magicType_stack__'\n      }, model.get('option.stack') || {}, true);\n    }\n  },\n  'tiled': function (seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line' || seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        stack: ''\n      }, model.get('option.tiled') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack', 'tiled']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function (seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton); // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n\n  eventTool.addEventListener(textarea, 'keydown', function (e) {\n    if ((e.keyCode || e.which) === 9) {\n      // get caret position/selection\n      var val = this.value;\n      var start = this.selectionStart;\n      var end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n      this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end); // put caret at right position again\n\n      this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n      eventTool.stop(e);\n    }\n  });\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n\n// Use dataZoomSelect\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function () {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function () {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom;\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices != 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices != 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","require(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","var DataZoomModel = require(\"./DataZoomModel\");\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var DataZoomView = require(\"./DataZoomView\");\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","var echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _fastDeepEqual = require('fast-deep-equal');\n\nvar _fastDeepEqual2 = _interopRequireDefault(_fastDeepEqual);\n\nvar _sizeSensor = require('size-sensor');\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EchartsReactCore = function (_Component) {\n  _inherits(EchartsReactCore, _Component);\n\n  function EchartsReactCore(props) {\n    _classCallCheck(this, EchartsReactCore);\n\n    var _this = _possibleConstructorReturn(this, (EchartsReactCore.__proto__ || Object.getPrototypeOf(EchartsReactCore)).call(this, props));\n\n    _this.getEchartsInstance = function () {\n      return _this.echartsLib.getInstanceByDom(_this.echartsElement) || _this.echartsLib.init(_this.echartsElement, _this.props.theme, _this.props.opts);\n    };\n\n    _this.dispose = function () {\n      if (_this.echartsElement) {\n        try {\n          (0, _sizeSensor.clear)(_this.echartsElement);\n        } catch (e) {\n          console.warn(e);\n        }\n        // dispose echarts instance\n        _this.echartsLib.dispose(_this.echartsElement);\n      }\n    };\n\n    _this.rerender = function () {\n      var _this$props = _this.props,\n          onEvents = _this$props.onEvents,\n          onChartReady = _this$props.onChartReady;\n\n\n      var echartObj = _this.renderEchartDom();\n      _this.bindEvents(echartObj, onEvents || {});\n\n      // on chart ready\n      if (typeof onChartReady === 'function') _this.props.onChartReady(echartObj);\n      // on resize\n      if (_this.echartsElement) {\n        (0, _sizeSensor.bind)(_this.echartsElement, function () {\n          try {\n            echartObj.resize();\n          } catch (e) {\n            console.warn(e);\n          }\n        });\n      }\n    };\n\n    _this.bindEvents = function (instance, events) {\n      var _bindEvent = function _bindEvent(eventName, func) {\n        // ignore the event config which not satisfy\n        if (typeof eventName === 'string' && typeof func === 'function') {\n          // binding event\n          // instance.off(eventName); // 已经 dispose 在重建，所以无需 off 操作\n          instance.on(eventName, function (param) {\n            func(param, instance);\n          });\n        }\n      };\n\n      // loop and bind\n      for (var eventName in events) {\n        if (Object.prototype.hasOwnProperty.call(events, eventName)) {\n          _bindEvent(eventName, events[eventName]);\n        }\n      }\n    };\n\n    _this.renderEchartDom = function () {\n      // init the echart object\n      var echartObj = _this.getEchartsInstance();\n      // set the echart option\n      echartObj.setOption(_this.props.option, _this.props.notMerge || false, _this.props.lazyUpdate || false);\n      // set loading mask\n      if (_this.props.showLoading) echartObj.showLoading(_this.props.loadingOption || null);else echartObj.hideLoading();\n\n      return echartObj;\n    };\n\n    _this.echartsLib = _this.props.echarts; // the echarts object.\n    _this.echartsElement = null; // echarts div element\n    return _this;\n  }\n\n  // first add\n\n\n  _createClass(EchartsReactCore, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.rerender();\n    }\n\n    // update\n\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      // 以下属性修改的时候，需要 dispose 之后再新建\n      // 1. 切换 theme 的时候\n      // 2. 修改 opts 的时候\n      // 3. 修改 onEvents 的时候，这样可以取消所以之前绑定的事件 issue #151\n      if (prevProps.theme !== this.props.theme || !(0, _fastDeepEqual2['default'])(prevProps.opts, this.props.opts) || !(0, _fastDeepEqual2['default'])(prevProps.onEvents, this.props.onEvents)) {\n        this.dispose();\n\n        this.rerender(); // 重建\n        return;\n      }\n\n      // 当这些属性保持不变的时候，不 setOption\n      var pickKeys = ['option', 'notMerge', 'lazyUpdate', 'showLoading', 'loadingOption'];\n      if ((0, _fastDeepEqual2['default'])((0, _utils.pick)(this.props, pickKeys), (0, _utils.pick)(prevProps, pickKeys))) {\n        return;\n      }\n\n      // 判断是否需要 setOption，由开发者自己来确定。默认为 true\n      if (typeof this.props.shouldSetOption === 'function' && !this.props.shouldSetOption(prevProps, this.props)) {\n        return;\n      }\n\n      var echartObj = this.renderEchartDom();\n      // 样式修改的时候，可能会导致大小变化，所以触发一下 resize\n      if (!(0, _fastDeepEqual2['default'])(prevProps.style, this.props.style) || !(0, _fastDeepEqual2['default'])(prevProps.className, this.props.className)) {\n        try {\n          echartObj.resize();\n        } catch (e) {\n          console.warn(e);\n        }\n      }\n    }\n\n    // remove\n\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.dispose();\n    }\n\n    // return the echart object\n\n\n    // dispose echarts and clear size-sensor\n\n\n    // bind the events\n\n\n    // render the dom\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          style = _props.style,\n          className = _props.className;\n\n      var newStyle = _extends({\n        height: 300\n      }, style);\n      // for render\n      return _react2['default'].createElement('div', {\n        ref: function ref(e) {\n          _this2.echartsElement = e;\n        },\n        style: newStyle,\n        className: 'echarts-for-react ' + className\n      });\n    }\n  }]);\n\n  return EchartsReactCore;\n}(_react.Component);\n\nexports['default'] = EchartsReactCore;\n\n\nEchartsReactCore.propTypes = {\n  option: _propTypes2['default'].object.isRequired, // eslint-disable-line react/forbid-prop-types\n  echarts: _propTypes2['default'].object, // eslint-disable-line react/forbid-prop-types\n  notMerge: _propTypes2['default'].bool,\n  lazyUpdate: _propTypes2['default'].bool,\n  style: _propTypes2['default'].object, // eslint-disable-line react/forbid-prop-types\n  className: _propTypes2['default'].string,\n  theme: _propTypes2['default'].string,\n  onChartReady: _propTypes2['default'].func,\n  showLoading: _propTypes2['default'].bool,\n  loadingOption: _propTypes2['default'].object, // eslint-disable-line react/forbid-prop-types\n  onEvents: _propTypes2['default'].object, // eslint-disable-line react/forbid-prop-types\n  opts: _propTypes2['default'].shape({\n    devicePixelRatio: _propTypes2['default'].number,\n    renderer: _propTypes2['default'].oneOf(['canvas', 'svg']),\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].oneOf([null, undefined, 'auto'])]),\n    height: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].oneOf([null, undefined, 'auto'])])\n  }),\n  shouldSetOption: _propTypes2['default'].func\n};\n\nEchartsReactCore.defaultProps = {\n  echarts: {},\n  notMerge: false,\n  lazyUpdate: false,\n  style: {},\n  className: '',\n  theme: null,\n  onChartReady: function onChartReady() {},\n  showLoading: false,\n  loadingOption: null,\n  onEvents: {},\n  opts: {},\n  shouldSetOption: function shouldSetOption() {\n    return true;\n  }\n};","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = exports.bind = undefined;\n\nvar _sensorPool = require('./sensorPool');\n\n/**\n * 对外暴露的 bind 方法\n * @param {*} element\n * @param {*} cb\n */\nvar bind = exports.bind = function bind(element, cb) {\n  var sensor = (0, _sensorPool.getSensor)(element);\n\n  // 绑定新的方法\n  sensor.bind(cb);\n\n  // 返回 unbind 方法\n  return function () {\n    sensor.unbind(cb);\n  };\n};\n\n/**\n * 清空一个 element 中的所有监听\n * @param element\n */\n/**\n * Created by hustcc on 18/6/9.[高考时间]\n * Contract: i@hust.cc\n */\n\nvar clear = exports.clear = function clear(element) {\n  var sensor = (0, _sensorPool.getSensor)(element);\n\n  (0, _sensorPool.removeSensor)(sensor);\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSensor = exports.getSensor = undefined;\n\nvar _id = require('./id');\n\nvar _id2 = _interopRequireDefault(_id);\n\nvar _sensors = require('./sensors');\n\nvar _constant = require('./constant');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * all the sensor objects.\n * 传感器池子\n */\nvar Sensors = {};\n\n/**\n * 获取 sensor\n * @param element\n * @returns {*}\n */\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar getSensor = exports.getSensor = function getSensor(element) {\n  var sensorId = element.getAttribute(_constant.SizeSensorId);\n\n  // 1. 已经存在，则直接取这个 sensor\n  if (sensorId && Sensors[sensorId]) {\n    return Sensors[sensorId];\n  }\n\n  // 2. 不存在则创建\n  var newId = (0, _id2.default)();\n  element.setAttribute(_constant.SizeSensorId, newId);\n\n  var sensor = (0, _sensors.createSensor)(element);\n  // 添加到池子中\n  Sensors[newId] = sensor;\n\n  return sensor;\n};\n\n/**\n * 移除 sensor\n * @param sensor\n */\nvar removeSensor = exports.removeSensor = function removeSensor(sensor) {\n  var sensorId = sensor.element.getAttribute(_constant.SizeSensorId);\n\n  // 移除 attribute\n  sensor.element.removeAttribute(_constant.SizeSensorId);\n  // 移除 sensor 对应的 事件 和 dom 结构\n  sensor.destroy();\n\n  // 存在则从 pool 中移除\n  if (sensorId && Sensors[sensorId]) {\n    delete Sensors[sensorId];\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar id = 1;\n\nexports.default = function () {\n  return \"\" + id++;\n};\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = undefined;\n\nvar _object = require('./object');\n\nvar _resizeObserver = require('./resizeObserver');\n\n/**\n * 传感器使用策略\n */\n/**\n * Created by hustcc on 18/7/5.\n * Contract: i@hust.cc\n */\n\nvar createSensorFunc = function createSensorFunc() {\n  return typeof ResizeObserver !== 'undefined' ? _resizeObserver.createSensor : _object.createSensor;\n};\n\nvar createSensor = exports.createSensor = createSensorFunc();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = undefined;\n\nvar _debounce = require('../debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _constant = require('../constant');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Created by hustcc on 18/6/9.\n * Contract: i@hust.cc\n */\n\nvar createSensor = exports.createSensor = function createSensor(element) {\n  // 感应器\n  var sensor = undefined;\n  // callback\n  var listeners = [];\n\n  /**\n   * 创建 sensor 的 object DOM\n   * @returns {HTMLObjectElement}\n   */\n  var newSensor = function newSensor() {\n    // 调整样式\n    if (getComputedStyle(element).position === 'static') {\n      element.style.position = 'relative';\n    }\n\n    var obj = document.createElement('object');\n    obj.onload = function () {\n      obj.contentDocument.defaultView.addEventListener('resize', resizeListener);\n      // 直接触发一次 resize\n      resizeListener();\n    };\n    obj.setAttribute('style', _constant.SensorStyle);\n    obj.setAttribute('class', _constant.SensorClassName);\n    obj.type = 'text/html';\n\n    // 添加到 dom 结构中\n    element.appendChild(obj);\n    // 对于 ie 需要滞后，否则白屏，所以放到后面\n    obj.data = 'about:blank';\n    return obj;\n  };\n\n  /**\n   * 统一触发 listeners\n   */\n  var resizeListener = (0, _debounce2.default)(function () {\n    // 依次触发执行\n    listeners.forEach(function (listener) {\n      listener(element);\n    });\n  });\n\n  /**\n   * 监听某一个 callback\n   * @param cb\n   */\n  var bind = function bind(cb) {\n    // 如果不存在 sensor，则创建一个 object\n    if (!sensor) {\n      sensor = newSensor();\n    }\n\n    if (listeners.indexOf(cb) === -1) {\n      listeners.push(cb);\n    }\n  };\n\n  /**\n   * 完全 destroy\n   */\n  var destroy = function destroy() {\n    if (sensor && sensor.parentNode) {\n      // 移除事件\n      sensor.contentDocument.defaultView.removeEventListener('resize', resizeListener);\n      // 移除 dom\n      sensor.parentNode.removeChild(sensor);\n      // 初始化\n      sensor = undefined;\n      listeners = [];\n    }\n  };\n\n  /**\n   * 取消绑定\n   * @param cb\n   */\n  var unbind = function unbind(cb) {\n    var idx = listeners.indexOf(cb);\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    }\n\n    // 不存在 listener，并且存在 sensor object\n    // 则移除 object\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSensor = undefined;\n\nvar _debounce = require('../debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar createSensor = exports.createSensor = function createSensor(element) {\n  // 感应器\n  var sensor = undefined;\n  // callback\n  var listeners = [];\n\n  /**\n   * 统一触发 listeners\n   */\n  var resizeListener = (0, _debounce2.default)(function () {\n    // 依次触发执行\n    listeners.forEach(function (listener) {\n      listener(element);\n    });\n  });\n\n  /**\n   * 创建 sensor 的 object DOM\n   * @returns {HTMLObjectElement}\n   */\n  var newSensor = function newSensor() {\n    var sensor = new ResizeObserver(resizeListener);\n    // 监听 element\n    sensor.observe(element);\n\n    // 直接触发一次\n    resizeListener();\n    return sensor;\n  };\n\n  /**\n   * 监听某一个 callback\n   * @param cb\n   */\n  var bind = function bind(cb) {\n    if (!sensor) {\n      sensor = newSensor();\n    }\n\n    if (listeners.indexOf(cb) === -1) {\n      listeners.push(cb);\n    }\n  };\n\n  /**\n   * 完全 destroy\n   */\n  var destroy = function destroy() {\n    sensor.disconnect();\n\n    listeners = [];\n    sensor = undefined;\n  };\n\n  /**\n   * 取消绑定\n   * @param cb\n   */\n  var unbind = function unbind(cb) {\n    var idx = listeners.indexOf(cb);\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    }\n\n    // 不存在 listener，并且存在 sensor object\n    // 则移除 object\n    if (listeners.length === 0 && sensor) {\n      destroy();\n    }\n  };\n\n  return {\n    element: element,\n    bind: bind,\n    destroy: destroy,\n    unbind: unbind\n  };\n}; /**\n    * Created by hustcc on 18/7/5.\n    * Contract: i@hust.cc\n    */","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* eslint-disable import/prefer-default-export */\n\nvar pick = exports.pick = function pick(obj, keys) {\n  var r = {};\n  keys.forEach(function (key) {\n    r[key] = obj[key];\n  });\n  return r;\n};"],"sourceRoot":""}