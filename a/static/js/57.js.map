{"version":3,"sources":["utils/query.js","components/goods/listHeader/index.js"],"names":["_qs","__webpack_require__","_root","Query","this","params","parse","window","location","href","split","_this","Object","keys","forEach","key","_this2","condition","arguments","length","undefined","rule","i","field","_Query$getPageLimit","getPageLimit","page","rows","addParams","delCondition","delEmptyParams","withPageParams","delParams","getParams","path","query","search","stringify","getQuery","parseInt","historyPrefix","fashop","getPath","pathname","replace","__DEV__","assign","_react","_defaultProps","_reactRedux","_utils","Option","_select2","default","FormItem","_form2","Item","tabsList","id","title","order_typeArray","GoodsListHeader","connect","_ref","_ref$view$goods","view","goods","loading","listData","categoryList","create","state","queryParams","sale_state","category_ids","order_type","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","getQueryPath","history","push","Component","setState","_props","getFieldDecorator","_state$queryParams","treeData","categoryTreeData","map","name","value","children","_category_ids","concat","_toConsumableArray","_react2","createElement","layout","style","paddingBottom","marginBottom","borderBottom","onSubmit","label","initialValue","_input2","placeholder","width","_treeSelect2","dropdownStyle","maxHeight","overflow","treeDefaultExpandAll","allowClear","multiple","_button2","type","marginRight","htmlType","onClick","defaultProps","formdDfaultProps"],"mappings":"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","file":"static/js/57.js","sourcesContent":["import { parse, stringify } from 'qs';\nimport { __DEV__ } from '../config/root'\n// todo params class\nexport default class Query {\n    params;\n    parse() {\n        this.params = parse(window.location.href.split('?')[1])\n        return this\n    }\n\n    delEmptyParams() {\n        let params = this.params\n        Object.keys(params).forEach((key) => {\n            if (params[key] === '' || params[key] === null || params[key] === \"undefined\") {\n                delete this.params[key]\n            }\n        });\n        return this\n    }\n\n    getParams() {\n        return this.params\n    }\n\n    addParams(params) {\n        Object.keys(params).forEach((key) => {\n            this.params[key] = params[key]\n        })\n    }\n\n    // todo fixed rules eq other field\n    delParams(condition = [\n        // 等于\n        { key: 'state', rule: ['eq', 'all'] },\n        // 依赖另外个字段的存在\n        { key: 'keywords_type', rule: ['rely', 'keywords'] },\n    ]) {\n        for (var i = 0; i < condition.length; i++) {\n            let rule = condition[i].rule\n            let field = condition[i].key\n            switch (rule[0]) {\n                case 'eq':\n                    if (this.params[field] === rule[1]) {\n                        delete this.params[field]\n                    }\n                    break;\n                case 'rely':\n                    if (this.params[rule[1]] === undefined) {\n                        delete this.params[field]\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        return this\n    }\n\n    withPageParams() {\n        const { page, rows } = Query.getPageLimit()\n        this.addParams({ page, rows })\n        return this\n    }\n\n\n    /**\n     * 为了列表类型的接口调用方便\n     * @param delCondition\n     * @returns {*}\n     */\n    static invokerForListParams(delCondition = []) {\n        const QueryClass = new Query()\n        return QueryClass.parse().delEmptyParams().withPageParams().delParams(delCondition).getParams()\n    }\n\n    static getQuery() {\n        return parse(window.location.href.split('?')[1]);\n    }\n\n    static getPath(path = '', query = {}) {\n        const search = stringify(query);\n        if (search.length) {\n            return `${path}?${search}`;\n        }\n        return path;\n    }\n\n    static getPageLimit(page = 1, rows = 10) {\n        const query = Query.getQuery();\n        return {\n            page: query['page'] !== undefined && parseInt(query['page'], 10) > 0 ? parseInt(query['page'], 10) : page,\n            rows: query['rows'] !== undefined && parseInt(query['rows'], 10) > 0 ? parseInt(query['rows'], 10) : rows,\n        }\n    }\n\n    static page(page = 1, rows = 10) {\n        const { historyPrefix } = window.fashop\n        return Query.getPath(window.location.pathname.replace(__DEV__ ? historyPrefix : historyPrefix, ''), {\n            ...Query.getQuery(),\n            page,\n            rows\n        })\n    }\n\n}\n","//@flow\nimport React, { Component } from \"react\";\nimport { Button, Input, Select, TreeSelect, Form } from \"antd\";\nimport { View } from \"react-web-dom\";\nimport { formType, handleSubmitType } from \"../../../utils/flow\";\nimport { formdDfaultProps } from \"../../../utils/defaultProps\";\nimport { connect } from \"react-redux\";\nimport { dispatchType } from \"../../../utils/flow\";\nimport Query from \"../../../utils/query\";\nimport { getQueryPath } from \"../../../utils\";\n\nconst Option = Select.Option;\nconst FormItem = Form.Item;\nconst tabsList = [\n    {\n        id: 'all',\n        title: '全部',\n    }, {\n        id: '1',\n        title: '出售中',\n    }, {\n        id: '2',\n        title: '已售完',\n    }, {\n        id: '3',\n        title: '已下架',\n    }\n]\nconst order_typeArray = [\n    {\n        id: 'all',\n        title: '默认',\n    },\n    {\n        id: '1',\n        title: '商品价格低到高',\n    }, {\n        id: '2',\n        title: '商品价格高到低',\n    }, {\n        id: '3',\n        title: '销量多到少',\n    }, {\n        id: '4',\n        title: '销量少到多',\n    }, {\n        id: '5',\n        title: '库存多到少',\n    }, {\n        id: '6',\n        title: '库存少到多',\n    }, {\n        id: '7',\n        title: '创建时间早到晚',\n    }, {\n        id: '8',\n        title: '创建时间晚到早',\n    }, {\n        id: '9',\n        title: '排序高到低',\n    }, {\n        id: '10',\n        title: '排序低到高',\n    }\n]\nconst categoryTreeData = (categoryList) => {\n    return categoryList.map((e) => {\n        return {\n            title: e.name,\n            value: `${e.id}`,\n            key: `${e.id}`,\n            children: categoryTreeData(e.children || [])\n        }\n    })\n}\n\n\ntype Props = {\n    form: formType,\n    dispatch: dispatchType,\n    listData: {\n        page: number,\n        rows: number,\n        total_number: number,\n    },\n    loading: boolean,\n    categoryList: Array<{ name: string, id: number, children: any }>,\n    history: { goBack: Function, push: Function },\n\n}\n\n\n@connect(({\n              view: {\n                  goods: {\n                      loading,\n                      listData,\n                      categoryList\n                  }\n              }\n          }) => ({\n    loading,\n    listData,\n    categoryList,\n}))\n@Form.create()\nexport default class GoodsListHeader extends Component<Props, {\n    queryParams: {\n        sale_state: string,\n        title: string | null,\n        category_ids: Array<number>,\n        order_type: string\n    }\n}> {\n    static defaultProps = {\n        form: formdDfaultProps,\n    }\n    state = {\n        queryParams: {\n            sale_state: 'all',\n            title: null,\n            category_ids: [],\n            order_type: 'all'\n        }\n    }\n\n    componentDidMount() {\n        const params = Query.getQuery()\n        // console.log(params['category_ids'])\n        this.setState({\n            queryParams: {\n                sale_state: params['sale_state'] !== undefined ? params['sale_state'] : 'all',\n                title: params['title'] !== undefined ? params['title'] : null,\n                category_ids: params['category_ids'] !== undefined ? params['category_ids'] : [],\n                order_type: params['order_type'] !== undefined ? params['order_type'] : 'all',\n            }\n        })\n    }\n\n    handleSubmit = (e: handleSubmitType) => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n            console.log(values)\n            const path = getQueryPath('/goods/list', {\n                page: 1,\n                rows: 10,\n                sale_state: values.sale_state,\n                title: values.title,\n                category_ids: values.category_ids,\n                order_type: values.order_type,\n            })\n            this.props.history.push(path)\n\n        });\n    }\n\n    render() {\n        const {\n            form,\n            categoryList,\n            loading,\n        } = this.props\n        const {getFieldDecorator} = form\n        const { sale_state, title, category_ids, order_type } = this.state.queryParams\n        const treeData = categoryTreeData(categoryList)\n        // TreeSelect 只接受string\n        let _category_ids = category_ids && category_ids.length ? [...category_ids] : []\n        return (\n            <Form\n                layout=\"inline\"\n                style={{\n                    paddingBottom: '24px',\n                    marginBottom: '24px',\n                    borderBottom: '1px dashed #ededed'\n                }}\n                onSubmit={this.handleSubmit}\n            >\n                <FormItem label=\"商品名称\">\n                    {getFieldDecorator(\"title\", { initialValue: title })(\n                        <Input\n                            placeholder='请输入商品名称'\n                        />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"商品状态\"\n                >\n                    {getFieldDecorator(\"sale_state\", {\n                        initialValue: sale_state,\n                    })(\n                        <Select\n                            placeholder=\"请选择\"\n                            style={{ width: 200 }}\n                        >\n                            {\n                                tabsList.map((e, i) => (\n                                    <Option value={e.id} key={i}>{e.title}</Option>\n                                ))\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"商品分类\"\n                >\n                    {getFieldDecorator(\"category_ids\", { initialValue: _category_ids })(\n                        <TreeSelect\n                            style={{ width: 200 }}\n                            dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                            treeData={treeData}\n                            placeholder=\"请选择\"\n                            treeDefaultExpandAll\n                            allowClear={true}\n                            multiple\n                        />\n                    )}\n                </FormItem>\n                <FormItem\n                    label=\"排序\"\n                >\n                    {getFieldDecorator(\"order_type\", { initialValue: order_type })(\n                        <Select\n                            placeholder=\"请选择\"\n                            style={{ width: 200 }}\n                        >\n                            {\n                                order_typeArray.map((e, i) => (\n                                    <Option value={e.id} key={i}>{e.title}</Option>\n                                ))\n                            }\n                        </Select>\n                    )}\n                </FormItem>\n                <FormItem>\n                    <Button\n                        type=\"primary\"\n                        style={{ marginRight: 15 }}\n                        htmlType=\"submit\"\n                        loading={loading}\n                    >\n                        筛选\n                    </Button>\n                    <Button\n                        onClick={() => {\n                            this.props.history.push('/goods/list')\n                        }}\n                    >\n                        清空筛选\n                    </Button>\n                </FormItem>\n            </Form>\n        )\n    }\n}\n"],"sourceRoot":""}