{"version":3,"sources":["webpack:///./src/styles/index/index.css?a4fe","styles/index/index.css","components/pageIndex/dataDisplay.js","components/pageIndex/index.css","components/pageIndex/charts.js","components/pageIndex/systemInfo.js","pages/index/index.js","webpack:///./src/components/pageIndex/index.css?b2bd"],"names":["content","__webpack_require__","module","i","options","transform","locals","exports","push","indexWarp","_react","_reactRedux","_reactWebDom","_statistics","DataDisplay","connect","_ref","statisticsDatainfor","view","statistics","sendDataInfor","Component","this","props","_react2","default","createElement","View","className","styles","dataDisplayWarp","dataDisplay","dataDisplayItem","no_send_count","day_total","cost_average","yesterday_new_user","all_user","positive_count","yesterday_positive_count","yesterday_moderate_count","yesterday_negative_count","indexChartWarp","systemInfoWarp","loginInfoWarp","versionInfoWarp","versionImgWarp","echartView","chartOperate","infoTitle","systemInfoRow","noteListItem","noteListText","newVersionBtn","authTypeBtn","react_for_echarts","TabPane","_tabs2","MonthPicker","Charts","state","activeKey","chartDate","_moment2","format","monthSaleChartList","monthOrderChartList","customerGrowthChartList","newCustomerCostList","xAxisData","yAxisData","getOption","_this$state","_this","title","show","text","left","textStyle","color","tooltip","trigger","axisPointer","type","grid","right","bottom","containLabel","xAxis","nameGap","data","axisTick","alignWithLabel","axisLine","lineStyle","axisLabel","fontSize","yAxis","name","nameTextStyle","fontWeight","splitLine","fontFamily","series","stack","itemStyle","normal","emphasis","barBorderWidth","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","_state","initChart","date","e","list","Fetch","fetch","api","StatisticsApi","monthSalesHistogram","params","result","setState","map","item","day","sale_number","monthOrderCountHistogram","order_number","monthUserAddCountHistogram","customer_number","monthNewUserSalesHistogram","cost","_this2","_state3","onChange","tabBarExtraContent","style","width","defaultValue","dateString","id","tab","_ref3","key","_echartsForReact2","option","height","SystemInfo","_objectDestructuringEmpty","_row2","_col2","span","Index","gutter","_dataDisplay2","_charts2","_systemInfo2","store","login","app","member"],"mappings":"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","file":"static/js/10.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../node_modules/_css-loader@1.0.0@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"._1K3u_Ma53dm_N1N0lE9HG3{\\n    margin: 24px;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"indexWarp\": \"_1K3u_Ma53dm_N1N0lE9HG3\"\n};","//@flow\nimport React,{ Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View } from \"react-web-dom\";\nimport styles from './index.css'\nimport {sendDataInfor} from '../../actions/statistics';\n\n@connect(\n    ({\n        view:{statistics:{statisticsDatainfor}}\n    }) => ({\n        statisticsDatainfor\n    }),\n    {sendDataInfor}\n)\n\nexport default class DataDisplay extends Component<\n   {},\n   {}\n> {\n   componentWillMount(){\n       const { sendDataInfor } = this.props;\n       sendDataInfor();\n   }\n   render() {\n       const {statisticsDatainfor} = this.props\n       return (\n           <View className={styles.dataDisplayWarp}>\n               <View className={styles.dataDisplay}>\n                   <View className={styles.dataDisplayItem}>\n                       <span>未发货订单</span>\n                       <p>{statisticsDatainfor.no_send_count}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>当日销售额 (元)</span>\n                       <p>{statisticsDatainfor.day_total}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>平均客单价 (元)</span>\n                       <p>{statisticsDatainfor.cost_average}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>昨日新增客户</span>\n                       <p>{statisticsDatainfor.yesterday_new_user}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>累计客户</span>\n                       <p>{statisticsDatainfor.all_user}</p>\n                   </View>\n               </View>\n               <View className={styles.dataDisplay}>\n                   <View className={styles.dataDisplayItem}>\n                       <span>累计好评度</span>\n                       <p>{statisticsDatainfor.positive_count}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>昨日好评数</span>\n                       <p>{statisticsDatainfor.yesterday_positive_count}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>昨日中评数</span>\n                       <p>{statisticsDatainfor.yesterday_moderate_count}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>昨日差评数</span>\n                       <p>{statisticsDatainfor.yesterday_negative_count}</p>\n                   </View>\n                   <View className={styles.dataDisplayItem}>\n                       <span>累计好评数</span>\n                       <p>{statisticsDatainfor.positive_count}</p>\n                   </View>\n               </View>\n           </View>\n       )\n   }\n}\n","exports = module.exports = require(\"../../../node_modules/_css-loader@1.0.0@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"._2dzIp5WFRu-KF5bJq6LOxN,\\n._16dHNIT2y9iu96BIrUHypW,\\n._2CU_OgyGQzgDSVjbvplSbR{\\n    width: 100%;\\n    background-color: #fff;\\n    border-radius: 4px;\\n}\\n._2dzIp5WFRu-KF5bJq6LOxN,\\n._2CU_OgyGQzgDSVjbvplSbR{\\n    padding: 20px;\\n}\\n._2YEUMUhMQiTp2DYIWAkTPr,\\n.joouIo32neCX_mvLYEkkZ,\\n._2dzIp5WFRu-KF5bJq6LOxN,\\n._16dHNIT2y9iu96BIrUHypW{\\n    margin-bottom: 24px;\\n    width: 100%;\\n}\\n\\n._2YEUMUhMQiTp2DYIWAkTPr p,\\n.joouIo32neCX_mvLYEkkZ p{\\n    font-family: 'PingFangSC-Regular', 'PingFang SC';\\n    font-weight: 400;\\n    font-style: normal;\\n    line-height: 22px;\\n    color: rgba(0, 0, 0, 0.447058823529412);\\n    margin-bottom: 20px;\\n}\\n._2YEUMUhMQiTp2DYIWAkTPr p:last-child,\\n.joouIo32neCX_mvLYEkkZ p:last-child{\\n    margin-bottom: 0;\\n}\\n._2YEUMUhMQiTp2DYIWAkTPr p>span,\\n.joouIo32neCX_mvLYEkkZ p>span{\\n    color: rgba(0, 0, 0, 0.647058823529412);\\n}\\n._3jHOJMEwJy_maNHTy-pwli{\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n    margin-bottom: 24px;\\n}\\n._3jHOJMEwJy_maNHTy-pwli img{\\n    width: 139px;\\n    height: 90px;\\n}\\n\\n/* dataDisplay */\\n._2iIYKycTEGrx1RyHCjx9_Z{\\n    flex-direction: row;\\n}\\n._2iIYKycTEGrx1RyHCjx9_Z:first-child{\\n    padding-bottom: 24px;\\n    border-bottom: 1px dashed #ececec;\\n}\\n._2iIYKycTEGrx1RyHCjx9_Z:last-child{\\n    padding-top: 24px;\\n}\\n._2zrhDeX8VPXXHuXx64w6e{\\n    flex: 1;\\n    padding-left: 24px;\\n    border-right: 1px solid #ececec;\\n}\\n._2zrhDeX8VPXXHuXx64w6e:last-child{\\n    border-right: 0;\\n}\\n._2zrhDeX8VPXXHuXx64w6e span{\\n    color: rgb(153, 153, 153);\\n    line-height: 22px;\\n}\\n._2zrhDeX8VPXXHuXx64w6e p{\\n    font-size: 24px;\\n    color: rgba(0, 0, 0, 0.847);\\n    line-height: 38px;\\n    margin: 0;\\n}\\n\\n/* indexChart */\\n._16dHNIT2y9iu96BIrUHypW{\\n\\n}\\n._2q6mTFEVcC1TYQ9W26gM9q{\\n    height: 500px;\\n}\\n._1kk2oQLtRhGARrnpMCwLJp{\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n    height: 44px;\\n    margin-right: 10px;\\n}\\n._1kk2oQLtRhGARrnpMCwLJp p{\\n    margin: 0;\\n    margin-right: 10px;\\n    color: rgba(0, 0, 0, 0.647058823529412);\\n    font-family: 'PingFangSC-Regular', 'PingFang SC';\\n    font-weight: 400;\\n    font-style: normal;\\n    line-height: 22px;\\n    font-size: 14px;\\n}\\n._1kk2oQLtRhGARrnpMCwLJp p>span{\\n    color: #000000;\\n}\\n\\n\\n/* SystemInfo */\\n._1wHwLhbIuu8WJP8TwA0RHc{\\n    font-family: 'PingFangSC-Semibold', 'PingFang SC Semibold', 'PingFang SC';\\n    font-weight: 600;\\n    font-style: normal;\\n    font-size: 16px;\\n    color: rgba(0, 0, 0, 0.847058823529412);\\n    line-height: 24px;\\n}\\n._1_QSvt12LMTn6FvHM2nd_h{\\n    border: 1px solid #ebebeb;\\n    border-bottom: 0;\\n}\\n._1_QSvt12LMTn6FvHM2nd_h:last-child{\\n    border-bottom: 1px solid #ebebeb;\\n}\\n._1_QSvt12LMTn6FvHM2nd_h>div{\\n    font-family: 'PingFangSC-Regular', 'PingFang SC';\\n    font-size: 14px;\\n    text-align: left;\\n    line-height: 22px;\\n    padding: 10px;\\n    border-right: 1px solid #ebebeb;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n}\\n._1_QSvt12LMTn6FvHM2nd_h>div:last-child{\\n    border-right: 0;\\n}\\n._1_QSvt12LMTn6FvHM2nd_h>div:nth-child(odd){\\n    background-color: #fafafa;\\n    color: rgba(0, 0, 0, 0.447058823529412);\\n}\\n._1_QSvt12LMTn6FvHM2nd_h>div:nth-child(even){\\n    color: #666666;\\n}\\n\\n/* systemNote */\\n._1YTkpGKRiPRDvKY4OHR_mG{\\n    flex-direction: row;\\n    margin-bottom: 24px;\\n}\\n._1YTkpGKRiPRDvKY4OHR_mG:last-child{\\n    margin-bottom: 0;\\n}\\n._1eByioF50oE5naxFLqIXxf{\\n    flex: 1;\\n    flex-direction: row;\\n    justify-content: space-between;\\n}\\n\\n/* VersionInfo */\\n._3q6oT3C-sEsOIoNpcs-jcN{\\n    font-size: 12px;\\n    color: #fff;\\n    height: 24px;\\n    line-height: 24px;\\n    border-radius: 16px;\\n    background-color: #f5222d;\\n    border: 0;\\n    margin-left: 10px;\\n}\\n._3q6oT3C-sEsOIoNpcs-jcN:hover{\\n    background-color: #f5222d;\\n    color: #fff;\\n    opacity: 0.8;\\n}\\n._2GBvkjqxLyIiJ7eELopFNz{\\n    height: 20px;\\n    line-height: 20px;\\n    font-family: 'PingFangSC-Regular', 'PingFang SC';\\n    font-size: 12px;\\n    margin-right: 10px;\\n}\\n.HMLMI2-hvWk8upGNlrDHI>div:nth-child(1){\\n    width:100%!important;\\n}\\n.HMLMI2-hvWk8upGNlrDHI>div>canvas{\\n    width:100%!important;\\n}\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"dataDisplayWarp\": \"_2dzIp5WFRu-KF5bJq6LOxN\",\n\t\"indexChartWarp\": \"_16dHNIT2y9iu96BIrUHypW\",\n\t\"systemInfoWarp\": \"_2CU_OgyGQzgDSVjbvplSbR\",\n\t\"loginInfoWarp\": \"_2YEUMUhMQiTp2DYIWAkTPr\",\n\t\"versionInfoWarp\": \"joouIo32neCX_mvLYEkkZ\",\n\t\"versionImgWarp\": \"_3jHOJMEwJy_maNHTy-pwli\",\n\t\"dataDisplay\": \"_2iIYKycTEGrx1RyHCjx9_Z\",\n\t\"dataDisplayItem\": \"_2zrhDeX8VPXXHuXx64w6e\",\n\t\"echartView\": \"_2q6mTFEVcC1TYQ9W26gM9q\",\n\t\"chartOperate\": \"_1kk2oQLtRhGARrnpMCwLJp\",\n\t\"infoTitle\": \"_1wHwLhbIuu8WJP8TwA0RHc\",\n\t\"systemInfoRow\": \"_1_QSvt12LMTn6FvHM2nd_h\",\n\t\"noteListItem\": \"_1YTkpGKRiPRDvKY4OHR_mG\",\n\t\"noteListText\": \"_1eByioF50oE5naxFLqIXxf\",\n\t\"newVersionBtn\": \"_3q6oT3C-sEsOIoNpcs-jcN\",\n\t\"authTypeBtn\": \"_2GBvkjqxLyIiJ7eELopFNz\",\n\t\"react_for_echarts\": \"HMLMI2-hvWk8upGNlrDHI\"\n};","//@flow\nimport React, { Component } from \"react\";\nimport { View } from \"react-web-dom\";\nimport { Tabs, DatePicker } from 'antd';\nimport styles from './index.css'\nimport ReactEcharts from 'echarts-for-react';\nimport { StatisticsApi } from \"../../config/api/statistics\";\nimport moment from 'moment'\nimport Fetch from \"../../utils/fetch\";\n\nconst TabPane = Tabs.TabPane;\nconst { MonthPicker } = DatePicker;\nexport default class Charts extends Component<{},\n    {\n        activeKey: string,\n        chartDate: moment,\n        monthSaleChartList: Array<{\n            day: number,\n            sale_number: number\n        }>,\n        monthOrderChartList: Array<{\n            day: number,\n            order_number: number\n        }>,\n        customerGrowthChartList: Array<{\n            day: number,\n            customer_number: number\n        }>,\n        newCustomerCostList: Array<{\n            day: number,\n            cost: number\n        }>,\n        xAxisData: Array<number>,\n        yAxisData: Array<number>,\n    }> {\n    state = {\n        activeKey: '月销售额',\n        chartDate: moment(`${moment().format('YYYY')}-${moment().format('MM')}`),\n        monthSaleChartList: [],\n        monthOrderChartList: [],\n        customerGrowthChartList: [],\n        newCustomerCostList: [],\n        xAxisData: [],\n        yAxisData: [],\n    }\n\n    componentDidMount() {\n        const { activeKey, chartDate } = this.state\n        this.initChart(moment(chartDate).format('YYYY-MM'), activeKey)\n    }\n\n    async initChart(date: string, activeKey: string) {\n        const {\n            monthSaleChartList,\n            monthOrderChartList,\n            customerGrowthChartList,\n            newCustomerCostList\n        } = this.state\n        let e\n        let list\n        switch (activeKey) {\n            case '月销售额':\n                e = await Fetch.fetch({\n                    api: StatisticsApi.monthSalesHistogram,\n                    params: { date }\n                })\n                list = e.result.list\n                this.setState({\n                    monthSaleChartList: list,\n                    xAxisData: list.map((item) => {\n                        return `${item.day}日`\n                    }),\n                    yAxisData: list.map((item) => {\n                        return item.sale_number\n                    })\n                })\n                break\n            case '月订单量':\n                e = await Fetch.fetch({\n                    api: StatisticsApi.monthOrderCountHistogram,\n                    params: { date }\n                })\n                list = e.result.list\n                this.setState({\n                    monthOrderChartList: list,\n                    xAxisData: list.map((item) => {\n                        return `${item.day}日`\n                    }),\n                    yAxisData: list.map((item) => {\n                        return item.order_number\n                    })\n                })\n                break\n            case '客户增量':\n                e = await Fetch.fetch({\n                    api: StatisticsApi.monthUserAddCountHistogram,\n                    params: { date }\n                })\n                list = e.result.list\n                this.setState({\n                    customerGrowthChartList: list,\n                    xAxisData: list.map((item) => {\n                        return `${item.day}日`\n                    }),\n                    yAxisData: list.map((item) => {\n                        return item.customer_number\n                    })\n                })\n                break\n            case '新客户消费':\n                e = await Fetch.fetch({\n                    api: StatisticsApi.monthNewUserSalesHistogram,\n                    params: { date }\n                })\n                list = e.result.list\n                this.setState({\n                    newCustomerCostList: list,\n                    xAxisData: list.map((item) => {\n                        return `${item.day}日`\n                    }),\n                    yAxisData: list.map((item) => {\n                        return item.cost\n                    })\n                })\n                break\n        }\n    }\n\n    getOption = () => {\n        const { activeKey, xAxisData, yAxisData } = this.state\n        return {\n            title: {\n                show: true,\n                text: '',\n                left: 'center',\n                textStyle: {\n                    color: '#2196F3'\n                }\n            },\n            color: ['#188fff'],\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                }\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '10%',\n                containLabel: true\n            },\n            xAxis: [\n                {\n                    type: 'category',\n                    nameGap: 20,\n                    data: xAxisData,\n                    axisTick: {\n                        alignWithLabel: true\n                    },\n                    axisLine: {\n                        lineStyle: {\n                            color: '#ddd',\n                        }\n                    },\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            color: 'rgba(0, 0, 0, 0.647058823529412)',\n                            fontSize: '14'\n                        }\n                    },\n                }\n            ],\n            yAxis: [\n                {\n                    type: 'value',\n                    name: `${activeKey}`,\n                    nameGap: 24,\n                    nameTextStyle: {\n                        color: '#333',\n                        fontSize: '16',\n                        fontWeight: '600'\n                    },\n                    axisLine: {\n                        show: false\n                    },\n                    axisTick: {\n                        show: false\n                    },\n                    splitLine: {\n                        lineStyle: {\n                            color: '#ddd',\n                            type: 'dashed'\n                        }\n                    },\n                    axisLabel: {\n                        show: true,\n                        textStyle: {\n                            color: 'rgba(0, 0, 0, 0.647058823529412)',\n                            fontSize: '12',\n                            fontFamily: \"'ArialMT', 'Arial'\"\n                        }\n                    },\n                }\n            ],\n            series: [\n                {\n                    name: '数值',\n                    type: 'bar',\n                    stack: 'one',\n                    itemStyle: {\n                        normal: {},\n                        emphasis: {\n                            barBorderWidth: 1,\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowOffsetY: 0,\n                            shadowColor: 'rgba(0,0,0,0.5)'\n                        }\n                    },\n                    data: yAxisData\n                },\n            ]\n        }\n    }\n\n    render() {\n        const { activeKey, chartDate } = this.state\n        const tabList = [\n            {\n                id: 1,\n                tab: '月销售额',\n            }, {\n                id: 2,\n                tab: '月订单量',\n            }, {\n                id: '3',\n                tab: '客户增量',\n            }, {\n                id: '4',\n                tab: '新客户消费',\n            }\n        ]\n        return (\n            <View className={styles.indexChartWarp}>\n                <Tabs\n                    activeKey={activeKey}\n                    onChange={(activeKey) => {\n                        this.setState({ activeKey })\n                        this.initChart(moment(chartDate).format('YYYY-MM'), activeKey)\n                    }}\n                    tabBarExtraContent={\n                        <View className={styles.chartOperate}>\n                            {/*<p>累计：<span>￥{saleAccumulative.accumulative_amount}.00</span></p>*/}\n                            {/*<p>日均：<span>￥{saleAverage.day_average}.00</span></p>*/}\n                            <MonthPicker\n                                style={{ width: 110 }}\n                                format={'YYYY-MM'}\n                                defaultValue={chartDate}\n                                onChange={(date: moment, dateString: string) => {\n                                    const { activeKey } = this.state\n                                    this.initChart(dateString, activeKey)\n                                }}\n                            />\n                        </View>\n                    }\n                >\n                    {\n                        tabList.map(({ id, tab }) =>\n                            <TabPane tab={tab} key={tab}>\n                                <ReactEcharts\n                                    option={this.getOption()}\n                                    style={{ height: '340px', width: '100%' }}\n                                    className={styles.react_for_echarts}\n                                />\n                            </TabPane>\n                        )\n                    }\n                </Tabs>\n            </View>\n        )\n    }\n}\n","//@flow\nimport React,{ Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View } from \"react-web-dom\";\nimport { Row, Col } from 'antd';\nimport styles from './index.css'\n\n\n@connect(\n    ({})=>({}),\n    {}\n)\nexport default class SystemInfo extends Component<\n   {},\n   {}\n> {\n   render() {\n       return (\n           <View className={styles.systemInfoWarp}>\n               <h3 className={styles.infoTitle}>系统信息</h3>\n               <Row className={styles.systemInfoRow}>\n                   <Col span={4}>服务器操作系统</Col>\n                   <Col span={8}>LinuxiZ2ze36ko76auog28w4oskZ3.10.0-514.10.2.el7.x86_64</Col>\n                   <Col span={4}>服务器域名／IP</Col>\n                   <Col span={8}>fashop.chitj.com:80 [47.93.124.60]</Col>\n               </Row>\n               <Row className={styles.systemInfoRow}>\n                   <Col span={4}>服务器环境</Col>\n                   <Col span={8}>nginx/1.12.0</Col>\n                   <Col span={4}>PHP版本</Col>\n                   <Col span={8}>7.0.1</Col>\n               </Row>\n               <Row className={styles.systemInfoRow}>\n                   <Col span={4}>文件上传限制</Col>\n                   <Col span={8}>2M</Col>\n                   <Col span={4}>GD版本</Col>\n                   <Col span={8}>bundled (2.1.0 compatible)</Col>\n               </Row>\n           </View>\n       )\n   }\n}","// @flow\nimport React,{ Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { View } from \"react-web-dom\";\nimport styles from \"../../styles/index/index.css\";\nimport { Row, Col } from \"antd\";\n\nimport DataDisplay from '../../components/pageIndex/dataDisplay'\nimport Charts from '../../components/pageIndex/charts'\nimport SystemInfo from '../../components/pageIndex/systemInfo'\n\n// import LoginInfo from '../../components/pageIndex/loginInfo'\n// import VersionInfo from '../../components/pageIndex/versionInfo'\n// import SystemNote from '../../components/pageIndex/systemNote'\n\nclass Index extends Component {\n    render() {\n        return (\n            <View className={styles.indexWarp}>\n                <Row gutter={24}>\n                    <Col span={17+7} >\n                        <DataDisplay {...this.props} />\n                        <Charts {...this.props} />\n                        <SystemInfo {...this.props} />\n                    </Col>\n                    {/*<Col span={7}>*/}\n                        {/*<LoginInfo {...this.props} />*/}\n                        {/*<VersionInfo {...this.props} />*/}\n                        {/*<SystemNote {...this.props} />*/}\n                    {/*</Col>*/}\n                </Row>\n            </View>\n        )\n    }\n}\n\nconst portal = store => {\n    return {\n        login: store.app.member.login\n    }\n}\n\nexport default connect(portal)(Index)\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/_style-loader@0.18.2@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/_css-loader@1.0.0@css-loader/index.js?modules!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}