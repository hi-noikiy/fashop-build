{"version":3,"sources":["../node_modules/_react-copy-to-clipboard@5.0.1@react-copy-to-clipboard/lib/Component.js","../node_modules/_copy-to-clipboard@3.0.8@copy-to-clipboard/index.js","../node_modules/_toggle-selection@1.0.6@toggle-selection/index.js","../node_modules/_qr.js@0.0.0@qr.js/index.js","../node_modules/_qr.js@0.0.0@qr.js/lib/QRCode.js","../node_modules/_qr.js@0.0.0@qr.js/lib/8BitByte.js","../node_modules/_qr.js@0.0.0@qr.js/lib/RSBlock.js","../node_modules/_qr.js@0.0.0@qr.js/lib/BitBuffer.js","../node_modules/_qr.js@0.0.0@qr.js/lib/util.js","../node_modules/_react-copy-to-clipboard@5.0.1@react-copy-to-clipboard/lib/index.js","../node_modules/_qr.js@0.0.0@qr.js/lib/mode.js","../node_modules/_qr.js@0.0.0@qr.js/lib/ErrorCorrectLevel.js","../node_modules/_qr.js@0.0.0@qr.js/lib/Polynomial.js","../node_modules/_qr.js@0.0.0@qr.js/lib/math.js","../node_modules/_qrcode-react@0.1.16@qrcode-react/dist/index.js"],"names":["Object","defineProperty","exports","value","CopyToClipboard","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","__webpack_require__","_copyToClipboard2","obj","__esModule","default","_possibleConstructorReturn","self","ReferenceError","_React$PureComponent","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","__proto__","getPrototypeOf","apply","concat","onClick","event","_this$props","text","onCopy","children","options","elem","Children","only","result","subClass","superClass","create","constructor","setPrototypeOf","_inherits","PureComponent","_props","keys","indexOf","_objectWithoutProperties","cloneElement","defaultProps","deselectCurrent","defaultMessage","module","debug","message","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","selectNode","addRange","execCommand","Error","err","console","error","warn","window","clipboardData","setData","copyKey","test","navigator","userAgent","replace","format","prompt","removeRange","removeAllRanges","removeChild","rangeCount","active","activeElement","ranges","push","getRangeAt","tagName","toUpperCase","blur","type","forEach","focus","QRCode","ErrorCorrectLevel","qrcode","data","opt","qr","typeNumber","errorCorrectLevel","H","addData","make","BitByte","RSBlock","BitBuffer","util","Polynomial","modules","moduleCount","dataCache","dataList","proto","newData","isDark","row","col","getModuleCount","rsBlocks","getRSBlocks","buffer","totalDataCount","dataCount","put","mode","getLength","getLengthInBits","write","makeImpl","getBestMaskPattern","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y","x","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","dark","getMask","PAD0","PAD1","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","modPoly","modIndex","get","totalCodeCount","index","QR8bitByte","MODE_8BIT_BYTE","charCodeAt","ECL","QRRSBlock","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","count","L","M","Q","QRBitBuffer","bufIndex","num","bit","Mode","math","QRMaskPattern","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","gexp","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","qrCode","sameCount","darkCount","abs","QRPolynomial","shift","e","glog","ratio","QRMath","n","LOG_TABLE","EXP_TABLE","getDOMNode","React","PropTypes","ReactDOM","version","ref","findDOMNode","_React$Component","Component","nextProps","that","propTypes","some","k","update","str","out","len","charAt","String","fromCharCode","utf16to8","canvas","refs","ctx","getContext","cells","tileW","size","tileH","scale","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","getBackingStorePixelRatio","height","width","rdx","cell","cdx","fillStyle","fgColor","bgColor","w","ceil","h","fillRect","round","logo","image","src","onload","dwidth","logoWidth","dheight","logoHeight","dx","dy","drawImage","string","isRequired","number"],"mappings":"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ApO,GAAA,KAKAsE,EAAA7E,QAAAyO,wBCpBA,IAAAG,EAAAjN,EAAA,KAEA,SAAAkN,EAAAb,EAAA3D,GACA3H,KAAAsL,aACAtL,KAAA2H,YAGAwE,EAAAC,iBAQA,UACA,UACA,UACA,SAGA,UACA,UACA,UACA,UAGA,UACA,UACA,UACA,UAGA,WACA,UACA,UACA,SAGA,YACA,UACA,kBACA,kBAGA,UACA,UACA,UACA,UAGA,UACA,UACA,kBACA,kBAGA,WACA,kBACA,kBACA,kBAGA,YACA,kBACA,kBACA,kBAGA,kBACA,kBACA,kBACA,kBAGA,WACA,kBACA,kBACA,kBAGA,oBACA,kBACA,kBACA,kBAGA,YACA,kBACA,kBACA,mBAGA,sBACA,kBACA,mBACA,mBAGA,oBACA,kBACA,kBACA,WAGA,oBACA,kBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,mBAGA,sBACA,kBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,oBAGA,sBACA,WACA,mBACA,mBAGA,sBACA,WACA,mBACA,WAGA,sBACA,mBACA,oBACA,oBAGA,sBACA,mBACA,oBACA,mBAGA,sBACA,mBACA,mBACA,oBAGA,uBACA,mBACA,mBACA,mBAGA,sBACA,mBACA,mBACA,oBAGA,uBACA,mBACA,mBACA,oBAGA,sBACA,mBACA,mBACA,oBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,mBACA,mBACA,oBAGA,aACA,oBACA,oBACA,oBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,oBACA,mBACA,mBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,mBACA,oBACA,mBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,oBACA,oBACA,oBAGA,uBACA,mBACA,oBACA,oBAGA,uBACA,oBACA,oBACA,oBAGAD,EAAA3E,YAAA,SAAArB,EAAAC,GAEA,IAAAiG,EAAAF,EAAAG,gBAAAnG,EAAAC,GAEA,QAAA3I,GAAA4O,EACA,UAAAtI,MAAA,6BAAAoC,EAAA,sBAAAC,GAOA,IAJA,IAAArI,EAAAsO,EA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","file":"static/js/69.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CopyToClipboard = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _copyToClipboard = require('copy-to-clipboard');\n\nvar _copyToClipboard2 = _interopRequireDefault(_copyToClipboard);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CopyToClipboard = exports.CopyToClipboard = function (_React$PureComponent) {\n  _inherits(CopyToClipboard, _React$PureComponent);\n\n  function CopyToClipboard() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CopyToClipboard);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CopyToClipboard.__proto__ || Object.getPrototypeOf(CopyToClipboard)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (event) {\n      var _this$props = _this.props,\n          text = _this$props.text,\n          onCopy = _this$props.onCopy,\n          children = _this$props.children,\n          options = _this$props.options;\n\n\n      var elem = _react2.default.Children.only(children);\n\n      var result = (0, _copyToClipboard2.default)(text, options);\n\n      if (onCopy) {\n        onCopy(text, result);\n      }\n\n      // Bypass onClick if it was present\n      if (elem && elem.props && typeof elem.props.onClick === 'function') {\n        elem.props.onClick(event);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CopyToClipboard, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          _text = _props.text,\n          _onCopy = _props.onCopy,\n          _options = _props.options,\n          children = _props.children,\n          props = _objectWithoutProperties(_props, ['text', 'onCopy', 'options', 'children']);\n\n      var elem = _react2.default.Children.only(children);\n\n      return _react2.default.cloneElement(elem, _extends({}, props, { onClick: this.onClick }));\n    }\n  }]);\n\n  return CopyToClipboard;\n}(_react2.default.PureComponent);\n\nCopyToClipboard.defaultProps = {\n  onCopy: undefined,\n  options: undefined\n};","'use strict';\n\nvar deselectCurrent = require('toggle-selection');\n\nvar defaultMessage = 'Copy to clipboard: #{key}, Enter';\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug, message, reselectPrevious, range, selection, mark, success = false;\n  if (!options) { options = {}; }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement('span');\n    mark.textContent = text;\n    // reset user styles for span element\n    mark.style.all = 'unset';\n    // prevents scrolling to the end of the page\n    mark.style.position = 'fixed';\n    mark.style.top = 0;\n    mark.style.clip = 'rect(0, 0, 0, 0)';\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = 'pre';\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = 'text';\n    mark.style.MozUserSelect = 'text';\n    mark.style.msUserSelect = 'text';\n    mark.style.userSelect = 'text';\n\n    document.body.appendChild(mark);\n\n    range.selectNode(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand('copy');\n    if (!successful) {\n      throw new Error('copy command was unsuccessful');\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error('unable to copy using execCommand: ', err);\n    debug && console.warn('trying IE specific stuff');\n    try {\n      window.clipboardData.setData('text', text);\n      success = true;\n    } catch (err) {\n      debug && console.error('unable to copy using clipboardData: ', err);\n      debug && console.error('falling back to prompt');\n      message = format('message' in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == 'function') {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","var QRCode = require('./lib/QRCode');\r\nvar ErrorCorrectLevel = require('./lib/ErrorCorrectLevel');\r\n\r\nvar qrcode = function(data, opt) {\r\n\topt = opt || {};\r\n\tvar qr = new QRCode(opt.typeNumber || -1,\r\n\t\t\t\t\t\topt.errorCorrectLevel || ErrorCorrectLevel.H);\r\n\tqr.addData(data);\r\n\tqr.make();\r\n\r\n\treturn qr;\r\n};\r\n\r\nqrcode.ErrorCorrectLevel = ErrorCorrectLevel;\r\n\r\nmodule.exports = qrcode;\r\n\r\n","var BitByte = require('./8BitByte');\nvar RSBlock = require('./RSBlock');\nvar BitBuffer = require('./BitBuffer');\nvar util = require('./util');\nvar Polynomial = require('./Polynomial');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\n// for client side minification\nvar proto = QRCode.prototype;\n\nproto.addData = function(data) {\n\tvar newData = new BitByte(data);\n\tthis.dataList.push(newData);\n\tthis.dataCache = null;\n};\n\nproto.isDark = function(row, col) {\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\tthrow new Error(row + \",\" + col);\n\t}\n\treturn this.modules[row][col];\n};\n\nproto.getModuleCount = function() {\n\treturn this.moduleCount;\n};\n\nproto.make = function() {\n\t// Calculate automatically typeNumber if provided is < 1\n\tif (this.typeNumber < 1 ){\n\t\tvar typeNumber = 1;\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\tvar buffer = new BitBuffer();\n\t\t\tvar totalDataCount = 0;\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\tvar data = this.dataList[i];\n\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\tdata.write(buffer);\n\t\t\t}\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.typeNumber = typeNumber;\n\t}\n\tthis.makeImpl(false, this.getBestMaskPattern() );\n};\n\nproto.makeImpl = function(test, maskPattern) {\n\t\n\tthis.moduleCount = this.typeNumber * 4 + 17;\n\tthis.modules = new Array(this.moduleCount);\n\t\n\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\n\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t}\n\t}\n\n\tthis.setupPositionProbePattern(0, 0);\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\tthis.setupPositionAdjustPattern();\n\tthis.setupTimingPattern();\n\tthis.setupTypeInfo(test, maskPattern);\n\t\n\tif (this.typeNumber >= 7) {\n\t\tthis.setupTypeNumber(test);\n\t}\n\n\tif (this.dataCache == null) {\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t}\n\n\tthis.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function(row, col)  {\n\t\n\tfor (var r = -1; r <= 7; r++) {\n\t\t\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\n\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t} else {\n\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t}\n\t\t}\t\t\n\t}\t\t\n};\n\nproto.getBestMaskPattern = function() {\n\n\tvar minLostPoint = 0;\n\tvar pattern = 0;\n\n\tfor (var i = 0; i < 8; i++) {\n\t\t\n\t\tthis.makeImpl(true, i);\n\n\t\tvar lostPoint = util.getLostPoint(this);\n\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\tminLostPoint = lostPoint;\n\t\t\tpattern = i;\n\t\t}\n\t}\n\n\treturn pattern;\n};\n\nproto.createMovieClip = function(target_mc, instance_name, depth) {\n\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\tvar cs = 1;\n\n\tthis.make();\n\n\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\n\t\tvar y = row * cs;\n\t\t\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n\t\t\tvar x = col * cs;\n\t\t\tvar dark = this.modules[row][col];\n\t\t\n\t\t\tif (dark) {\n\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\tqr_mc.endFill();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn qr_mc;\n};\n\nproto.setupTimingPattern = function() {\n\t\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\tif (this.modules[r][6] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[r][6] = (r % 2 == 0);\n\t}\n\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\tif (this.modules[6][c] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[6][c] = (c % 2 == 0);\n\t}\n};\n\nproto.setupPositionAdjustPattern = function() {\n\n\tvar pos = util.getPatternPosition(this.typeNumber);\n\t\n\tfor (var i = 0; i < pos.length; i++) {\n\t\n\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\n\t\t\tvar row = pos[i];\n\t\t\tvar col = pos[j];\n\t\t\t\n\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nproto.setupTypeNumber = function(test) {\n\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t}\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t}\n};\n\nproto.setupTypeInfo = function(test, maskPattern) {\n\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\tvar bits = util.getBCHTypeInfo(data);\n\n\t// vertical\t\t\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\n\t\tif (i < 6) {\n\t\t\tthis.modules[i][8] = mod;\n\t\t} else if (i < 8) {\n\t\t\tthis.modules[i + 1][8] = mod;\n\t\t} else {\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t}\n\t}\n\n\t// horizontal\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\n\t\tif (i < 8) {\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t} else if (i < 9) {\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t} else {\n\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t}\n\t}\n\n\t// fixed module\n\tthis.modules[this.moduleCount - 8][8] = (!test);\n};\n\nproto.mapData = function(data, maskPattern) {\n\t\n\tvar inc = -1;\n\tvar row = this.moduleCount - 1;\n\tvar bitIndex = 7;\n\tvar byteIndex = 0;\n\t\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\tif (col == 6) col--;\n\n\t\twhile (true) {\n\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\n\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\trow += inc;\n\n\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\trow -= inc;\n\t\t\t\tinc = -inc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new BitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t+ buffer.getLengthInBits()\n\t\t\t+ \">\"\n\t\t\t+  totalDataCount * 8\n\t\t\t+ \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var i = 0; i < maxDcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < maxEcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n};\n\nmodule.exports = QRCode;\n\n","var mode = require('./mode');\n\nfunction QR8bitByte(data) {\n\tthis.mode = mode.MODE_8BIT_BYTE;\n\tthis.data = data;\n}\n\nQR8bitByte.prototype = {\n\n\tgetLength : function(buffer) {\n\t\treturn this.data.length;\n\t},\n\t\n\twrite : function(buffer) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// not JIS ...\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t}\n\t}\n};\n\nmodule.exports = QR8bitByte;\n\n","// ErrorCorrectLevel\nvar ECL = require('./ErrorCorrectLevel');\n\nfunction QRRSBlock(totalCount, dataCount) {\n\tthis.totalCount = totalCount;\n\tthis.dataCount  = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n\n\t// L\n\t// M\n\t// Q\n\t// H\n\n\t// 1\n\t[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\t\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\n\t// 4\t\t\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\t\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\t\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\t\n\t// 7\t\t\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\t\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\t\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\t\n\t// 10\t\t\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16],\n\n\t// 11\n\t[4, 101, 81],\n\t[1, 80, 50, 4, 81, 51],\n\t[4, 50, 22, 4, 51, 23],\n\t[3, 36, 12, 8, 37, 13],\n\n\t// 12\n\t[2, 116, 92, 2, 117, 93],\n\t[6, 58, 36, 2, 59, 37],\n\t[4, 46, 20, 6, 47, 21],\n\t[7, 42, 14, 4, 43, 15],\n\n\t// 13\n\t[4, 133, 107],\n\t[8, 59, 37, 1, 60, 38],\n\t[8, 44, 20, 4, 45, 21],\n\t[12, 33, 11, 4, 34, 12],\n\n\t// 14\n\t[3, 145, 115, 1, 146, 116],\n\t[4, 64, 40, 5, 65, 41],\n\t[11, 36, 16, 5, 37, 17],\n\t[11, 36, 12, 5, 37, 13],\n\n\t// 15\n\t[5, 109, 87, 1, 110, 88],\n\t[5, 65, 41, 5, 66, 42],\n\t[5, 54, 24, 7, 55, 25],\n\t[11, 36, 12],\n\n\t// 16\n\t[5, 122, 98, 1, 123, 99],\n\t[7, 73, 45, 3, 74, 46],\n\t[15, 43, 19, 2, 44, 20],\n\t[3, 45, 15, 13, 46, 16],\n\n\t// 17\n\t[1, 135, 107, 5, 136, 108],\n\t[10, 74, 46, 1, 75, 47],\n\t[1, 50, 22, 15, 51, 23],\n\t[2, 42, 14, 17, 43, 15],\n\n\t// 18\n\t[5, 150, 120, 1, 151, 121],\n\t[9, 69, 43, 4, 70, 44],\n\t[17, 50, 22, 1, 51, 23],\n\t[2, 42, 14, 19, 43, 15],\n\n\t// 19\n\t[3, 141, 113, 4, 142, 114],\n\t[3, 70, 44, 11, 71, 45],\n\t[17, 47, 21, 4, 48, 22],\n\t[9, 39, 13, 16, 40, 14],\n\n\t// 20\n\t[3, 135, 107, 5, 136, 108],\n\t[3, 67, 41, 13, 68, 42],\n\t[15, 54, 24, 5, 55, 25],\n\t[15, 43, 15, 10, 44, 16],\n\n\t// 21\n\t[4, 144, 116, 4, 145, 117],\n\t[17, 68, 42],\n\t[17, 50, 22, 6, 51, 23],\n\t[19, 46, 16, 6, 47, 17],\n\n\t// 22\n\t[2, 139, 111, 7, 140, 112],\n\t[17, 74, 46],\n\t[7, 54, 24, 16, 55, 25],\n\t[34, 37, 13],\n\n\t// 23\n\t[4, 151, 121, 5, 152, 122],\n\t[4, 75, 47, 14, 76, 48],\n\t[11, 54, 24, 14, 55, 25],\n\t[16, 45, 15, 14, 46, 16],\n\n\t// 24\n\t[6, 147, 117, 4, 148, 118],\n\t[6, 73, 45, 14, 74, 46],\n\t[11, 54, 24, 16, 55, 25],\n\t[30, 46, 16, 2, 47, 17],\n\n\t// 25\n\t[8, 132, 106, 4, 133, 107],\n\t[8, 75, 47, 13, 76, 48],\n\t[7, 54, 24, 22, 55, 25],\n\t[22, 45, 15, 13, 46, 16],\n\n\t// 26\n\t[10, 142, 114, 2, 143, 115],\n\t[19, 74, 46, 4, 75, 47],\n\t[28, 50, 22, 6, 51, 23],\n\t[33, 46, 16, 4, 47, 17],\n\n\t// 27\n\t[8, 152, 122, 4, 153, 123],\n\t[22, 73, 45, 3, 74, 46],\n\t[8, 53, 23, 26, 54, 24],\n\t[12, 45, 15, 28, 46, 16],\n\n\t// 28\n\t[3, 147, 117, 10, 148, 118],\n\t[3, 73, 45, 23, 74, 46],\n\t[4, 54, 24, 31, 55, 25],\n\t[11, 45, 15, 31, 46, 16],\n\n\t// 29\n\t[7, 146, 116, 7, 147, 117],\n\t[21, 73, 45, 7, 74, 46],\n\t[1, 53, 23, 37, 54, 24],\n\t[19, 45, 15, 26, 46, 16],\n\n\t// 30\n\t[5, 145, 115, 10, 146, 116],\n\t[19, 75, 47, 10, 76, 48],\n\t[15, 54, 24, 25, 55, 25],\n\t[23, 45, 15, 25, 46, 16],\n\n\t// 31\n\t[13, 145, 115, 3, 146, 116],\n\t[2, 74, 46, 29, 75, 47],\n\t[42, 54, 24, 1, 55, 25],\n\t[23, 45, 15, 28, 46, 16],\n\n\t// 32\n\t[17, 145, 115],\n\t[10, 74, 46, 23, 75, 47],\n\t[10, 54, 24, 35, 55, 25],\n\t[19, 45, 15, 35, 46, 16],\n\n\t// 33\n\t[17, 145, 115, 1, 146, 116],\n\t[14, 74, 46, 21, 75, 47],\n\t[29, 54, 24, 19, 55, 25],\n\t[11, 45, 15, 46, 46, 16],\n\n\t// 34\n\t[13, 145, 115, 6, 146, 116],\n\t[14, 74, 46, 23, 75, 47],\n\t[44, 54, 24, 7, 55, 25],\n\t[59, 46, 16, 1, 47, 17],\n\n\t// 35\n\t[12, 151, 121, 7, 152, 122],\n\t[12, 75, 47, 26, 76, 48],\n\t[39, 54, 24, 14, 55, 25],\n\t[22, 45, 15, 41, 46, 16],\n\n\t// 36\n\t[6, 151, 121, 14, 152, 122],\n\t[6, 75, 47, 34, 76, 48],\n\t[46, 54, 24, 10, 55, 25],\n\t[2, 45, 15, 64, 46, 16],\n\n\t// 37\n\t[17, 152, 122, 4, 153, 123],\n\t[29, 74, 46, 14, 75, 47],\n\t[49, 54, 24, 10, 55, 25],\n\t[24, 45, 15, 46, 46, 16],\n\n\t// 38\n\t[4, 152, 122, 18, 153, 123],\n\t[13, 74, 46, 32, 75, 47],\n\t[48, 54, 24, 14, 55, 25],\n\t[42, 45, 15, 32, 46, 16],\n\n\t// 39\n\t[20, 147, 117, 4, 148, 118],\n\t[40, 75, 47, 7, 76, 48],\n\t[43, 54, 24, 22, 55, 25],\n\t[10, 45, 15, 67, 46, 16],\n\n\t// 40\n\t[19, 148, 118, 6, 149, 119],\n\t[18, 75, 47, 31, 76, 48],\n\t[34, 54, 24, 34, 55, 25],\n\t[20, 45, 15, 61, 46, 16]\n];\n\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\tif (rsBlock == undefined) {\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t}\n\n\tvar length = rsBlock.length / 3;\n\t\n\tvar list = new Array();\n\t\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar count = rsBlock[i * 3 + 0];\n\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n\t\tfor (var j = 0; j < count; j++) {\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t}\n\t}\n\t\n\treturn list;\n}\n\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n\tswitch(errorCorrectLevel) {\n\tcase ECL.L :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\tcase ECL.M :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\tcase ECL.Q :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\tcase ECL.H :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\tdefault :\n\t\treturn undefined;\n\t}\n}\n\nmodule.exports = QRRSBlock;\n","function QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget : function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t},\n\t\n\tput : function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t}\n\t},\n\t\n\tgetLengthInBits : function() {\n\t\treturn this.length;\n\t},\n\t\n\tputBit : function(bit) {\n\t\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\t\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t}\n\t\n\t\tthis.length++;\n\t}\n};\n\nmodule.exports = QRBitBuffer;\n","var Mode = require('./mode');\nvar Polynomial = require('./Polynomial');\nvar math = require('./math');\n\nvar QRMaskPattern = {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new Polynomial([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n};\n\nmodule.exports = QRUtil;\n","'use strict';\n\nvar _require = require('./Component'),\n    CopyToClipboard = _require.CopyToClipboard;\n\nCopyToClipboard.CopyToClipboard = CopyToClipboard;\nmodule.exports = CopyToClipboard;","module.exports = {\n\tMODE_NUMBER :\t\t1 << 0,\n\tMODE_ALPHA_NUM : \t1 << 1,\n\tMODE_8BIT_BYTE : \t1 << 2,\n\tMODE_KANJI :\t\t1 << 3\n};\n","module.exports = {\n\tL : 1,\n\tM : 0,\n\tQ : 3,\n\tH : 2\n};\n\n","var math = require('./math');\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\nmodule.exports = QRPolynomial;\n","var QRMath = {\n\n\tglog : function(n) {\n\t\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\t\t\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t\n\tgexp : function(n) {\n\t\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\t\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\t\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\t\n\tEXP_TABLE : new Array(256),\n\t\n\tLOG_TABLE : new Array(256)\n\n};\n\t\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n}\n\nmodule.exports = QRMath;\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar ReactDOM = require('react-dom');\nvar qr = require('qr.js');\n\nfunction getBackingStorePixelRatio(ctx) {\n    return ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n}\n\nvar getDOMNode;\nif (/^0\\.14/.test(React.version)) {\n    getDOMNode = function getDOMNode(ref) {\n        return ref;\n    };\n} else {\n    getDOMNode = function getDOMNode(ref) {\n        return ReactDOM.findDOMNode(ref);\n    };\n}\n\nvar QRCode = function (_React$Component) {\n    _inherits(QRCode, _React$Component);\n\n    function QRCode() {\n        _classCallCheck(this, QRCode);\n\n        return _possibleConstructorReturn(this, (QRCode.__proto__ || Object.getPrototypeOf(QRCode)).apply(this, arguments));\n    }\n\n    _createClass(QRCode, [{\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps) {\n            var that = this;\n            return Object.keys(QRCode.propTypes).some(function (k) {\n                return that.props[k] !== nextProps[k];\n            });\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.update();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.update();\n        }\n    }, {\n        key: 'utf16to8',\n        value: function utf16to8(str) {\n            var out, i, len, c;\n            out = \"\";\n            len = str.length;\n            for (i = 0; i < len; i++) {\n                c = str.charCodeAt(i);\n                if (c >= 0x0001 && c <= 0x007F) {\n                    out += str.charAt(i);\n                } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | c >> 12 & 0x0F);\n                    out += String.fromCharCode(0x80 | c >> 6 & 0x3F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                } else {\n                    out += String.fromCharCode(0xC0 | c >> 6 & 0x1F);\n                    out += String.fromCharCode(0x80 | c >> 0 & 0x3F);\n                }\n            }\n            return out;\n        }\n    }, {\n        key: 'update',\n        value: function update() {\n            var value = this.utf16to8(this.props.value);\n            var qrcode = qr(value);\n            var canvas = getDOMNode(this.refs.canvas);\n\n            var ctx = canvas.getContext('2d');\n            var cells = qrcode.modules;\n            var tileW = this.props.size / cells.length;\n            var tileH = this.props.size / cells.length;\n            var scale = (window.devicePixelRatio || 1) / getBackingStorePixelRatio(ctx);\n            canvas.height = canvas.width = this.props.size * scale;\n            ctx.scale(scale, scale);\n\n            cells.forEach(function (row, rdx) {\n                row.forEach(function (cell, cdx) {\n                    ctx.fillStyle = cell ? this.props.fgColor : this.props.bgColor;\n                    var w = Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW);\n                    var h = Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH);\n                    ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h);\n                }, this);\n            }, this);\n\n            if (this.props.logo) {\n                var self = this;\n                var size = this.props.size;\n                var image = document.createElement('img');\n                image.src = this.props.logo;\n                image.onload = function () {\n                    var dwidth = self.props.logoWidth || size * 0.2;\n                    var dheight = self.props.logoHeight || image.height / image.width * dwidth;\n                    var dx = (size - dwidth) / 2;\n                    var dy = (size - dheight) / 2;\n                    image.width = dwidth;\n                    image.height = dheight;\n                    ctx.drawImage(image, dx, dy, dwidth, dheight);\n                };\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement('canvas', {\n                style: { height: this.props.size, width: this.props.size },\n                height: this.props.size,\n                width: this.props.size,\n                ref: 'canvas'\n            });\n        }\n    }]);\n\n    return QRCode;\n}(React.Component);\n\nQRCode.propTypes = {\n    value: PropTypes.string.isRequired,\n    size: PropTypes.number,\n    bgColor: PropTypes.string,\n    fgColor: PropTypes.string,\n    logo: PropTypes.string,\n    logoWidth: PropTypes.number,\n    logoHeight: PropTypes.number\n};\n\nQRCode.defaultProps = {\n    size: 128,\n    bgColor: '#FFFFFF',\n    fgColor: '#000000',\n    value: 'http://facebook.github.io/react/'\n};\n\nmodule.exports = QRCode;\n"],"sourceRoot":""}