{"version":3,"sources":["pages/shop/decorate.js","utils/defaultProps.js"],"names":["_react","__webpack_require__","_reactRedux","_reactRouterDom","_utils","routerRedux","TabPane","_tabs2","default","Decorate","connect","Component","_props","this","props","match","routerData","location","dispatch","routes","getRoutes","path","pathname","replace","TabsView","_react2","createElement","activeKey","tabBarStyle","paddingLeft","backgroundColor","borderBottom","marginBottom","onChange","push","url","key","tab","map","tabListItem","Switch","item","Route","component","exact","Redirect","from","to","formdDfaultProps","getFieldDecorator","resetFields","validateFields","dispatchProps"],"mappings":"0aACA,IAAAA,EAAAC,EAAA,UACAC,EAAAD,EAAA,IAGAE,GADAF,EAAA,IACAA,EAAA,KACAG,EAAAH,EAAA,IAEYI,GADZJ,EAAA,4JACAA,EAAA,0DAEA,IAAMK,EAAUC,EAAAC,QAAKF,QA2BAG,GADpB,EAAAP,EAAAQ,2rBACqCC,iDAE9B,IADKC,EAkB6CC,KAAKC,MAA/CC,EAlBHH,EAkBGG,MAAOC,EAlBVJ,EAkBUI,WAAYC,EAlBtBL,EAkBsBK,SAAUC,EAlBhCN,EAkBgCM,SAC/BC,GAAS,EAAAf,EAAAgB,WAAUL,EAAMM,KAAML,GAE/BK,EAAOJ,EAASK,SAASC,QAAWR,EAAMM,KAAnC,IAA4C,IACnDG,EACQ,WAATH,GAA8B,aAATA,EAClBI,EAAAjB,QAAAkB,cAAAnB,EAAAC,SACImB,UAAWN,EACXO,aAdJC,YAAa,OACbC,gBAAiB,OACjBC,aAAc,oBACdC,aAAc,OAYVC,SAAU,SAACN,GACPT,EAASb,EAAY6B,KAAQnB,EAAMoB,IAA1B,IAAiCR,QAzBlDS,IAAK,SACLC,IAAK,SAELD,IAAK,WACLC,IAAK,UAwBQC,IAAI,SAACC,GAAD,OAAiBd,EAAAjB,QAAAkB,cAACpB,GAAQ+B,IAAKE,EAAYF,IAAKD,IAAKG,EAAYH,SACxE,KAElB,OACIX,EAAAjB,QAAAkB,cAAA,WACKF,GAAsB,KAEnBC,EAAAjB,QAAAkB,cAACvB,EAAAqC,OAAD,KACKrB,EAAOmB,IAAI,SAACG,GACT,OAAOhB,EAAAjB,QAAAkB,cAACvB,EAAAuC,OAAMN,IAAKK,EAAKL,IAAKf,KAAMoB,EAAKpB,KAAMsB,UAAWF,EAAKE,UAAWC,MAAOH,EAAKG,UAEzFnB,EAAAjB,QAAAkB,cAACvB,EAAA0C,UAAST,IAAI,iBAAiBQ,OAAA,EAAME,KAAK,iBAAiBC,GAAG,mDA3CjEtC,qHCrCRuC,oBACTC,kBAAmB,aACnBC,YAAa,aACbC,eAAgB,cAEPC,gBAAgB","file":"static/js/14.js","sourcesContent":["//@flow\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Tabs } from 'antd';\nimport { historyType } from '../../utils/flow';\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { getRoutes } from \"../../utils\";\nimport { dispatchProps } from \"../../utils/defaultProps\";\nimport * as routerRedux from 'react-router-redux';\n\nconst TabPane = Tabs.TabPane;\n\ntype Props = {\n    history: historyType,\n    getShopInfo: Function,\n    editGoodsCategoryStyle: Function,\n    editShopColorScheme: Function,\n    editPortalTemplate: Function,\n    shopInfo: {\n        info: {\n            logo: string,\n            name: string,\n            contact_number: string,\n            description: string,\n            portal_template_id: number,\n            goods_category_style: number,\n            color_scheme: number,\n        }\n    },\n    routerData: {},\n    dispatch: dispatchProps,\n    location: { state: { type: string, record: {} }, search: string, pathname: string },\n    match: { url: string, path: string }\n}\ntype State = {}\n\n@connect()\nexport default class Decorate extends Component<Props, State> {\n    render() {\n        const tabList = [\n            {\n                key: 'portal',\n                tab: '店铺主页',\n            }, {\n                key: 'category',\n                tab: '店铺分类页',\n            }\n        ]\n        const TabsStyle = {\n            tab: {\n                paddingLeft: \"20px\",\n                backgroundColor: \"#fff\",\n                borderBottom: \"1px solid #e9e9e9\",\n                marginBottom: \"0px\"\n            }\n        }\n        const { match, routerData, location, dispatch } = this.props;\n        const routes = getRoutes(match.path, routerData);\n\n        const path = location.pathname.replace(`${match.path}/`, '')\n        const TabsView = (\n            (path === 'portal' || path === 'category') ?\n                <Tabs\n                    activeKey={path}\n                    tabBarStyle={TabsStyle.tab}\n                    onChange={(activeKey) => {\n                        dispatch(routerRedux.push(`${match.url}/${activeKey}`))\n                    }}\n                >\n                    {tabList.map((tabListItem) => <TabPane tab={tabListItem.tab} key={tabListItem.key} />)}\n                </Tabs> : null\n        )\n        return (\n            <div>\n                {TabsView ? TabsView : null}\n                {\n                    <Switch>\n                        {routes.map((item)=>{\n                            return <Route key={item.key} path={item.path} component={item.component} exact={item.exact} />\n                        })}\n                        <Redirect key=\"/shop/decorate\" exact from=\"/shop/decorate\" to=\"/shop/decorate/portal\" />\n                    </Switch>\n                }\n            </div>\n        )\n    }\n}\n","export const formdDfaultProps = {\n    getFieldDecorator: ()=>{},\n    resetFields: ()=>{},\n    validateFields: ()=>{},\n}\nexport const dispatchProps = ()=>{}\n"],"sourceRoot":""}